<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dominic Royé on Dominic Royé</title>
    <link>https://dominicroye.github.io/en/</link>
    <description>Recent content in Dominic Royé on Dominic Royé</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2018-2021 Dominic Royé. All rights reserved.</copyright>
    <lastBuildDate>Tue, 11 May 2021 00:00:00 +0200</lastBuildDate>
    <atom:link href="/en/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Climate and Weather</title>
      <link>https://dominicroye.github.io/en/graphs/climate/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0200</pubDate>
      
      <guid>https://dominicroye.github.io/en/graphs/climate/</guid>
      <description>

&lt;p&gt;&lt;center&gt;&lt;/p&gt;

&lt;h2 id=&#34;videos&#34;&gt;Videos&lt;/h2&gt;

&lt;p&gt;&lt;/center&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/547991537&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

The average temperature of 24 hours in August 2020 for Europe. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/547988062&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

The average temperature of 24 hours in January 2020. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/463433737&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Smoothed daily rainfall throughout the year in Australia. Data: &lt;a href=&#34;https://www.longpaddock.qld.gov.au/silo/&#34; target=&#34;_blank&#34;&gt;SILO&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/456174777&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Smoothed daily maximum temperature throughout the year in Australia. Data: &lt;a href=&#34;https://www.longpaddock.qld.gov.au/silo/&#34; target=&#34;_blank&#34;&gt;SILO&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423985141&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

How do the spatial patterns of daily precipitation change throughout the year in Europe? Data: &lt;a href=&#34;https://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34;&gt;E-OBS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423994388&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Smoothed daily maximum temperature throughout the year in the contiguous USA. Data: &lt;a href=&#34;http://www.prism.oregonstate.edu/&#34; target=&#34;_blank&#34;&gt;PRISM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423985180&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Smoothed daily maximum temperature throughout the year in Europe. Data: &lt;a href=&#34;https://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34;&gt;E-OBS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423985224&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

How do the spatial patterns of daily precipitation change throughout the year in mainland Spain and the Balearic Islands? Data: &lt;a href=&#34;https://digital.csic.es/handle/10261/141218&#34; target=&#34;_blank&#34;&gt;SPREAD&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423985381&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Smoothed daily sea surface temperature throughout the year for the Northeast Atlantic, the Mediterranean, North and Black Sea. Data: &lt;a href=&#34;https://data.nodc.noaa.gov/cgi-bin/iso?id=gov.noaa.ncdc:C00680&#34; target=&#34;_blank&#34;&gt;NOAA/NODC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423986810&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Probability of a summer day (maximum temperature greater than 25ºC/77ºF) through the year in Europe. Data: &lt;a href=&#34;https://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34;&gt;E-OBS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423984146&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Probability of a summer day (maximum temperature greater than 25ºC/77ºF) through the year in the Contiguous United States. Data: &lt;a href=&#34;http://www.prism.oregonstate.edu/&#34; target=&#34;_blank&#34;&gt;PRISM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/361834516&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Probability of a summer day (maximum temperature greater than 25ºC) through the year in Australia. Data: &lt;a href=&#34;https://www.longpaddock.qld.gov.au/silo/&#34; target=&#34;_blank&#34;&gt;SILO&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/310077447&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Probability of a frost day (minimum temperature less than 0ºC) through the year in Europe. Data: &lt;a href=&#34;http://c3surf.knmi.nl/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34;&gt;E-OBS 18e&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/310070253&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

Probability of a frost day (minimum temperature less than 0ºC/32ºF) through the year in the Contiguous United States. Data: &lt;a href=&#34;https://developers.google.com/earth-engine/datasets/catalog/OREGONSTATE_PRISM_AN81m&#34; target=&#34;_blank&#34;&gt;PRISM&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;/p&gt;

&lt;h2 id=&#34;graphics&#34;&gt;Graphics&lt;/h2&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;



&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  


  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;¿Cómo fue el año 2019? Calendario de viento para el año 2019 en Santiago de Compostela.&#34; href=&#34;https://dominicroye.github.io/img/album/Santiago_viento_2019.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Santiago_viento_2019.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;¿Cómo fue el año 2019? Calendario de viento para el año 2019 en Santiago de Compostela. Applicación: &lt;a href=&#34;https://xeo81.shinyapps.io/MeteoExtremosGalicia/&#34; target=&#34;_blank&#34;&gt;MeteoExtremos Galicia&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;¿Cómo fue el año 2019? Calendario de la temperatura máxima para el año 2019 en Santiago de Compostela.&#34; href=&#34;https://dominicroye.github.io/img/album/Santiago_tmax_2019.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Santiago_tmax_2019.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;¿Cómo fue el año 2019? Calendario de la temperatura máxima para el año 2019 en Santiago de Compostela. Applicación: &lt;a href=&#34;https://xeo81.shinyapps.io/MeteoExtremosGalicia/&#34; target=&#34;_blank&#34;&gt;MeteoExtremos Galicia&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;¿Cómo fue el año 2019? Calendario de precipitación diaria para el año 2019 en Santiago de Compostela.&#34; href=&#34;https://dominicroye.github.io/img/album/Santiago_precip_diaria_2019.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Santiago_precip_diaria_2019.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;¿Cómo fue el año 2019? Calendario de precipìtación diaria para el año 2019 en Santiago de Compostela. Applicación: &lt;a href=&#34;https://xeo81.shinyapps.io/MeteoExtremosGalicia/&#34; target=&#34;_blank&#34;&gt;MeteoExtremos Galicia&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de horas de sol entre 1983-2019 para la Península Ibérica.&#34; href=&#34;https://dominicroye.github.io/img/album/horas_sol_anomalias.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/horas_sol_anomalias.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de horas de sol entre 1983-2019 para la Península Ibérica. Datos: &lt;a href=&#34;https://www.eumetsat.int/&#34; target=&#34;_blank&#34;&gt;EUMETSAT&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de horas de sol entre 1983-2017 para Francia.&#34; href=&#34;https://dominicroye.github.io/img/album/horas_sol_anomalias_fr.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/horas_sol_anomalias_fr.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de horas de sol entre 1983-2017 para Francia. Datos: &lt;a href=&#34;https://www.eumetsat.int/&#34; target=&#34;_blank&#34;&gt;EUMETSAT&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de horas de sol entre 1983-2017 para Alemania.&#34; href=&#34;https://dominicroye.github.io/img/album/horas_sol_anomalias_ger.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/horas_sol_anomalias_ger.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de horas de sol entre 1983-2017 para Alemania. Datos: &lt;a href=&#34;https://www.eumetsat.int/&#34; target=&#34;_blank&#34;&gt;EUMETSAT&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías menusales de horas de sol en 2017 para Santiago de Compostela.&#34; href=&#34;https://dominicroye.github.io/img/album/ss_anomaly2017_scq.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/ss_anomaly2017_scq.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de horas de sol en 2017 para Santiago de Compostela. Datos: &lt;a href=&#34;https://www.eumetsat.int/&#34; target=&#34;_blank&#34;&gt;EUMETSAT&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;¿A qué hora se suelen alcanzar las temperaturas máximas o mínimas? Aquí la distribución para Santiago de Compostela.&#34; href=&#34;https://dominicroye.github.io/img/album/horas_mx_min_SCQ.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/horas_mx_min_SCQ.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;¿A qué hora se suelen alcanzar las temperaturas máximas o mínimas? Aquí la distribución para Santiago de Compostela. Datos: &lt;a href=&#34;https://www.meteogalicia.gal/&#34; target=&#34;_blank&#34;&gt;Meteogalicia&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;¿A qué hora se suelen alcanzar las temperaturas máximas o mínimas? Aquí la distribución para Vigo.&#34; href=&#34;https://dominicroye.github.io/img/album/horas_mx_min_VIGO.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/horas_mx_min_VIGO.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;¿A qué hora se suelen alcanzar las temperaturas máximas o mínimas? Aquí la distribución para Vigo. Datos: &lt;a href=&#34;https://www.meteogalicia.gal/&#34; target=&#34;_blank&#34;&gt;Meteogalicia&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Comparison between the period 1950-1979 and 1980-2019 for the average number of days with minimum temperature above 20ºC in Europe&#34; href=&#34;https://dominicroye.github.io/img/album/europe_tropical.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/europe_tropical.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Comparison between the period 1950-1979 and 1980-2019 for the average number of days with minimum temperature above 20ºC in Europe. Data: &lt;a href=&#34;http://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php#datafiles&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Comparison between the period 1950-1979 and 1980-2019 for the average number of days with maximum temperature above 40ºC&#34; href=&#34;https://dominicroye.github.io/img/album/d%c3%adas_calorosos.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/d%c3%adas_calorosos.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Comparison between the period 1950-1979 and 1980-2019 for the average number of days with maximum temperature above 40ºC. Data: &lt;a href=&#34;http://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php#datafiles&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Comparison between the period 1950-1979 and 1980-2019 for the average number of days with minimum temperature above 20ºC&#34; href=&#34;https://dominicroye.github.io/img/album/noches_tropicales.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/noches_tropicales.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Comparison between the period 1950-1979 and 1980-2019 for the average number of days with minimum temperature above 20ºC. Data: &lt;a href=&#34;http://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php#datafiles&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Las fechas en las que alcanzamos de media las temperaturas máximas más altas del año en Europa.&#34; href=&#34;https://dominicroye.github.io/img/album/europe_max_year_time.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/europe_max_year_time.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;La canícula empieza de media a partir del 24 de julio. Es interesante que en la fachada atlántica las temperaturas más altas son habituales a partir del 8 de agosto, un retraso debido al efecto del océano atlántico. Datos: &lt;a href=&#34;http://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php#datafiles&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Hurricane Irma and Jose. Surface wind conditions on September 6, 2017 at 23:00 PM.&#34; href=&#34;https://dominicroye.github.io/img/album/borrasca_2017.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/borrasca_2017.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Hurricane Irma and Jose. Surface wind conditions on September 6, 2017 at 23:00 PM. Data: ERA-5/Copernicus&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Ex-Hurrican Leslie. Surface wind conditions on October 14, 2018 at 00:00 AM.&#34; href=&#34;https://dominicroye.github.io/img/album/leslie_stream.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/leslie_stream.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Ex-Hurrican Leslie. Surface wind conditions on October 14, 2018 at 00:00 AM. Data: ERA-5/Copernicus&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Comparison of extreme temperatures 2011-2019 in Spain&#34; href=&#34;https://dominicroye.github.io/img/album/extreme_temperature_espa%c3%b1a.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/extreme_temperature_espa%c3%b1a.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Comparison of extreme temperatures 2011-2019 in Spain. Data: &lt;a href=&#34;https://opendata.aemet.es/centrodedescargas/inicio&#34; target=&#34;_blank&#34;&gt;AEMET OPEN&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Probability of a summer day (maximum temperature &amp;gt; 25ºC) throughout the year for three cities in Spain&#34; href=&#34;https://dominicroye.github.io/img/album/summer_prob_compara.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/summer_prob_compara.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Probability of a summer day (maximum temperature &amp;gt; 25ºC) throughout the year for three cities in Spain. Data: &lt;a href=&#34;https://opendata.aemet.es/centrodedescargas/inicio&#34; target=&#34;_blank&#34;&gt;AEMET OPEN&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Degree of cloudiness in April 2020 in the Iberian Peninsula.&#34; href=&#34;https://dominicroye.github.io/img/album/nubosidad_abril2020.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/nubosidad_abril2020.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;This April 2020 has been extraordinarily cloudy. 90% of the Iberian Peninsula has experienced a cloudiness greater than 86% (normal would be 65%). Data: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD09GA&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Grado de nubosidad en noviembre 2019 en la Península Ibérica.&#34; href=&#34;https://dominicroye.github.io/img/album/nubosidad_noviembre_pi_2019.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/nubosidad_noviembre_pi_2019.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Este noviembre 2019 ha sido extraordinariamente nublado. El 90% de la Península Ibérica ha vivido una nubosidad superior al 90% (lo normal serían 70%). Datos: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD09GA&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Plataforma: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Índice de Concentración de la precipitación diaria en EEUU.&#34; href=&#34;https://dominicroye.github.io/img/album/CI_prism.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/CI_prism.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Índice de Concentración de la precipitación diaria en EEUU. Datos: &lt;a href=&#34;http://www.prism.oregonstate.edu/&#34; target=&#34;_blank&#34;&gt;PRISM&lt;/a&gt;. Más detalles &lt;a href=&#34;https://github.com/dominicroye/Concentration_Index_USA&#34; target=&#34;_blank&#34;&gt;aquí&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Promedio de Grados Día de Calefacción y Refrigeración (1950-2018) en España.&#34; href=&#34;https://dominicroye.github.io/img/album/gradosdia.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/gradosdia.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Promedio de Grados Día de Calefacción y Refrigeración (1950-2018) en España. Como valor de referencia he usado 15.5ºC y 22ºC de temperatura media diaria, respectivamente. Datos: &lt;a href=&#34;http://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php#datafiles&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Las anomalías invernales de temperatura y precipitación en Santander.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_Santander.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_Santander.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Las anomalías invernales de temperatura y precipitación en Santander. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Las anomalías invernales de temperatura y precipitación en Sevilla.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_Sevilla.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_Sevilla.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Las anomalías invernales de temperatura y precipitación en Sevilla. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Las anomalías invernales de temperatura y precipitación en Santiago.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_Santiago.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_Santiago.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Las anomalías invernales de temperatura y precipitación en Santiago. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Las anomalías invernales de temperatura y precipitación en Valencia.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_Valencia.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_Valencia.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Las anomalías invernales de temperatura y precipitación en Valencia. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Las anomalías invernales de temperatura y precipitación en A Coruña.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_A%20Coru%c3%b1a.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_A%20Coru%c3%b1a.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Las anomalías invernales de temperatura y precipitación en A Coruña. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de Madrid.&#34; href=&#34;https://dominicroye.github.io/img/album/Madrid_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Madrid_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de Madrid. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de Santander.&#34; href=&#34;https://dominicroye.github.io/img/album/Santander_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Santander_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de Santander. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de Barcelona.&#34; href=&#34;https://dominicroye.github.io/img/album/Barcelona_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Barcelona_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de Barcelona. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de Santiago.&#34; href=&#34;https://dominicroye.github.io/img/album/Santiago_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Santiago_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de Santiago. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de Bilbao.&#34; href=&#34;https://dominicroye.github.io/img/album/Bilbao_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Bilbao_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de Bilbao. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de Sevilla.&#34; href=&#34;https://dominicroye.github.io/img/album/Sevilla_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Sevilla_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de Sevilla. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de A Coruña.&#34; href=&#34;https://dominicroye.github.io/img/album/A%20Coru%c3%b1a_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/A%20Coru%c3%b1a_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de A Coruña. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Anomalías de la temperatura media diaria en invierno de Málaga.&#34; href=&#34;https://dominicroye.github.io/img/album/Malaga_invierno.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Malaga_invierno.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Anomalías de la temperatura media diaria en invierno de Málaga. Datos: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Las series temporales se homogeneizaron con &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Promedio del primer día de verano en Europa.&#34; href=&#34;https://dominicroye.github.io/img/album/first_summer.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/first_summer.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Promedio del primer día de verano en Europa (temperatura máxima &amp;gt;25ºC). Datos: &lt;a href=&#34;http://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php#datafiles&#34; target=&#34;_blank&#34;&gt;E-OSB 18e&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribución del promedio del primer día de verano en Europa.&#34; href=&#34;https://dominicroye.github.io/img/album/density_firstsummer.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/density_firstsummer.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribución del promedio del primer día de verano en Europa (temperatura máxima &amp;gt;25ºC). Datos: &lt;a href=&#34;http://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php#datafiles&#34; target=&#34;_blank&#34;&gt;E-OSB 18e&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Warming stripes for several Spanish cities.&#34; href=&#34;https://dominicroye.github.io/img/album/tiras_spain.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/tiras_spain.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Warming stripes for several Spanish cities. These graphs represent and communicate climate change in a very illustrative and effective way. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. Time series were homogenized with &lt;a href=&#34;http://www.climatol.eu/&#34; target=&#34;_blank&#34;&gt;climatol&lt;/a&gt;. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/how-to-create-warming-stripes-in-r/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Annual anomalies of precipitation (%) in peninsular Spain 1950-2012.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalia_spread.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalia_spread.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;62 years of annual anomalies of precipitation (%) in peninsular Spain in a single graphic. Data: &lt;a href=&#34;https://digital.csic.es/handle/10261/141218&#34; target=&#34;_blank&#34;&gt;SPREAD&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Summer anomaly of temperature and precipitation in Barcelona 1914-2018.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_barcelona.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_barcelona.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Summer anomaly of temperature and precipitation in Barcelona 1914-2018. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Summer anomaly of temperature and precipitation in Madrid 1920-2018.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_Madrid.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_Madrid.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Summer anomaly of temperature and precipitation in Madrid 1920-2018. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Summer anomaly of temperature and precipitation in Santiago de Compostela 1950-2018.&#34; href=&#34;https://dominicroye.github.io/img/album/anomalias_scq.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/anomalias_scq.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Summer anomaly of temperature and precipitation in Santiago de Compostela 1950-2018. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Monthly precipitation anomaly registered in Santiago de Compostela in 2017.&#34; href=&#34;https://dominicroye.github.io/img/album/pr_anomalia2017_scq.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pr_anomalia2017_scq.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Monthly precipitation anomaly registered in Santiago de Compostela in 2017. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Monthly precipitation anomaly registered in Barcelona in 2018.&#34; href=&#34;https://dominicroye.github.io/img/album/pr_anomalia2018.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pr_anomalia2018.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Monthly precipitation anomaly registered in Barcelona in 2018. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;, &lt;a href=&#34;https://opendata.aemet.es&#34; target=&#34;_blank&#34;&gt;opendata.aemet.es&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Average of consecutive days without rainfall 1950-2012.&#34; href=&#34;https://dominicroye.github.io/img/album/rachas_secas.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/rachas_secas.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Average of consecutive days without rainfall 1950-2012. Data: &lt;a href=&#34;https://digital.csic.es/handle/10261/141218&#34; target=&#34;_blank&#34;&gt;SPREAD&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Average of consecutive days without rainfall by seasons 1950-2012 in the Iberian Peninsula.&#34; href=&#34;https://dominicroye.github.io/img/album/rachas_estaciones.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/rachas_estaciones.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Average of consecutive days without rainfall by seasons 1950-2012 in the Iberian Peninsula. Data: &lt;a href=&#34;https://digital.csic.es/handle/10261/141218&#34; target=&#34;_blank&#34;&gt;SPREAD&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of temperature anomalies in autumn according to different decades in Barcelona.&#34; href=&#34;https://dominicroye.github.io/img/album/distribution_graph_bcn.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/distribution_graph_bcn.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of temperature anomalies in autumn according to different decades in Barcelona. You can clearly see how the autumn is getting warmer due to global warming. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of temperature anomalies in autumn according to different decades in Santiago de Compostela.&#34; href=&#34;https://dominicroye.github.io/img/album/distribution_temp.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/distribution_temp.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of temperature anomalies in autumn according to different decades in Santiago de Compostela. You can clearly see how the autumn is getting warmer due to global warming. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Climate circles for several Spanish cities.&#34; href=&#34;https://dominicroye.github.io/img/album/clima_circulos.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/clima_circulos.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Climate circles for several Spanish cities. For each day of the year the average of the maximum and minimum (bar length) and the average temperature (color) is indicated. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Climate circles for several European cities.&#34; href=&#34;https://dominicroye.github.io/img/album/clima_circulos_eu.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/clima_circulos_eu.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Climate circles for several European cities. For each day of the year the average of the maximum and minimum (bar length) and the average temperature (color) is indicated. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Graphic definition of climate and weather.&#34; href=&#34;https://dominicroye.github.io/img/album/clima_def.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/clima_def.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Graphic definition of climate and weather. The difference between weather and climate is particularly a scale of time. Single atmospheric conditions over a short period of time is weather, and climate is the statistical description of all these single condicions over a relatively long period of time.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Climate circles for several Chilean cities.&#34; href=&#34;https://dominicroye.github.io/img/album/climate_chile.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/climate_chile.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Climate circles for several Chilean cities. For each day of the year the average of the maximum and minimum (bar length) and the average temperature (color) is indicated. Data: &lt;a href=&#34;http://explorador.cr2.cl/&#34; target=&#34;_blank&#34;&gt;explorador.cr2.cl&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Summer month, mild winters, lot of sun and little wind, the climatic preferences for the Galician population.&#34; href=&#34;https://dominicroye.github.io/img/album/galicia_percepcion.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/galicia_percepcion.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Summer months, mild winters, lot of sun and little wind, the climatic preferences for the Galician population. Map is based on survey results. More: &lt;a href=&#34;https://t.co/tfwrANxqHz&#34; target=&#34;_blank&#34;&gt;article (galician)&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Where is the lightning activity concentrated in a few days in Galicia?&#34; href=&#34;https://dominicroye.github.io/img/album/concentration_index_rayos.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/concentration_index_rayos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Where is the lightning activity concentrated in a few days in Galicia? Values toward 1 indicate that a few days contribute much of all the lightning; instead, values toward 0 are places where more regularity is observed. More: &lt;a href=&#34;https://dominicroye.github.io/en/publication/lightning_galicia_2018/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;How is the lightning activity distributed in Galicia?&#34; href=&#34;https://dominicroye.github.io/img/album/rayos_estaciones.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/rayos_estaciones.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;How is the lightning activity distributed annual and by seasons in Galicia? Data: &lt;a href=&#34;http://www.meteogalicia.gal/observacion/raios/raios.action?request_locale=gl&#34; target=&#34;_blank&#34;&gt;meteogalicia&lt;/a&gt;. More: &lt;a href=&#34;https://dominicroye.github.io/en/publication/lightning_galicia_2018/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;How is the lightning activity distributed by month and hour in Galicia?&#34; href=&#34;https://dominicroye.github.io/img/album/rayos_meshora.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/rayos_meshora.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;How is the lightning activity distributed by month and hour in Galicia? Data: &lt;a href=&#34;http://www.meteogalicia.gal/observacion/raios/raios.action?request_locale=gl&#34; target=&#34;_blank&#34;&gt;meteogalicia&lt;/a&gt;. More: &lt;a href=&#34;https://dominicroye.github.io/en/publication/lightning_galicia_2018/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Seasonal rainfall regime, i.e. ranking seasons according to average precipitation in descending order in the contiguous United States.&#34; href=&#34;https://dominicroye.github.io/img/album/pluvi_regimes_usa.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pluvi_regimes_usa.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Seasonal rainfall regime, i.e. ranking seasons according to average precipitation (1956-2006) in descending order in the contiguous United States. (P, spring; S, summer; A, autumn; W, winter). More: &lt;a href=&#34;https://dominicroye.github.io/en/publication/usa_ci_2017/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;, &lt;a href=&#34;https://github.com/dominicroye/Concentration_Index_USA&#34; target=&#34;_blank&#34;&gt;dataset&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Concentration of Daily Precipitation in the contiguous United States.&#34; href=&#34;https://dominicroye.github.io/img/album/concentration_index_usa.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/concentration_index_usa.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Concentration of Daily Precipitation (1956-2006) in the contiguous United States. (P, spring; S, summer; A, autumn; W, winter). The frequency distribution of daily precipitation amounts almost anywhere conforms to a negative exponential distribution, reflecting the fact that there are many small daily totals and few large ones. More: &lt;a href=&#34;https://dominicroye.github.io/en/publication/usa_ci_2017/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;, &lt;a href=&#34;https://github.com/dominicroye/Concentration_Index_USA&#34; target=&#34;_blank&#34;&gt;dataset&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Summer day probability (maximum temperature &amp;gt; 25ºC) through the year in the pensinular Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/summerdays.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/summerdays.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Summer day probability (maximum temperature &amp;gt; 25ºC) through the year in the pensinular Spain. Data: STEAD from &lt;a href=&#34;https://twitter.com/climayagua&#34; target=&#34;_blank&#34;&gt;Research Group climayagua&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Summer day probability (maximum temperature &amp;gt; 25ºC) for different dates in the pensinular Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/summerprob_spain.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/summerprob_spain.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Summer day probability (maximum temperature &amp;gt; 25ºC) for different dates in the pensinular Spain. Data: STEAD from &lt;a href=&#34;https://twitter.com/climayagua&#34; target=&#34;_blank&#34;&gt;Research Group climayagua&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Annual sunhours for Germany in 2017.&#34; href=&#34;https://dominicroye.github.io/img/album/sunhours_germany2017.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/sunhours_germany2017.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Annual sunhours for Germany in 2017. Map is a result of a interpolation process based on sunhour registers and cloudiness from MODIS. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;, &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD09GA&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform for MODIS: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Warming stripes for Lisboa.&#34; href=&#34;https://dominicroye.github.io/img/album/tiras_lisboa.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/tiras_lisboa.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Warming stripes for Lisboa. These graphs represent and communicate climate change in a very illustrative and effective way. Data: &lt;a href=&#34;https://data.giss.nasa.gov/gistemp/stdata/&#34; target=&#34;_blank&#34;&gt;GISTEMP&lt;/a&gt;. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/how-to-create-warming-stripes-in-r/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Where do we observe the trajectories of extratropical cyclones in Europe?&#34; href=&#34;https://dominicroye.github.io/img/album/trayectios_ciclones.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/trayectios_ciclones.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Where do we observe the trajectories of extratropical cyclones in Europe? Here the frequency for the months October to March between 1979-2010. Data: &lt;a href=&#34;http://catalogue.ceda.ac.uk/uuid/421688bf376b41b884246b34bd274356&#34; target=&#34;_blank&#34;&gt;extra-tropical cyclone tracks&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Warming stripes for Madrid.&#34; href=&#34;https://dominicroye.github.io/img/album/warming_stripes_madrid.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/warming_stripes_madrid.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Warming stripes for Madrid. These graphs represent and communicate climate change in a very illustrative and effective way. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/how-to-create-warming-stripes-in-r/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Annual sunhours for Galicia (Spain) in 2017.&#34; href=&#34;https://dominicroye.github.io/img/album/horasdesol2017.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/horasdesol2017.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Annual sunhours for Galicia (Spain) in 2017. Map is a result of a interpolation process based on sunhour registers and cloudiness from MODIS. Data: &lt;a href=&#34;http://www.meteogalicia.gal&#34; target=&#34;_blank&#34;&gt;Meteogalicia&lt;/a&gt;, &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD09GA&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform for MODIS: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Annual sunhours for Spain in 2017.&#34; href=&#34;https://dominicroye.github.io/img/album/horassol_espa%c3%b1a2017.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/horassol_espa%c3%b1a2017.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Annual sunhours for Spain in 2017. Map is a result of a interpolation process based on sunhour registers and cloudiness from MODIS. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;, &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD09GA&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform for MODIS: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Average number of snow days on the ground in the Iberian Peninsula (2002-2017)&#34; href=&#34;https://dominicroye.github.io/img/album/nieve_peninsula.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/nieve_peninsula.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Number of snow days on the ground in the Iberian Peninsula (2002-2017). The daily images with a binary code (condition: Snow_Cover_Daily_Tile == 200, and Fractional_Snow_Cover &amp;gt; 90) have been reclassified and than summed up and divided by the number of years. Data: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD10A1&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Climate circles for several American cities.&#34; href=&#34;https://dominicroye.github.io/img/album/nortamerica_climate.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/nortamerica_climate.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Climate circles for several American cities. For each day of the year the average of the maximum and minimum (bar length) and the average temperature (color) is indicated. Data: &lt;a href=&#34;https://www.ncdc.noaa.gov/cdo-web/&#34; target=&#34;_blank&#34;&gt;NCDC-CDO/NOAA&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Average cloud fraction for summer 2018 and normal 2001-2017 in the Iberian Peninsular.&#34; href=&#34;https://dominicroye.github.io/img/album/nubosidad_verano2018.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/nubosidad_verano2018.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Average cloud fraction for summer 2018 and normal 2001-2017 in the Iberian Peninsular. Data: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD09GA&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Average cloud fraction for march 2018 and march 2001-2018 in the Iberian Peninsular.&#34; href=&#34;https://dominicroye.github.io/img/album/PI_marzo2018.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/PI_marzo2018.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Average cloud fraction for march 2018 and march 2001-2018 in the Iberian Peninsular. Data: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/MODIS%2F006%2FMOD09GA&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Accumulated precipitation of 2017 compared to other years in Valladolid.&#34; href=&#34;https://dominicroye.github.io/img/album/valladolid.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/valladolid.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Accumulated precipitation of 2017 compared to other years in Valladolid. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Accumulated precipitation of 2017 compared to other years in Vigo.&#34; href=&#34;https://dominicroye.github.io/img/album/vigo.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/vigo.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Accumulated precipitation of 2017 compared to other years in Vigo. Data: &lt;a href=&#34;https://www.ecad.eu//dailydata/index.php&#34; target=&#34;_blank&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Environment</title>
      <link>https://dominicroye.github.io/en/graphs/environment/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0200</pubDate>
      
      <guid>https://dominicroye.github.io/en/graphs/environment/</guid>
      <description>

&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  


  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;On the way out of coal-fired electricity generation in Germany?&#34; href=&#34;https://dominicroye.github.io/img/album/redelect_germany.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/redelect_germany.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Daily contribution of coal to electricity generation in Germany. Data: &lt;a href=&#34;https://www.energy-charts.de/&#34; target=&#34;_blank&#34;&gt;energy-charts.de&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;La contribución diaria del carbón a la generación eléctrica en España&#34; href=&#34;https://dominicroye.github.io/img/album/redelect.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/redelect.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;La contribución diaria del carbón a la generación eléctrica en España desde 2011. Hasta el 17 de agosto de 2019 no ha habido ningún día con menos del 1%. Data: &lt;a href=&#34;https://www.ree.es/es/apidatos&#34; target=&#34;_blank&#34;&gt;REData&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Light pollution by municipality in 2015. What is the municipality that emits the most artificial light?&#34; href=&#34;https://dominicroye.github.io/img/album/coef_var_nightlights.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/coef_var_nightlights.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Light pollution by municipality in 2015. What is the municipality that emits the most artificial light? The map shows the Coefficient of Variation (standard deviation/mean) of each municipalities. Data: &lt;a href=&#34;https://ngdc.noaa.gov/eog/download.html&#34; target=&#34;_blank&#34;&gt;VIIRS Nighttime Lights NOAA (2015)&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Which coast has more light pollution in Peninsular Spain?&#34; href=&#34;https://dominicroye.github.io/img/album/lights_costas.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/lights_costas.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Which coast has more light pollution in Peninsular Spain? The coast margins include a buffer of 5km. Data: &lt;a href=&#34;https://ngdc.noaa.gov/eog/download.html&#34; target=&#34;_blank&#34;&gt;VIIRS Nighttime Lights NOAA (2016)&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Light pollution by municipality in 2015. What is the municipality that emits the most artificial light?&#34; href=&#34;https://dominicroye.github.io/img/album/ranking.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/ranking.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Light pollution by municipality in 2015. What is the municipality that emits the most artificial light? The map shows the Coefficient of Variation (standard deviation/mean) of each municipalities. Data: &lt;a href=&#34;https://ngdc.noaa.gov/eog/download.html&#34; target=&#34;_blank&#34;&gt;VIIRS Nighttime Lights NOAA (2015)&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Pollution spots from nitrogen dioxide (NO2) in autumn 2018 in the Iberian Peninsula.&#34; href=&#34;https://dominicroye.github.io/img/album/no2_pi_autum.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/no2_pi_autum.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Pollution spots from nitrogen dioxide (NO2) in autumn 2018 in the Iberian Peninsula. Clearly stand out Barcelona and Madrid. Data: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/COPERNICUS%2FS5P%2FOFFL%2FL3_NO2&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Pollution spots from nitrogen dioxide (NO2) in autumn 2018 in Germany.&#34; href=&#34;https://dominicroye.github.io/img/album/no2_pi_autum_germany.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/no2_pi_autum_germany.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Pollution spots from nitrogen dioxide (NO2) in autumn 2018 in Germany. Clearly stands out the Rhine-Ruhr metropolitan region. Data: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/COPERNICUS%2FS5P%2FOFFL%2FL3_NO2&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Pollution spots from nitrogen dioxide (NO2) in autumn 2018 in the contiguous United States.&#34; href=&#34;https://dominicroye.github.io/img/album/no2_pi_autum_usa.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/no2_pi_autum_usa.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Pollution spots from nitrogen dioxide (NO2) in autumn 2018 in the contiguous United States. Data: &lt;a href=&#34;https://explorer.earthengine.google.com/#detail/COPERNICUS%2FS5P%2FOFFL%2FL3_NO2&#34; target=&#34;_blank&#34;&gt;NASA/MODIS&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Air pollution in the Iberian Peninsula. Annual average of PM2.5 for 2016 seen by MODIS/MISR/SeaWiFS. Clearly visible are Madrid and Barcelona.&#34; href=&#34;https://dominicroye.github.io/img/album/PM25_peninsula.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/PM25_peninsula.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Air pollution in the Iberian Peninsula. Annual average of PM2.5 for 2016 seen by MODIS/MISR/SeaWiFS. Clearly visible are Madrid and Barcelona. Data: &lt;a href=&#34;http://sedac.ciesin.columbia.edu/data/sets/browse&#34; target=&#34;_blank&#34;&gt;SEDAC&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Our human footprint in the Iberian Peninsula, or rather, the pressure we exert on the terrestrial ecosystem.&#34; href=&#34;https://dominicroye.github.io/img/album/huella_humana.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/huella_humana.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Our human footprint in the Iberian Peninsula, or rather, the pressure we exert on the terrestrial ecosystem. Data: &lt;a href=&#34;https://www.nature.com/articles/sdata201667&#34; target=&#34;_blank&#34;&gt;Global terrestrial Human Footprint &lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Geography</title>
      <link>https://dominicroye.github.io/en/graphs/geography/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0200</pubDate>
      
      <guid>https://dominicroye.github.io/en/graphs/geography/</guid>
      <description>

&lt;p&gt;&lt;center&gt;&lt;/p&gt;

&lt;h2 id=&#34;videos&#34;&gt;Videos&lt;/h2&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/423988694&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;

3d model of Nazaré Canyon off the coast of #Nazare, Portugal. Well known as hotspot for big wave surfing.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;/p&gt;

&lt;h2 id=&#34;gráficos&#34;&gt;Gráficos&lt;/h2&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;



&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  


  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Evolution of global disasters since 1900 by risk groups.&#34; href=&#34;https://dominicroye.github.io/img/album/naturalrisks.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/naturalrisks.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Evolution of global disasters since 1900 by risk groups. Data: &lt;a href=&#34;https://www.emdat.be/&#34; target=&#34;_blank&#34;&gt;emdat.be/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth seen by the year of construction in Paris, France.&#34; href=&#34;https://dominicroye.github.io/img/album/paris_crecimiento.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/paris_crecimiento.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth seen by the year of construction in Paris, France. Data: &lt;a href=&#34;https://t.co/TaYWCGDtU9?amp=1&#34; target=&#34;_blank&#34;&gt;ign.fr&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth seen by the year of construction in Madrid, Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/madrid_crecimiento.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/madrid_crecimiento.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth seen by the year of construction in Madrid, Spain. Data: &lt;a href=&#34;http://www.catastro.meh.es/webinspire/index.html&#34; target=&#34;_blank&#34;&gt;Catastro&lt;/a&gt; More: &lt;a href=&#34;https://dominicroye.github.io/en/2019/visualize-urban-growth/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth seen by the year of construction in Santiago de Compostela, Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/santiago_crecimiento.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/santiago_crecimiento.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth seen by the year of construction in Santiago de Compostela, Spain. Data: &lt;a href=&#34;http://www.catastro.meh.es/webinspire/index.html&#34; target=&#34;_blank&#34;&gt;Catastro&lt;/a&gt; More: &lt;a href=&#34;https://dominicroye.github.io/en/2019/visualize-urban-growth/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of travel time deviations from the median to high-density urban centers via surface transport in Europe by NUTS-1.&#34; href=&#34;https://dominicroye.github.io/img/album/desviation_traveltime-min.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/desviation_traveltime-min.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of travel time deviations from the median to high-density urban centers via surface transport in Europe by NUTS-1 in 2015. Data: &lt;a href=&#34;https://resourcewatch.org/data/explore/cit01701-Travel-Time-to-Major-Cities&#34; target=&#34;_blank&#34;&gt;resourcewatch.org&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Ruggedness or the elevation difference between adjacent cells of a DEM for the Iberian Peninsula.&#34; href=&#34;https://dominicroye.github.io/img/album/ruggedness.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/ruggedness.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Ruggedness or the elevation difference between adjacent cells of a DEM for the Iberian Peninsula.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of vine, fruits and olivar in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/olivar.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/olivar.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of vine, fruits and olivar in Europe. Data: &lt;a href=&#34;https://land.copernicus.eu/pan-european/corine-land-cover&#34; target=&#34;_blank&#34;&gt;CORINE Land Cover&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Forest canopy height with more than 10m for the Iberian Peninsula. &#34; href=&#34;https://dominicroye.github.io/img/album/green_map.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/green_map.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Forest canopy height with more than 10m for the Iberian Peninsula. Data: &lt;a href=&#34;https://t.co/VgESxJA824?amp=1&#34; target=&#34;_blank&#34;&gt;Simard et al. 2011&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Worlds&amp;#39;s lighthouses included in the OpenStreetMap database.&#34; href=&#34;https://dominicroye.github.io/img/album/lighthouse.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/lighthouse.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Worlds&amp;rsquo;s lighthouses included in the OpenStreetMap database. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;The blue veins of the Earth for the Iberian Peninsula. Science is art.&#34; href=&#34;https://dominicroye.github.io/img/album/rios_venas.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/rios_venas.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Las venas azules de la Tierra para la Península Ibérica. La ciencia es arte. El ancho de la línea refleja el tamaño del río. Datos: &lt;a href=&#34;https://hydrosheds.org/&#34; target=&#34;_blank&#34;&gt;https://hydrosheds.org/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Have you ever wondered in which direcction flow world&amp;#39;s longest rivers?&#34; href=&#34;https://dominicroye.github.io/img/album/direccion_rios_global.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/direccion_rios_global.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;River flow directions were estimated using vectorial data.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Have you ever wondered in which direcction flow European longest rivers?&#34; href=&#34;https://dominicroye.github.io/img/album/directions_rivers.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/directions_rivers.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;River flow directions were estimated using vectorial data.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Have you ever wondered where the European coasts are oriented?&#34; href=&#34;https://dominicroye.github.io/img/album/orientacion_eu.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/orientacion_eu.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Orientations of coast segements were estimated using vectorial data with a resolución of 9 vertices to 1 km.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Have you ever wondered where the Spanish coasts are oriented by region?&#34; href=&#34;https://dominicroye.github.io/img/album/orientacion_ccaa_ing.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/orientacion_ccaa_ing.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Orientations of coast segements were estimated using vectorial data with a resolución of 9 vertices to 1 km.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Mobility trends for places of residence during COVID-19 epidemy in Europe based on data from Google&#34; href=&#34;https://dominicroye.github.io/img/album/google_mobi.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/google_mobi.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Mobility trends for places of residence during COVID-19 epidemy in Europe based on data from Google. Data: &lt;a href=&#34;https://t.co/kToIEDlYBs?amp=1&#34; target=&#34;_blank&#34;&gt;Google COVID19&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Driving mobility during COVID-19 epidemy by country based data from Apple.&#34; href=&#34;https://dominicroye.github.io/img/album/driving_mobi_apple.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/driving_mobi_apple.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Driving mobility during COVID-19 epidemy by country based data from Apple. Data: &lt;a href=&#34;https://t.co/IXeHuiDd5N?amp=1&#34; target=&#34;_blank&#34;&gt;Apple COVID19&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Significant wave height with a return period of 10 years&#34; href=&#34;https://dominicroye.github.io/img/album/oleaje_galicia.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/oleaje_galicia.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Significant wave height with a return period of 10 years. Particularly in the Costa da Morte there is a possibility of waves exceeding 10 meters once every 10 years. The Rias are highly protected. Data: &lt;a href=&#34;https://www.meteogalicia.gal/modelos/atlas/atlasOndas.action?request_locale=es&#34; target=&#34;_blank&#34;&gt;Wave Atlas of Meteogalicia&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;How is the annual burnt area distributed over all wildfire events?&#34; href=&#34;https://dominicroye.github.io/img/album/australia_ci.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/australia_ci.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Our research found that, in most Mediterranean European countries, the amount of burnt area is increasingly related with a lower number of #wildfires. I estimated ad hoc the same index for NSW Australia with similar results. More: &lt;a href=&#34;https://dominicroye.github.io/en/publication/incendios_ci_2019/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;How is the annual burnt area distributed over all wildfire events?&#34; href=&#34;https://dominicroye.github.io/img/album/california_fires.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/california_fires.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Our research found that, in most Mediterranean European countries, the amount of burnt area is increasingly related with a lower number of #wildfires. I estimated ad hoc the same index for California with similar results. More: &lt;a href=&#34;https://dominicroye.github.io/en/publication/incendios_ci_2019/&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Spatial patterns of cemeteries in Northwest Spain (number per 1,000 inhabitants).&#34; href=&#34;https://dominicroye.github.io/img/album/cimenterios_gal.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/cimenterios_gal.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Spatial patterns of cemeteries in Northwest Spain (number per 1,000 inhabitants) based on OpenStreetMaps. Data: &lt;a href=&#34;http://overpass-turbo.eu/&#34; target=&#34;_blank&#34;&gt;OpenStreetMap&lt;/a&gt;, &lt;a href=&#34;https://www.ige.eu/&#34; target=&#34;_blank&#34;&gt;IGE&lt;/a&gt; More: &lt;a href=&#34;https://dominicroye.github.io/es/2018/acceso-a-la-base-de-datos-de-openstreetmaps-desde-r/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Spatial patterns of cemeteries in Spain (number per 10,000 inhabitants).&#34; href=&#34;https://dominicroye.github.io/img/album/cementerios.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/cementerios.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Spatial patterns of cemeteries in Spain (number per 10,000 inhabitants) based on OpenStreetMaps. Data: &lt;a href=&#34;http://overpass-turbo.eu/&#34; target=&#34;_blank&#34;&gt;OpenStreetMap&lt;/a&gt;, &lt;a href=&#34;https://www.ine.es/&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt; More: &lt;a href=&#34;https://dominicroye.github.io/es/2018/acceso-a-la-base-de-datos-de-openstreetmaps-desde-r/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth seen by the year of construction for the six largest Spanish cities.&#34; href=&#34;https://dominicroye.github.io/img/album/ciudades_espa%c3%b1a_edad.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/ciudades_espa%c3%b1a_edad.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth seen by the year of construction for the six largest Spanish cities. Data: &lt;a href=&#34;http://www.catastro.meh.es/webinspire/index.html&#34; target=&#34;_blank&#34;&gt;Catastro&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Animation of urban growth seen by the year of construction in Valencia, Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/simulations.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/simulations.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Animation of urban growth seen by the year of construction in Valencia, Spain. Data: &lt;a href=&#34;http://www.catastro.meh.es/webinspire/index.html&#34; target=&#34;_blank&#34;&gt;Catastro&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth seen by the year of construction in Valencia, Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/valencia_desarrollo.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/valencia_desarrollo.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth seen by the year of construction in Valencia, Spain. Data: &lt;a href=&#34;http://www.catastro.meh.es/webinspire/index.html&#34; target=&#34;_blank&#34;&gt;Catastro&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of the year of building construction in Spanish provincial capitals from 1850.&#34; href=&#34;https://dominicroye.github.io/img/album/crecimiento_urbano.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/crecimiento_urbano.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of the year of building construction in Spanish provincial capitals from 1850. Data: &lt;a href=&#34;http://www.catastro.meh.es/webinspire/index.html&#34; target=&#34;_blank&#34;&gt;Catastro&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of travel time to high-density urban centers via surface transport in Europe by NUTS-1.&#34; href=&#34;https://dominicroye.github.io/img/album/accesibilidad_eu.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/accesibilidad_eu.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of travel time to high-density urban centers via surface transport in Europe by NUTS-1 in 2015. Data: &lt;a href=&#34;https://resourcewatch.org/data/explore/cit01701-Travel-Time-to-Major-Cities&#34; target=&#34;_blank&#34;&gt;resourcewatch.org&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of travel time to high-density urban centers via surface transport in Spain by province.&#34; href=&#34;https://dominicroye.github.io/img/album/accesibilidad_prov.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/accesibilidad_prov.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of travel time to high-density urban centers via surface transport in Spain by province in 2015. Data: &lt;a href=&#34;https://resourcewatch.org/data/explore/cit01701-Travel-Time-to-Major-Cities&#34; target=&#34;_blank&#34;&gt;resourcewatch.org&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Indice de Precios al Consumidor: Alquiler de viviendas (variación anual)&#34; href=&#34;https://dominicroye.github.io/img/album/IPC_alquiler.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/IPC_alquiler.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Indice de Precios al Consumidor: Alquiler de viviendas (variación anual) 2002-2019 en España por provincia. Datos: &lt;a href=&#34;https://www.ine.es/dyngs/INEbase/es/categoria.htm?c=Estadistica_P&amp;amp;cid=1254735976607&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Tiempo de viaje a centros urbanos de alta densidad a través del transporte de superficie en España.&#34; href=&#34;https://dominicroye.github.io/img/album/acces_mapa_esp.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/acces_mapa_esp.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Tiempo de viaje a centros urbanos de alta densidad a través del transporte de superficie en España. Datos: &lt;a href=&#34;https://resourcewatch.org/data/explore/cit01701-Travel-Time-to-Major-Cities&#34; target=&#34;_blank&#34;&gt;resourcewatch.org&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Ranking del tiempo de viaje a centros urbanos de alta densidad a través del transporte de superficie según provincias españolas.&#34; href=&#34;https://dominicroye.github.io/img/album/acces_rank.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/acces_rank.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Ranking del tiempo de viaje a centros urbanos de alta densidad a través del transporte de superficie según provincias españolas. Datos: &lt;a href=&#34;https://resourcewatch.org/data/explore/cit01701-Travel-Time-to-Major-Cities&#34; target=&#34;_blank&#34;&gt;resourcewatch.org&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Mapa de elevación de rio serpenteante Ebro.&#34; href=&#34;https://dominicroye.github.io/img/album/Ebro_rio.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Ebro_rio.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Inspirado por el gran trabajo de &lt;a href=&#34;https://twitter.com/geo_coe?lang=es&#34; target=&#34;_blank&#34;&gt;@geo_coe&lt;/a&gt;, he creado un mapa de elevación para el río serpenteante Ebro, tramo medio entre Logroño y Zaragoza en España. Datos: &lt;a href=&#34;http://centrodedescargas.cnig.es/CentroDescargas/index.jsp&#34; target=&#34;_blank&#34;&gt;Modelo Digital del Terreno - MDT05&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Mapa de elevación del rio serpenteante Alagón (Tajo).&#34; href=&#34;https://dominicroye.github.io/img/album/alagon_rio.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/alagon_rio.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Inspirado por el gran trabajo de &lt;a href=&#34;https://twitter.com/geo_coe?lang=es&#34; target=&#34;_blank&#34;&gt;@geo_coe&lt;/a&gt;, he creado un mapa de elevación para el río serpenteante Alagón, afluente más largo del río Tajo en España. Datos: &lt;a href=&#34;http://centrodedescargas.cnig.es/CentroDescargas/index.jsp&#34; target=&#34;_blank&#34;&gt;Modelo Digital del Terreno - MDT05&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth of Santiag de Compostela from before 1800 until today.&#34; href=&#34;https://dominicroye.github.io/img/album/scq_buildings.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/scq_buildings.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth of Santiag de Compostela from before 1800 until today. Data: &lt;a href=&#34;https://plugins.qgis.org/plugins/Spanish_Inspire_Catastral_Downloader/&#34; target=&#34;_blank&#34;&gt;Catastro INSPIRE QGIS-Plugin&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Flight routes of the ten busiest airports by passenger traffic in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/10airports_vuelos.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/10airports_vuelos.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Flight routes of the ten busiest airports by passenger traffic in Europe based on 24 hour data for each airport. Data: &lt;a href=&#34;https://www.flightradar24.com/&#34; target=&#34;_blank&#34;&gt;https://www.flightradar24.com/&lt;/a&gt;. More: &lt;a href=&#34;https://t.co/k6sO2SYjW1&#34; target=&#34;_blank&#34;&gt;article (spanish)&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Sky View Factor of Barcelona.&#34; href=&#34;https://dominicroye.github.io/img/album/SVF.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/SVF.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;The Sky View Factor is very useful urban spatial indicator for radiation and thermal environmental assessment. SVF describes how visible is the sky (0: the entire sky is blocked from view; 1: free view on the whole sky). Estimation made using &lt;a href=&#34;http://www.saga-gis.org/&#34; target=&#34;_blank&#34;&gt;SAGA-GIS&lt;/a&gt;. Data: &lt;a href=&#34;http://pnoa.ign.es/presentacion&#34; target=&#34;_blank&#34;&gt;LiDAR-IGN&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Flight density of the ten busiest airports by passenger traffic in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/10airports_vuelos_density.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/10airports_vuelos_density.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;European flight density based on 24 hour data for each of the ten busiest airports by passenger. Data: &lt;a href=&#34;https://www.flightradar24.com/&#34; target=&#34;_blank&#34;&gt;https://www.flightradar24.com/&lt;/a&gt;. More:  &lt;a href=&#34;https://t.co/k6sO2SYjW1&#34; target=&#34;_blank&#34;&gt;article (spanish)&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Flight routes of the Frankfurt airport.&#34; href=&#34;https://dominicroye.github.io/img/album/fra_vuelos.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/fra_vuelos.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Flight routes of Frankfurt airport based on 24 hour data. Data: &lt;a href=&#34;https://www.flightradar24.com/&#34; target=&#34;_blank&#34;&gt;https://www.flightradar24.com/&lt;/a&gt;. More: &lt;a href=&#34;https://t.co/k6sO2SYjW1&#34; target=&#34;_blank&#34;&gt;article (spanish)&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Flight routes of the busiest airports in the Iberian Peninsula.&#34; href=&#34;https://dominicroye.github.io/img/album/pi_vuelos.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pi_vuelos.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Flight routes of the busiest airports in the Iberian Peninsula based on 24 hour data. Data: &lt;a href=&#34;https://www.flightradar24.com/&#34; target=&#34;_blank&#34;&gt;https://www.flightradar24.com/&lt;/a&gt;. More: &lt;a href=&#34;https://t.co/k6sO2SYjW1&#34; target=&#34;_blank&#34;&gt;article (spanish)&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Flight routes of the Paris Charles de Gaulle airport.&#34; href=&#34;https://dominicroye.github.io/img/album/paris_vuelos.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/paris_vuelos.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Flight routes of Paris Charles de Gaulle airport based on 24 hour data. Data: &lt;a href=&#34;https://www.flightradar24.com/&#34; target=&#34;_blank&#34;&gt;https://www.flightradar24.com/&lt;/a&gt;. More: &lt;a href=&#39;https://t.co/k6sO2SYjW1&#39;&gt;link&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth of Madrid from before 1800 until today.&#34; href=&#34;https://dominicroye.github.io/img/album/mad_buildings.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/mad_buildings.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth of Madrid from before 1800 until today. Data: &lt;a href=&#34;https://plugins.qgis.org/plugins/Spanish_Inspire_Catastral_Downloader/&#34; target=&#34;_blank&#34;&gt;Catastro INSPIRE QGIS-Plugin&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Hours of fishing activity in 2016 in the Iberian Peninsula.&#34; href=&#34;https://dominicroye.github.io/img/album/pesca2016.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pesca2016.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Total hours of fishing activity per km2 for the year 2016 in the Iberian Peninsula. Data: &lt;a href=&#34;https://globalfishingwatch.org/&#34; target=&#34;_blank&#34;&gt;https://globalfishingwatch.org/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Hours of fishing activity in 2016 in the Mediterranean.&#34; href=&#34;https://dominicroye.github.io/img/album/pesca2016_med.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pesca2016_med.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Total hours of fishing activity per km2 for the year 2016 in the Mediterranean. Data: &lt;a href=&#34;https://globalfishingwatch.org/&#34; target=&#34;_blank&#34;&gt;https://globalfishingwatch.org/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of gas stations in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/europe_fuel.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/europe_fuel.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of gas stations (Point Of Interest) in Europe, extracted from the overpass API of OpenStreetMaps (June 2017). Data: OpenStreetMaps. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of drinking water in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/europe.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/europe.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of drinking water (Point Of Interest) in Europe, extracted from the overpass API of OpenStreetMaps (June 2017). Data: OpenStreetMaps. More: &lt;a href=&#34;https://www.geografiainfinita.com/2017/07/fuentes-de-agua-potable-en-el-mundo/&#34; target=&#34;_blank&#34;&gt;article (spanish)&lt;/a&gt;,&lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of gas and charging stations in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/eu_fuel.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/eu_fuel.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of gas and charging stations (Point Of Interest) in Europe, extracted from the overpass API of OpenStreetMaps (June 2017). Data: OpenStreetMaps. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of drinking water in the World.&#34; href=&#34;https://dominicroye.github.io/img/album/world_drinking.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/world_drinking.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of drinking water (Point Of Interest) in the World, extracted from the overpass API of OpenStreetMaps (June 2017). Data: OpenStreetMaps. More: &lt;a href=&#34;https://www.geografiainfinita.com/2017/07/fuentes-de-agua-potable-en-el-mundo/&#34; target=&#34;_blank&#34;&gt;article (Spanish)&lt;/a&gt;,&lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distance to the sea in the World.&#34; href=&#34;https://dominicroye.github.io/img/album/global.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/global.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Another perspective on the world. Distance to the sea (the more black, the further away is the sea). Euclidean distance estimation made with R. More: &lt;a href=&#34;https://www.geografiainfinita.com/2017/06/una-radiografia-del-mundo-a-traves-de-la-distancia-al-mar/&#34; target=&#34;_blank&#34;&gt;article (Spanish)&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of building heights at 10 meter resolution in European capitals.&#34; href=&#34;https://dominicroye.github.io/img/album/CP_buildingheight.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/CP_buildingheight.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of building heights at 10 meter resolution in European capitals. Data: &lt;a href=&#34;https://land.copernicus.eu/local/urban-atlas/building-height-2012&#34; target=&#34;_blank&#34;&gt;COPERNICUS&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Differences of building heights at 10 meter resolution in European capitals.&#34; href=&#34;https://dominicroye.github.io/img/album/city_buildingheights.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/city_buildingheights.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Differences of building heights at 10 meter resolution in European capitals. Data: &lt;a href=&#34;https://land.copernicus.eu/local/urban-atlas/building-height-2012&#34; target=&#34;_blank&#34;&gt;COPERNICUS&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Urban growth of Barcelona from before 1800 until today.&#34; href=&#34;https://dominicroye.github.io/img/album/bcn_buildings.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/bcn_buildings.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Urban growth of Barcelona from before 1800 until today. Data: &lt;a href=&#34;https://plugins.qgis.org/plugins/Spanish_Inspire_Catastral_Downloader/&#34; target=&#34;_blank&#34;&gt;Catastro INSPIRE QGIS-Plugin&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Number of published articles in ElPaís by year for the term &amp;#39;wildfire&amp;#39;.&#34; href=&#34;https://dominicroye.github.io/img/album/ElPais_incendios.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/ElPais_incendios.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Number of published articles in ElPaís by year for the term &amp;lsquo;wildfire&amp;rsquo;. Data: &lt;a href=&#34;https://elpais.com/tag/incendios/a&#34; target=&#34;_blank&#34;&gt;elpais&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of fastfood restaurants in the contiguous United States.&#34; href=&#34;https://dominicroye.github.io/img/album/fastfood_usatiff.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/fastfood_usatiff.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of fastfood restaurants in the contiguous United States, extracted from the overpass API of OpenStreetMaps (June 2017). Data: OpenStreetMaps. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Number of fastfood restaurants per 10,000 inhabitants in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/fastfood_map.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/fastfood_map.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Number of fastfood restaurants per 10,000 inhabitants in Europe, extracted from the overpass API of OpenStreetMaps (June 2017). Data: OpenStreetMaps. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Open Data Indactor Scores. Spain leads access to Open Data in the EU&#34; href=&#34;https://dominicroye.github.io/img/album/opendata.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/opendata.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Spain leads access to Open Data in the EU. Data: &lt;a href=&#34;https://www.europeandataportal.eu/en/dashboard#2017&#34; target=&#34;_blank&#34;&gt;europendataportal&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Distribution of fastfood restaurants in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/fastfood_eutiff.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/fastfood_eutiff.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Distribution of fastfood restaurants in Europe., extracted from the overpass API of OpenStreetMaps (June 2017). Data: OpenStreetMaps. More: &lt;a href=&#34;https://dominicroye.github.io/en/2018/accessing-openstreetmap-data-with-r/&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Evolution of adult obesity in Europe between 1975 and 2016.&#34; href=&#34;https://dominicroye.github.io/img/album/obesity_europe.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/obesity_europe.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Evolution of adult obesity in Europe between 1975 and 2016. Data: &lt;a href=&#34;https://ourworldindata.org/obesity&#34; target=&#34;_blank&#34;&gt;ourwoldindata&lt;/a&gt;, &lt;a href=&#34;https://github.com/dominicroye/obesity&#34; target=&#34;_blank&#34;&gt;script&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;National Overdose Death in the US by different drugs since 1999, showing a horrifying trend.&#34; href=&#34;https://dominicroye.github.io/img/album/USA_overdose.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/USA_overdose.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;National Overdose Death in the US by different drugs since 1999, showing a horrifying trend. Data: &lt;a href=&#34;https://ourworldindata.org/&#34; target=&#34;_blank&#34;&gt;ourwoldindata&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Population</title>
      <link>https://dominicroye.github.io/en/graphs/population/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0200</pubDate>
      
      <guid>https://dominicroye.github.io/en/graphs/population/</guid>
      <description>

&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  


  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Educational inequality in Spain 2011&#34; href=&#34;https://dominicroye.github.io/img/album/desigualdad_educativa-min.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/desigualdad_educativa-min.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;The map of Educational inequality in Spain. Data: &lt;a href=&#34;https://opendata.esri.es/datasets/6e71f495ceed44aabae4707e66c73aeb_0&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;The map of inequality in Spain 2018&#34; href=&#34;https://dominicroye.github.io/img/album/desigualdad_2018.jpg&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/desigualdad_2018.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;The map of inequality in Spain based on income and Gini index 2018. «Your life depends on where you live». Data: &lt;a href=&#34;https://www.ine.es/experimental/atlas/exp_atlas_tab.htm&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt; More: &lt;a href=&#34;https://dominicroye.github.io/en/2021/bivariate-dasymetric-map/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;The map of inequality in Madrid 2017&#34; href=&#34;https://dominicroye.github.io/img/album/desigualdad_mad-min.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/desigualdad_mad-min.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;The map of inequality in Spain based on income and Gini index 2017. «Your life depends on where you live». Data: &lt;a href=&#34;https://www.ine.es/experimental/atlas/exp_atlas_tab.htm&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt; More: &lt;a href=&#34;https://dominicroye.github.io/en/2021/bivariate-dasymetric-map/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Spatial patterns of cemeteries in Europe.&#34; href=&#34;https://dominicroye.github.io/img/album/eu_graves.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/eu_graves.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Spatial patterns of cemeteries in Europe based on OpenStreetMaps. Data: &lt;a href=&#34;http://overpass-turbo.eu/&#34; target=&#34;_blank&#34;&gt;OpenStreetMap&lt;/a&gt; More: &lt;a href=&#34;https://dominicroye.github.io/es/2018/acceso-a-la-base-de-datos-de-openstreetmaps-desde-r/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;The ratio of cars with diesel engine in Germany.&#34; href=&#34;https://dominicroye.github.io/img/album/ger_diesel.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/ger_diesel.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;The ratio of cars with diesel engine in Germany. Data: Kraftfahrt Bundesamt&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population movements registered with mobile phones in Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/Madrid_movib.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Madrid_movib.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population movements registered with mobile phones in Spain. Data: &lt;a href=&#34;https://www.ine.es/experimental/movilidad/experimental_em.htm&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population movements registered with mobile phones at 12:00 in the morning compared to 20:00 in Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/movimiento_dianoche_esp.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/movimiento_dianoche_esp.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population movement registered with mobile phones at 12:00 in the morning compared to 20:00 in Spain. Data: &lt;a href=&#34;https://www.ine.es/experimental/movilidad/experimental_em.htm&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population movements registered with mobile phones in the COVID19 pandemic in Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/flujo_mov_animation.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/flujo_mov_animation.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population movements registered with mobile phones in the COVID19 pandemic in Spain. Data: &lt;a href=&#34;https://www.ine.es/experimental/movilidad/experimental_em.htm&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population movements registered with mobile phones in november 2019 in Spain.&#34; href=&#34;https://dominicroye.github.io/img/album/flujo_nov2019.png&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/flujo_nov2019.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population movements registered with mobile phones in november 2019 in Spain. Data: &lt;a href=&#34;https://www.ine.es/experimental/movilidad/experimental_em.htm&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population point clouds of Ourense since 1975.&#34; href=&#34;https://dominicroye.github.io/img/album/Ourense_pob.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/Ourense_pob.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population point clouds of Ourense since 1975. Data: &lt;a href=&#34;http://ige.eu&#34; target=&#34;_blank&#34;&gt;IGE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population pyramid of Galicia since 1975.&#34; href=&#34;https://dominicroye.github.io/img/album/pop_pyr.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pop_pyr.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population pyramid of Galicia since 1975. Data: &lt;a href=&#34;http://ige.eu&#34; target=&#34;_blank&#34;&gt;IGE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population pyramid of Galician provinces since 1975.&#34; href=&#34;https://dominicroye.github.io/img/album/pop_pyr_galprov.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pop_pyr_galprov.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population pyramid of Galician provinces since 1975. Data: &lt;a href=&#34;http://ige.eu&#34; target=&#34;_blank&#34;&gt;IGE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
  
  
    
      
    
  
  &lt;div class=&#34;box&#34;&gt;&lt;a data-fancybox=&#34;gallery-gallery&#34; data-caption=&#34;Population pyramid of Spanish autonomous community since 1998.&#34; href=&#34;https://dominicroye.github.io/img/album/pop_pyr_ccaa.gif&#34;&gt;
    &lt;img src=&#34;https://dominicroye.github.io/img/album/pop_pyr_ccaa.gif&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
&lt;div class=&#34;imgcap&#34;&gt;Population pyramid of Spanish autonomous community since 1998. Data: &lt;a href=&#34;https://www.ine.es/&#34; target=&#34;_blank&#34;&gt;INE&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
  
  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Effects of hot nights on mortality in Southern Europe</title>
      <link>https://dominicroye.github.io/en/publication/hot_nights_europe_2021/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/publication/hot_nights_europe_2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Heatwave intensity on the Iberian Peninsula: Future climate projections</title>
      <link>https://dominicroye.github.io/en/publication/ehf_climate_change_2021/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/publication/ehf_climate_change_2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bivariate dasymetric map</title>
      <link>https://dominicroye.github.io/en/2021/bivariate-dasymetric-map/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/2021/bivariate-dasymetric-map/</guid>
      <description>
&lt;script src=&#34;https://dominicroye.github.io/en/2021/bivariate-dasymetric-map/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;initial-considerations&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Initial considerations&lt;/h1&gt;
&lt;p&gt;A disadvantage of choropleth maps is that they tend to distort the relationship between the true underlying geography and the represented variable. It is because the administrative divisions do not usually coincide with the geographical reality where people live. Besides, large areas appear to have a weight that they do not really have because of sparsely populated regions. To better reflect reality, more realistic population distributions are used, such as land use. With Geographic Information Systems techniques, it is possible to redistribute the variable of interest as a function of a variable with a smaller spatial unit.&lt;/p&gt;
&lt;p&gt;With point data, the redistribution process is simply clipping points with population based on land use, usually classified as urban. We could also crop and mask with land use polygons when we have a vectorial polygon layer, but an interesting alternative is the same data in raster format. We will see how we can make a dasymetric map using raster data with a resolution of 100 m. This post will use data from census sections of the median income and the Gini index for Spain. We will make a dasymetric and bivariate map, representing both variables with two ranges of colours on the same map.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages&lt;/h1&gt;
&lt;p&gt;In this post we will use the following packages:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;col width=&#34;89%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Collection of packages (visualization, manipulation): ggplot2, dplyr, purrr, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;patchwork&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Simple grammar to combine separate ggplots into the same graphic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;raster&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Import, export and manipulate raster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sf&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Simple Feature: import, export and manipulate vector data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;biscale&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tools and Palettes for Bivariate Thematic Mapping&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sysfonts&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Load fonts in R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;showtext&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Use fonts more easily in R graphs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install the packages if necessary
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;patchwork&amp;quot;)) install.packages(&amp;quot;patchwork&amp;quot;)
if(!require(&amp;quot;sf&amp;quot;)) install.packages(&amp;quot;sf&amp;quot;)
if(!require(&amp;quot;raster&amp;quot;)) install.packages(&amp;quot;raster&amp;quot;)
if(!require(&amp;quot;biscale&amp;quot;)) install.packages(&amp;quot;biscale&amp;quot;)
if(!require(&amp;quot;sysfonts&amp;quot;)) install.packages(&amp;quot;sysfonts&amp;quot;)
if(!require(&amp;quot;showtext&amp;quot;)) install.packages(&amp;quot;showtext&amp;quot;)

# packages
library(tidyverse)
library(sf)
library(readxl)
library(biscale)
library(patchwork)
library(raster)
library(sysfonts)
library(showtext)
library(raster)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;preparation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Preparation&lt;/h1&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;First we download all the necessary data. With the exception of the CORINE Land Cover (~ 200 MB), the data stored on this blog can be obtained directly via the indicated links.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CORINE Land Cover 2018 (geotiff): &lt;a href=&#34;https://land.copernicus.eu/pan-european/corine-land-cover/clc2018?tab=download&#34;&gt;COPERNICUS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Income data and Gini index (excel) [INE]: &lt;a href=&#34;https://dominicroye.github.io/files/renta.zip&#34;&gt;download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Census limits of Spain (vectorial) [INE]: &lt;a href=&#34;https://dominicroye.github.io/files/SECC_CE_20200101.zip&#34;&gt;download&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;import&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Import&lt;/h2&gt;
&lt;p&gt;The first thing we do is to import the land use raster, the income and Gini index data, and the census boundaries.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# raster of CORINE LAND COVER 2018
urb &amp;lt;- raster(&amp;quot;U2018_CLC2018_V2020_20u1.tif&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in showSRID(uprojargs, format = &amp;quot;PROJ&amp;quot;, multiline = &amp;quot;NO&amp;quot;, prefer_proj
## = prefer_proj): Discarded datum Unknown based on GRS80 ellipsoid in Proj4
## definition&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# income data and Gini index
renta &amp;lt;- read_excel(&amp;quot;30824.xlsx&amp;quot;)
gini &amp;lt;- read_excel(&amp;quot;37677.xlsx&amp;quot;)

# census boundaries
limits &amp;lt;- read_sf(&amp;quot;SECC_CE_20200101.shp&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;land-uses&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Land uses&lt;/h2&gt;
&lt;p&gt;In this first step we filter the census sections to obtain those of the Autonomous Community of Madrid, and we create the municipal limits. To dissolve the polygons of census tracts we apply the function &lt;code&gt;group_by()&lt;/code&gt; in combination with &lt;code&gt;summarise()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# filter the Autonomous Community of Madrid
limits &amp;lt;- filter(limits, NCA == &amp;quot;Comunidad de Madrid&amp;quot;)

# obtain the municipal limits
mun_limit &amp;lt;- group_by(limits, CUMUN) %&amp;gt;% summarise()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the next step we cut the land use raster with the limits of Madrid. I recommend always using the &lt;code&gt;crop()&lt;/code&gt; function first and then &lt;code&gt;mask()&lt;/code&gt;, the first function crop to the required extent and the second mask the values. Subsequently, we remove all the cells that correspond to 1 or 2 (urban continuous, discontinuous). Finally, we project the raster.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# project the limits
limits_prj &amp;lt;- st_transform(limits, projection(urb))

# crop and mask 
urb_mad &amp;lt;- crop(urb, limits_prj) %&amp;gt;% 
              mask(limits_prj)

# remove non-urban pixels
urb_mad[!urb_mad %in% 1:2] &amp;lt;- NA 

# plot the raster
plot(urb_mad)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/en/2021/bivariate-dasymetric-map/index.en_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# project
urb_mad &amp;lt;- projectRaster(urb_mad, crs = CRS(&amp;quot;+proj=longlat +datum=WGS84 +no_defs&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this step, we convert the raster data into a point &lt;code&gt;sf&lt;/code&gt; object.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# transform the raster to xyz and a sf object
urb_mad &amp;lt;- as.data.frame(urb_mad, xy = TRUE, na.rm = TRUE) %&amp;gt;%
                st_as_sf(coords = c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;), crs = 4326)

# add the columns of the coordinates
urb_mad &amp;lt;- urb_mad %&amp;gt;% rename(urb = 1) %&amp;gt;% cbind(st_coordinates(urb_mad))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;income-data-and-gini-index&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Income data and Gini index&lt;/h2&gt;
&lt;p&gt;The format of the Excels does not coincide with the original of the INE, since I have cleaned the format before in order to make this post easier. What remains is to create a column with the codes of the census sections and exclude data that correspond to another administrative level.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## income and Gini index data

renta_sec &amp;lt;- mutate(renta, NATCODE = str_extract(CUSEC, &amp;quot;[0-9]{5,10}&amp;quot;), 
                nc_len = str_length(NATCODE),
                mun_name = str_remove(CUSEC, NATCODE) %&amp;gt;% str_trim()) %&amp;gt;%
             filter(nc_len &amp;gt; 5)

gini_sec &amp;lt;- mutate(gini, NATCODE = str_extract(CUSEC, &amp;quot;[0-9]{5,10}&amp;quot;), 
               nc_len = str_length(NATCODE),
               mun_name = str_remove(CUSEC, NATCODE) %&amp;gt;% str_trim()) %&amp;gt;%
             filter(nc_len &amp;gt; 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the next step we join both tables with the census tracts using &lt;code&gt;left_join()&lt;/code&gt; and convert columns of interest in numerical mode.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# join both the income and Gini tables with the census limits
mad &amp;lt;- left_join(limits, renta_sec, by = c(&amp;quot;CUSEC&amp;quot;=&amp;quot;NATCODE&amp;quot;)) %&amp;gt;% 
          left_join(gini_sec, by = c(&amp;quot;CUSEC&amp;quot;=&amp;quot;NATCODE&amp;quot;))

# convert selected columns to numeric
mad &amp;lt;- mutate_at(mad, c(23:27, 30:31), as.numeric)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;bivariate-variable&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bivariate variable&lt;/h2&gt;
&lt;p&gt;To create a bivariate map we must construct a single variable that combines different classes of two variables. Usually we make three classes of each variable which leads to nine combinations; in our case, the average income and the Gini index. The &lt;code&gt;biscale&lt;/code&gt; package includes helper functions to carry out this process. With the &lt;code&gt;bi_class()&lt;/code&gt; function we create the classification variable using quantiles as algorithm. Since in both variables we find missing values, we correct those combinations between both variables where an &lt;code&gt;NA&lt;/code&gt; appears.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create bivariate classification
mapbivar &amp;lt;- bi_class(mad, GINI_2017, RNMP_2017, style = &amp;quot;quantile&amp;quot;, dim = 3) %&amp;gt;% 
             mutate(bi_class = ifelse(str_detect(bi_class, &amp;quot;NA&amp;quot;), NA, bi_class))

# results
head(dplyr::select(mapbivar, GINI_2017, RNMP_2017, bi_class))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Simple feature collection with 6 features and 3 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: 415538.9 ymin: 4451487 xmax: 469341.7 ymax: 4552422
## projected CRS:  ETRS89 / UTM zone 30N
## # A tibble: 6 x 4
##   GINI_2017 RNMP_2017 bi_class                                          geometry
##       &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;                                   &amp;lt;MULTIPOLYGON [m]&amp;gt;
## 1      NA          NA &amp;lt;NA&amp;gt;     (((446007.9 4552348, 446133.7 4552288, 446207.8 ~
## 2      31       13581 2-2      (((460243.8 4487756, 460322.4 4487739, 460279 44~
## 3      30       12407 2-2      (((457392.5 4486262, 457391.6 4486269, 457391.1 ~
## 4      34.3     13779 3-2      (((468720.8 4481374, 468695.5 4481361, 468664.6 ~
## 5      33.5      9176 3-1      (((417140.2 4451736, 416867.5 4451737, 416436.8 ~
## 6      26.2     10879 1-1      (((469251.9 4480826, 469268.1 4480797, 469292.6 ~&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We finish by redistributing the inequality variable over the pixels of urban land use. The &lt;code&gt;st_join()&lt;/code&gt; function joins the data with the land use points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# redistribute urban pixels to inequality
mapdasi &amp;lt;- st_join(urb_mad, st_transform(mapbivar, 4326))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;map-building&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Map building&lt;/h1&gt;
&lt;div id=&#34;legend-and-font&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Legend and font&lt;/h2&gt;
&lt;p&gt;Before constructing both maps we must create the legend using the &lt;code&gt;bi_legend()&lt;/code&gt; function. In the function we define the titles for each variable, the number of dimensions and the color scale. Finally, we add the Montserrat font for the final titles in the graphic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# bivariate legend
legend2 &amp;lt;- bi_legend(pal = &amp;quot;DkViolet&amp;quot;,
                     dim = 3,
                     xlab = &amp;quot;Higher inequality&amp;quot;,
                     ylab = &amp;quot;Higher income&amp;quot;,
                     size = 9)


# download font
font_add_google(&amp;quot;Montserrat&amp;quot;, &amp;quot;Montserrat&amp;quot;)
showtext_auto()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dasymetric-map&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dasymetric map&lt;/h2&gt;
&lt;p&gt;We build this map using &lt;code&gt;geom_tile()&lt;/code&gt; for the pixels and &lt;code&gt;geom_sf()&lt;/code&gt; for the municipal boundaries. In addition, it will be the map on the right where we also place the legend. To add the legend we use the &lt;code&gt;annotation_custom()&lt;/code&gt; function indicating the position in the geographical coordinates of the map. The &lt;code&gt;biscale&lt;/code&gt; package also helps us with the color definition via the &lt;code&gt;bi_scale_fill()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p2 &amp;lt;- ggplot(mapdasi) + 
  geom_tile(aes(X, Y, 
                fill = bi_class), 
            show.legend = FALSE) +
  geom_sf(data = mun_limit,  
          color = &amp;quot;grey80&amp;quot;, 
          fill = NA, 
          size = 0.2) +
  annotation_custom(ggplotGrob(legend2), 
                    xmin = -3.25, xmax = -2.65,
                    ymin = 40.55, ymax = 40.95) +
  bi_scale_fill(pal = &amp;quot;DkViolet&amp;quot;, 
                dim = 3, 
                na.value = &amp;quot;grey90&amp;quot;) +
  labs(title = &amp;quot;dasymetric&amp;quot;, x = &amp;quot;&amp;quot;, y =&amp;quot;&amp;quot;) +
  bi_theme() +
  theme(plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, size = 30, face = &amp;quot;bold&amp;quot;)) +
  coord_sf(crs = 4326)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;choropleth-map&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Choropleth map&lt;/h2&gt;
&lt;p&gt;The choropleth map is built in a similar way to the previous map with the difference that we use &lt;code&gt;geom_sf()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1 &amp;lt;- ggplot(mapbivar) + 
  geom_sf(aes(fill = bi_class), 
          colour = NA, 
          size = .1, 
          show.legend = FALSE) +
  geom_sf(data = mun_limit,  
          color = &amp;quot;white&amp;quot;, 
          fill = NA, 
          size = 0.2) +
  bi_scale_fill(pal = &amp;quot;DkViolet&amp;quot;, 
                dim = 3, 
                na.value = &amp;quot;grey90&amp;quot;) +
  labs(title = &amp;quot;choropleth&amp;quot;,  x = &amp;quot;&amp;quot;, y =&amp;quot;&amp;quot;) +
  bi_theme() +
  theme(plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, size = 30, face = &amp;quot;bold&amp;quot;)) +
  coord_sf(crs = 4326)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;merge-both-maps&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Merge both maps&lt;/h2&gt;
&lt;p&gt;With the help of the &lt;code&gt;patchwork&lt;/code&gt; package, we combine both maps in a single row, first the choropleth map and on its right the dasymmetric map. More details of the grammar used for the combination of graphics &lt;a href=&#34;https://patchwork.data-imaginist.com/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# combine 
p &amp;lt;- p1 | p2

# final map
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/en/2021/bivariate-dasymetric-map/index.en_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;3300&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Glossary on atmospheric electricity and its effects on biology</title>
      <link>https://dominicroye.github.io/en/publication/glossary_electricity_2020/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/publication/glossary_electricity_2020/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A heatmap as calendar</title>
      <link>https://dominicroye.github.io/en/2020/a-heatmap-as-calendar/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/2020/a-heatmap-as-calendar/</guid>
      <description>
&lt;script src=&#34;https://dominicroye.github.io/en/2020/a-heatmap-as-calendar/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Recently I was looking for a visual representation to show the daily changes of temperature, precipitation and wind in an application &lt;a href=&#34;https://xeo81.shinyapps.io/MeteoExtremosGalicia/&#34;&gt;xeo81.shinyapps.io/MeteoExtremosGalicia&lt;/a&gt; (in Spanish), which led me to use a heatmap in the form of a calendar. The &lt;a href=&#34;https://shiny.rstudio.com/&#34;&gt;shiny&lt;/a&gt; application is updated every four hours with new data showing calendars for each weather station. The heatmap as a calendar allows you to visualize any variable with a daily time reference.&lt;/p&gt;
&lt;div id=&#34;packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages&lt;/h2&gt;
&lt;p&gt;In this post we will use the following packages:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;col width=&#34;89%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Collection of packages (visualization, manipulation): ggplot2, dplyr, purrr, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;lubridate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Easy manipulation of dates and times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ragg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ragg provides a set of high quality and high performance raster devices&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# instalamos los paquetes si hace falta
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;ragg&amp;quot;)) install.packages(&amp;quot;ragg&amp;quot;)
if(!require(&amp;quot;lubridate&amp;quot;)) install.packages(&amp;quot;lubridate&amp;quot;)

# paquetes
library(tidyverse)
library(lubridate)
library(ragg)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For those with less experience with &lt;code&gt;tidyverse&lt;/code&gt;, I recommend the short introduction on this blog &lt;a href=&#34;https://dominicroye.github.io/es/2020/una-muy-breve-introducci%C3%B3n-a-tidyverse/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;In this example we will use the daily precipitation of Santiago de Compostela for this year 2020 (until December 20) &lt;a href=&#34;https://dominicroye.github.io/files/precipitation_santiago.csv&#34;&gt;download&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# import the data
dat_pr &amp;lt;- read_csv(&amp;quot;precipitation_santiago.csv&amp;quot;)
dat_pr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 355 x 2
##    date          pr
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 2020-01-01   0  
##  2 2020-01-02   0  
##  3 2020-01-03   5.4
##  4 2020-01-04   0  
##  5 2020-01-05   0  
##  6 2020-01-06   0  
##  7 2020-01-07   0  
##  8 2020-01-08   1  
##  9 2020-01-09   3.8
## 10 2020-01-10   0  
## # ... with 345 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;preparation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparation&lt;/h2&gt;
&lt;p&gt;In the first step we must 1) complement the time series from December 21 to December 31 with &lt;code&gt;NA&lt;/code&gt;, 2) add the day of the week, the month, the week number and the day. Depending on whether we want each week to start on Sunday or Monday, we indicate it in the &lt;code&gt;wday()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_pr &amp;lt;- dat_pr %&amp;gt;% 
          complete(date = seq(ymd(&amp;quot;2020-01-01&amp;quot;), 
                              ymd(&amp;quot;2020-12-31&amp;quot;), 
                              &amp;quot;day&amp;quot;)) %&amp;gt;%
          mutate(weekday = wday(date, label = T, week_start = 1), 
                 month = month(date, label = T, abbr = F),
                 week = isoweek(date),
                 day = day(date))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the next step we need to make a change in the week of the year, which is because in certain years there may be, for example, a few days at the end of the year as the first week of the following year. We also create two new columns. On the one hand, we categorize precipitation into 14 classes and on the other, we define a white text color for darker tones in the heatmap.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_pr &amp;lt;- mutate(dat_pr, 
                 week = case_when(month == &amp;quot;December&amp;quot; &amp;amp; week == 1 ~ 53,
                                  month == &amp;quot;January&amp;quot; &amp;amp; week %in% 52:53 ~ 0,
                                  TRUE ~ week),
                 pcat = cut(pr, c(-1, 0, .5, 1:5, 7, 9, 15, 20, 25, 30, 300)),
                 text_col = ifelse(pcat %in% c(&amp;quot;(15,20]&amp;quot;, &amp;quot;(20,25]&amp;quot;, &amp;quot;(25,30]&amp;quot;, &amp;quot;(30,300]&amp;quot;), 
                                   &amp;quot;white&amp;quot;, &amp;quot;black&amp;quot;)) 
      
dat_pr  &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 366 x 8
##    date          pr weekday month    week   day pcat    text_col
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt;   &amp;lt;ord&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;   &amp;lt;chr&amp;gt;   
##  1 2020-01-01   0   Wed     January     1     1 (-1,0]  black   
##  2 2020-01-02   0   Thu     January     1     2 (-1,0]  black   
##  3 2020-01-03   5.4 Fri     January     1     3 (5,7]   black   
##  4 2020-01-04   0   Sat     January     1     4 (-1,0]  black   
##  5 2020-01-05   0   Sun     January     1     5 (-1,0]  black   
##  6 2020-01-06   0   Mon     January     2     6 (-1,0]  black   
##  7 2020-01-07   0   Tue     January     2     7 (-1,0]  black   
##  8 2020-01-08   1   Wed     January     2     8 (0.5,1] black   
##  9 2020-01-09   3.8 Thu     January     2     9 (3,4]   black   
## 10 2020-01-10   0   Fri     January     2    10 (-1,0]  black   
## # ... with 356 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualization&lt;/h2&gt;
&lt;p&gt;First we create a color ramp from Brewer colors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# color ramp
pubu &amp;lt;- RColorBrewer::brewer.pal(9, &amp;quot;PuBu&amp;quot;)
col_p &amp;lt;- colorRampPalette(pubu)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Second, before building the chart, we define a custom theme as a function. To do this, we specify all the elements and their modifications with the help of the &lt;code&gt;theme()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_calendar &amp;lt;- function(){

 theme(aspect.ratio = 1/2,
       
       axis.title = element_blank(),
       axis.ticks = element_blank(),
       axis.text.y = element_blank(),
       axis.text = element_text(family = &amp;quot;Montserrat&amp;quot;),
       
       panel.grid = element_blank(),
       panel.background = element_blank(),
       
       strip.background = element_blank(),
       strip.text = element_text(family = &amp;quot;Montserrat&amp;quot;, face = &amp;quot;bold&amp;quot;, size = 15),
       
       legend.position = &amp;quot;top&amp;quot;,
       legend.text = element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = .5),
       legend.title = element_text(family = &amp;quot;Montserrat&amp;quot;, size = 9, hjust = 1),
       
       plot.caption =  element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = 1, size = 8),
       panel.border = element_rect(colour = &amp;quot;grey&amp;quot;, fill=NA, size=1),
       plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = .5, size = 26, 
                                 face = &amp;quot;bold&amp;quot;, 
                                 margin = margin(0,0,0.5,0, unit = &amp;quot;cm&amp;quot;)),
       plot.subtitle = element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = .5, size = 16)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we build the final chart using &lt;code&gt;geom_tile()&lt;/code&gt; and specify the day of the week as the X axis and the week number as the Y axis. As you can see in the variable of the week number (&lt;code&gt;-week&lt;/code&gt;), I change the sign so that the first day of each month is in the first row. With &lt;code&gt;geom_text()&lt;/code&gt; we add the number of each day with its color according to what we defined previously. In &lt;code&gt;guides&lt;/code&gt; we make the adjustments of the colorbar and in &lt;code&gt;scale_fill/colour_manual()&lt;/code&gt; we define the corresponding colors. An important step is found in &lt;code&gt;facet_wrap()&lt;/code&gt; where we specify the facets composition of each month. The facets should have free scales and the ideal would be a 4 x 3 facet distribution. It is possible to modify the position of the day number to another using the arguments &lt;code&gt;nudge_*&lt;/code&gt; in &lt;code&gt;geom_text()&lt;/code&gt; (eg bottom-right corner: nudge_x = .35, nudge_y = -.25).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;    ggplot(dat_pr, 
           aes(weekday, -week, fill = pcat)) +
      geom_tile(colour = &amp;quot;white&amp;quot;, size = .4)  + 
      geom_text(aes(label = day, colour = text_col), size = 2.5) +
      guides(fill = guide_colorsteps(barwidth = 25, 
                                     barheight = .4,
                                    title.position = &amp;quot;top&amp;quot;)) +
       scale_fill_manual(values = c(&amp;quot;white&amp;quot;, col_p(13)),
                         na.value = &amp;quot;grey90&amp;quot;, drop = FALSE) +
       scale_colour_manual(values = c(&amp;quot;black&amp;quot;, &amp;quot;white&amp;quot;), guide = FALSE) + 
       facet_wrap(~ month, nrow = 4, ncol = 3, scales = &amp;quot;free&amp;quot;) +
       labs(title = &amp;quot;How is 2020 being in Santiago?&amp;quot;, 
             subtitle = &amp;quot;Precipitation&amp;quot;,
             caption = &amp;quot;Data: Meteogalicia&amp;quot;,
             fill = &amp;quot;mm&amp;quot;) +
       theme_calendar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/en/2020/a-heatmap-as-calendar/index.en_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To export we will use the &lt;a href=&#34;https://github.com/r-lib/ragg&#34;&gt;&lt;code&gt;ragg&lt;/code&gt;&lt;/a&gt; package, which provides higher performance and quality than the standard raster devices provided by grDevices.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggsave(&amp;quot;pr_calendar.png&amp;quot;, height = 10, width = 8, device = agg_png())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In other heatmap calendars I have added the predominant wind direction of each day as an arrow using &lt;code&gt;geom_arrow()&lt;/code&gt; from the &lt;code&gt;metR&lt;/code&gt; package (it can be seen in the aforementioned application).&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Contrasting patterns of temperature related mortality and hospitalization by cardiovascular and respiratory diseases in 52 Spanish cities</title>
      <link>https://dominicroye.github.io/en/publication/morti-morbilidad_spain_2021/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/publication/morti-morbilidad_spain_2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Impact of Extreme Temperatures on Ambulance Dispatches Due to Cardiovascular Causes in North-West Spain</title>
      <link>https://dominicroye.github.io/en/publication/emergency_calls_spain_2020/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/publication/emergency_calls_spain_2020/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Climate animation of maximum temperatures</title>
      <link>https://dominicroye.github.io/en/2020/climate-animation-of-maximum-temperatures/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/2020/climate-animation-of-maximum-temperatures/</guid>
      <description>


&lt;p&gt;In the field of data visualization, the animation of spatial data in its temporal dimension can show fascinating changes and patterns. As a result of one of the last publications in the social networks that I have made, I was asked to make a post about how I created it. Well, here we go to start with an example of data from mainland Spain. You can find more animations in the graphics &lt;a href=&#34;https://dominicroye.github.io/en/graphs/climate/&#34;&gt;section&lt;/a&gt; of my blog.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I couldn&amp;#39;t resist to make another animation. Smoothed daily maximum temperature throughout the year in Europe. &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ggplot2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ggplot2&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/dataviz?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#dataviz&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/climate?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#climate&lt;/a&gt; &lt;a href=&#34;https://t.co/ZC9L0vh3vR&#34;&gt;pic.twitter.com/ZC9L0vh3vR&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dominic Royé (@dr_xeo) &lt;a href=&#34;https://twitter.com/dr_xeo/status/1259059168817930240?ref_src=twsrc%5Etfw&#34;&gt;May 9, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages&lt;/h2&gt;
&lt;p&gt;In this post we will use the following packages:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;14%&#34; /&gt;
&lt;col width=&#34;85%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Packages&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Collection of packages (visualization, manipulation): ggplot2, dplyr, purrr, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;rnaturalearth&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Vector maps of the world ‘Natural Earth’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;lubridate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Easy manipulation of dates and times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sf&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Simple Feature: import, export and manipulate vector data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;raster&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Import, export and manipulate raster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ggthemes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Themes for ggplot2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;gifski&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Create gifs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;showtext&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Use fonts more easily in R graphs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sysfonts&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Load fonts in R&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install the packages if necessary
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;rnaturalearth&amp;quot;)) install.packages(&amp;quot;rnaturalearth&amp;quot;)
if(!require(&amp;quot;lubridate&amp;quot;)) install.packages(&amp;quot;lubridate&amp;quot;)
if(!require(&amp;quot;sf&amp;quot;)) install.packages(&amp;quot;sf&amp;quot;)
if(!require(&amp;quot;ggthemes&amp;quot;)) install.packages(&amp;quot;ggthemes&amp;quot;)
if(!require(&amp;quot;gifski&amp;quot;)) install.packages(&amp;quot;gifski&amp;quot;)
if(!require(&amp;quot;raster&amp;quot;)) install.packages(&amp;quot;raster&amp;quot;)
if(!require(&amp;quot;sysfonts&amp;quot;)) install.packages(&amp;quot;sysfonts&amp;quot;)
if(!require(&amp;quot;showtext&amp;quot;)) install.packages(&amp;quot;showtext&amp;quot;)

# packages
library(raster)
library(tidyverse)
library(lubridate)
library(ggthemes)
library(sf)
library(rnaturalearth)
library(extrafont)
library(showtext)
library(RColorBrewer)
library(gifski)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For those with less experience with &lt;code&gt;tidyverse&lt;/code&gt;, I recommend the short introduction on this blog (&lt;a href=&#34;https://dominicroye.github.io/en/2020/a-very-short-introduction-to-tidyverse/&#34;&gt;post&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preparation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Preparation&lt;/h1&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;First, we need to download the STEAD dataset of the maximum temperature (&lt;em&gt;tmax_pen.nc&lt;/em&gt;) in &lt;em&gt;netCDF&lt;/em&gt; format from the CSIC repository &lt;a href=&#34;https://digital.csic.es/handle/10261/177655&#34;&gt;here&lt;/a&gt; (the size of the data is 2 GB). It is a set of data with a spatial resolution of 5 km and includes daily maximum temperatures from 1901 to 2014. In climatology and meteorology, a widely used format is that of &lt;em&gt;netCDF&lt;/em&gt; databases, which allow to obtain a multidimensional structure and to exchange data independently of the usued operating system. It is a space-time format with a regular or irregular grid. The multidimensional structure in the form of arrays or cubes can handle not only spatio-temporal data but also multivariate ones. In our dataset we will have an array of three dimensions: longitude, latitude and time of the maximum temperature.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://dominicroye.github.io/img/3d_ncdf.en.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Royé 2015. Sémata: Ciencias Sociais e Humanidades 27:11-37&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;import-the-dataset&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Import the dataset&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;netCDF&lt;/em&gt; format with &lt;em&gt;.nc&lt;/em&gt; extension can be imported via two main packages: 1) &lt;code&gt;ncdf4&lt;/code&gt; and 2) &lt;code&gt;raster&lt;/code&gt;. Actually, the &lt;code&gt;raster&lt;/code&gt; package use the first package to import the &lt;em&gt;netCDF&lt;/em&gt; datasets. In this post we will use the &lt;code&gt;raster&lt;/code&gt; package since it is somewhat easier, with some very useful and more universal functions for all types of &lt;em&gt;raster&lt;/em&gt; format. The main import functions are: &lt;code&gt;raster()&lt;/code&gt;, &lt;code&gt;stack()&lt;/code&gt; and &lt;code&gt;brick()&lt;/code&gt;. The first function only allows you to import a single layer, instead, the last two functions are used for multidimensional data. In our dataset we only have one variable, therefore it would not be necessary to use the &lt;code&gt;varname&lt;/code&gt; argument.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# import netCDF data
tmx &amp;lt;- brick(&amp;quot;tmax_pen.nc&amp;quot;, varname = &amp;quot;tx&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required namespace: ncdf4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tmx # metadata&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## class      : RasterBrick 
## dimensions : 190, 230, 43700, 41638  (nrow, ncol, ncell, nlayers)
## resolution : 0.0585, 0.045  (x, y)
## extent     : -9.701833, 3.753167, 35.64247, 44.19247  (xmin, xmax, ymin, ymax)
## crs        : +proj=longlat +datum=WGS84 +no_defs 
## source     : C:/Users/xeo19/Documents/GitHub/blogR_update/content/post/en/2020-10-11-climate-animation-maximum-temperature/tmax_pen.nc 
## names      : X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, ... 
## Time (days since 1901-01-01): 1, 41638 (min, max)
## varname    : tx&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;RasterBrick&lt;/code&gt; object details show you all the necessary metadata: the resolution, the dimensions or the type of projection, or the name of the variable. It also tells us that it only points to the data source and has not imported them into the memory, which makes it easier to work with large datasets.&lt;/p&gt;
&lt;p&gt;To access any layer we use &lt;code&gt;[[ ]]&lt;/code&gt; with the corresponding index. So we can easily plot any day of the 41,638 days we have.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# map any day
plot(tmx[[200]], col = rev(heat.colors(7)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-10-11-climate-animation-maximum-temperature/index.en_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;calculate-the-average-temperature&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Calculate the average temperature&lt;/h2&gt;
&lt;p&gt;In this step the objective is to calculate the average maximum temperature for each day of the year. Therefore, the first thing we do is to create a vector, indicating the day of the year for the entire time series. In the &lt;code&gt;raster&lt;/code&gt; package we have the &lt;code&gt;stackApply()&lt;/code&gt; function that allows us to apply another function on groups of layers, or rather, indexes. Since our dataset is large, we include this function in parallelization functions.&lt;/p&gt;
&lt;p&gt;For the parallelization we start and end always with the &lt;code&gt;beginClusterr()&lt;/code&gt; and &lt;code&gt;endCluster()&lt;/code&gt;. In the first function we must indicate the number of cores we want to use. In this case, I use 4 of 7 possible cores, however, the number must be changed according to the characteristics of each CPU, the general rule is n-1. So the &lt;code&gt;clusterR&lt;/code&gt; function execute a function in parallel with multiple cores. The first argument corresponds to the raster object, the second to the used function, and as list argument we pass the arguments of the &lt;code&gt;stackApply()&lt;/code&gt; function: the indexes that create the groups and the function used for each of the groups. Adding the argument &lt;code&gt;progress = &#39;text&#39;&lt;/code&gt; shows a progress bar of the calculation process.&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  
For the US dataset I did the preprocessing, the calculation of the average, in a cloud computing platform through &lt;a href=&#34;https://earthengine.google.com/&#34;&gt;Google Earth Engine&lt;/a&gt;, which makes the whole process faster. In the case of Australia the preprocessing was more complex as the dataset is separated in multiple &lt;em&gt;netCDF&lt;/em&gt; files for each year.

&lt;/div&gt;
&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# convert the dates between 1901 and 2014 to days of the year
time_days &amp;lt;- yday(seq(as_date(&amp;quot;1901-01-01&amp;quot;), as_date(&amp;quot;2014-12-31&amp;quot;), &amp;quot;day&amp;quot;))

# calculate the average
beginCluster(4)
tmx_mean &amp;lt;- clusterR(tmx, stackApply, args = list(indices = time_days, fun = mean))
endCluster()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;smooth-the-temperature-variability&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Smooth the temperature variability&lt;/h2&gt;
&lt;p&gt;Before we start to smooth the time series of our &lt;em&gt;RasterBrick&lt;/em&gt;, an example of why we do it. We extract a pixel from our dataset at coordinates -1º of longitude and 40º of latitude using the &lt;code&gt;extract()&lt;/code&gt; function. Since the function with the same name appears in several packages, we must change to the form &lt;code&gt;package_name::function_name&lt;/code&gt;. The result is a matrix with a single row corresponding to the pixel and 366 columns of the days of the year. The next step is to create a &lt;em&gt;data.frame&lt;/em&gt; with a &lt;em&gt;dummy&lt;/em&gt; date and the extracted maximum temperature.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# extract a pixel
point_ts &amp;lt;- raster::extract(tmx_mean, matrix(c(-1, 40), nrow = 1))
dim(point_ts) # dimensions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]   1 366&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create a data.frame
df &amp;lt;- data.frame(date = seq(as_date(&amp;quot;2000-01-01&amp;quot;), as_date(&amp;quot;2000-12-31&amp;quot;), &amp;quot;day&amp;quot;),
                 tmx = point_ts[1,])

# visualize the maximum temperature
ggplot(df, 
       aes(date, tmx)) + 
     geom_line() + 
  scale_x_date(date_breaks = &amp;quot;month&amp;quot;, date_labels = &amp;quot;%b&amp;quot;) +
  scale_y_continuous(breaks = seq(5, 28, 2)) +
  labs(y = &amp;quot;maximum temperature&amp;quot;, x = &amp;quot;&amp;quot;, colour =  &amp;quot;&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-10-11-climate-animation-maximum-temperature/index.en_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The graph clearly shows the still existing variability, which would cause an animation to fluctuate quite a bit. Therefore, we create a smoothing function based on a local polynomial regression fit (LOESS), more details can be found in the help of the &lt;code&gt;loess()&lt;/code&gt; function. The most important argument is &lt;code&gt;span&lt;/code&gt;, which determines the degree of smoothing, the smaller the value the less smooth the curve will be. I found the best result showed a value of 0.5.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;daily_smooth &amp;lt;- function(x, span = 0.5){
  
  if(all(is.na(x))){
   
    return(x) 
   
  } else {
    
  df &amp;lt;- data.frame(yd = 1:366, ta = x)
  m &amp;lt;- loess(ta ~ yd, span = span, data = df)
  est &amp;lt;- predict(m, 1:366)

  return(est)
  
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We apply our new smoothing function to the extracted time series and make some changes to be able to visualize the difference between the original and smoothed data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# smooth the temperature
df &amp;lt;- mutate(df, tmx_smoothed = daily_smooth(tmx)) %&amp;gt;% 
          pivot_longer(2:3, names_to = &amp;quot;var&amp;quot;, values_to = &amp;quot;temp&amp;quot;)

# visualize the difference
ggplot(df, 
       aes(date, temp, 
           colour = var)) + 
     geom_line() + 
  scale_x_date(date_breaks = &amp;quot;month&amp;quot;, date_labels = &amp;quot;%b&amp;quot;) +
  scale_y_continuous(breaks = seq(5, 28, 2)) +
  scale_colour_manual(values = c(&amp;quot;#f4a582&amp;quot;, &amp;quot;#b2182b&amp;quot;)) +
  labs(y = &amp;quot;maximum temperature&amp;quot;, x = &amp;quot;&amp;quot;, colour =  &amp;quot;&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-10-11-climate-animation-maximum-temperature/index.en_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As we see in the graph, the smoothed curve follows the original curve very well. In the next step we apply our function to the &lt;em&gt;RasterBrick&lt;/em&gt; with the &lt;code&gt;calc()&lt;/code&gt; function. The function returns as many layers as those returned by the function used for each of the time series.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# smooth the RasterBrick
tmx_smooth &amp;lt;- calc(tmx_mean, fun = daily_smooth)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualization&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Visualization&lt;/h1&gt;
&lt;div id=&#34;preparation-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparation&lt;/h2&gt;
&lt;p&gt;To visualize the maximum temperatures throughout the year, first, we convert the &lt;em&gt;RasterBrick&lt;/em&gt; to a &lt;em&gt;data.frame&lt;/em&gt;, including longitude and latitude, but removing all time series without values (&lt;code&gt;NA&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# convert to data.frame
tmx_mat &amp;lt;- as.data.frame(tmx_smooth, xy = TRUE, na.rm = TRUE)

# rename the columns 
tmx_mat &amp;lt;- set_names(tmx_mat, c(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;, str_c(&amp;quot;D&amp;quot;, 1:366)))
str(tmx_mat[, 1:10])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    20676 obs. of  10 variables:
##  $ lon: num  -8.03 -7.98 -7.92 -7.86 -7.8 ...
##  $ lat: num  43.8 43.8 43.8 43.8 43.8 ...
##  $ D1 : num  10.5 10.3 10 10.9 11.5 ...
##  $ D2 : num  10.5 10.3 10.1 10.9 11.5 ...
##  $ D3 : num  10.5 10.3 10.1 10.9 11.5 ...
##  $ D4 : num  10.6 10.4 10.1 10.9 11.5 ...
##  $ D5 : num  10.6 10.4 10.1 11 11.6 ...
##  $ D6 : num  10.6 10.4 10.1 11 11.6 ...
##  $ D7 : num  10.6 10.4 10.2 11 11.6 ...
##  $ D8 : num  10.6 10.4 10.2 11 11.6 ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Second, we import the administrative boundaries with the &lt;code&gt;ne_countries()&lt;/code&gt; function from the &lt;code&gt;rnaturalearth&lt;/code&gt; package, limiting the extension to the region of the Iberian Peninsula, southern France and northern Africa.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# import global boundaries
map &amp;lt;- ne_countries(scale = 10, returnclass = &amp;quot;sf&amp;quot;) %&amp;gt;% st_cast(&amp;quot;MULTILINESTRING&amp;quot;)

# limit the extension
map &amp;lt;- st_crop(map, xmin = -10, xmax = 5, ymin = 35, ymax = 44) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## although coordinates are longitude/latitude, st_intersection assumes that they are planar&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: attribute variables are assumed to be spatially constant throughout all
## geometries&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# map of boundaries
plot(map)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: plotting the first 9 out of 94 attributes; use max.plot = 94 to plot
## all&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-10-11-climate-animation-maximum-temperature/index.en_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Third, we create a vector with the day of the year as labels in order to include them later in the animation. In addition, we define the break points for the maximum temperature, adapted to the distribution of our data, to obtain a categorization with a total of 20 classes.&lt;/p&gt;
&lt;p&gt;Fourth, we apply the &lt;code&gt;cut()&lt;/code&gt; function with the breaks to all the columns with temperature data of each day of the year.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# labels of day of the year
lab &amp;lt;- as_date(0:365, &amp;quot;2000-01-01&amp;quot;) %&amp;gt;% format(&amp;quot;%d %B&amp;quot;)

# breaks for the temperature data
ct &amp;lt;- c(-5, 0, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 40, 45)

# categorized data with fixed breaks
tmx_mat_cat &amp;lt;- mutate_at(tmx_mat, 3:368, cut, breaks = ct)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fifth, we download the Montserrat font and define the colors corresponding to the created classes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# download font
font_add_google(&amp;quot;Montserrat&amp;quot;, &amp;quot;Montserrat&amp;quot;)

# use of showtext with 300 DPI
showtext_opts(dpi = 300)
showtext_auto()

# define the color ramp
col_spec &amp;lt;- colorRampPalette(rev(brewer.pal(11, &amp;quot;Spectral&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;static-map&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Static map&lt;/h2&gt;
&lt;p&gt;In this first plot we make a map of May 29 (day 150). I am not going to explain all the details of the construction with &lt;code&gt;ggplot2&lt;/code&gt;, however, it is important to note that I use the &lt;code&gt;aes_string()&lt;/code&gt; function instead of &lt;code&gt;aes()&lt;/code&gt; to use the column names in string format. With the &lt;code&gt;geom_raster()&lt;/code&gt; function we add the gridded temperature data as the first layer of the graph and with &lt;code&gt;geom_sf()&lt;/code&gt; the boundaries in &lt;code&gt;sf&lt;/code&gt; class. Finally, the &lt;code&gt;guide_colorsteps()&lt;/code&gt; function allows you to create a nice legend based on the classes created by the &lt;code&gt;cut()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(tmx_mat_cat) + 
         geom_raster(aes_string(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;, fill = &amp;quot;D150&amp;quot;)) +
         geom_sf(data = map,
                 colour = &amp;quot;grey50&amp;quot;, size = 0.2) +
  coord_sf(expand = FALSE) +
  scale_fill_manual(values = col_spec(20), drop = FALSE) +
  guides(fill = guide_colorsteps(barwidth = 30, 
                                 barheight = 0.5,
                                 title.position = &amp;quot;right&amp;quot;,
                                 title.vjust = .1)) +
   theme_void() +
   theme(legend.position = &amp;quot;top&amp;quot;,
      legend.justification = 1,
      plot.caption = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  margin = margin(b = 5, t = 10, unit = &amp;quot;pt&amp;quot;)),                
      plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                size = 16, face = &amp;quot;bold&amp;quot;, 
                                margin = margin(b = 2, t = 5, unit = &amp;quot;pt&amp;quot;)),
     legend.text = element_text(family = &amp;quot;Montserrat&amp;quot;),
     plot.subtitle = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  size = 13, 
                                  margin = margin(b = 10, t = 5, unit = &amp;quot;pt&amp;quot;))) +
   labs(title = &amp;quot;Average maximum temperature during the year in Spain&amp;quot;, 
     subtitle = lab[150], 
     caption = &amp;quot;Reference period 1901-2014. Data: STEAD&amp;quot;,
     fill = &amp;quot;ºC&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/img/fig_1.en.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animation-of-the-whole-year&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Animation of the whole year&lt;/h2&gt;
&lt;p&gt;The final animation consists of creating a gif from all the images of 366 days, in principle, the &lt;code&gt;gganimate&lt;/code&gt; package could be used, but in my experience it is slower, since it requires a &lt;code&gt;data.frame&lt;/code&gt; in long format. In this example a long table would have more than seven million rows. So what we do here is to use a loop over the columns and join all the created images with the &lt;code&gt;gifski&lt;/code&gt; package that also uses &lt;code&gt;gganimate&lt;/code&gt; for rendering.&lt;/p&gt;
&lt;p&gt;Before looping we create a vector with the time steps or names of the columns, and another vector with the name of the images, including the name of the folder. In order to obtain a list of images ordered by their number, we must maintain three figures, filling the positions on the left with zeros.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;time_step &amp;lt;- str_c(&amp;quot;D&amp;quot;, 1:366)

files &amp;lt;- str_c(&amp;quot;./ta_anima/D&amp;quot;, str_pad(1:366, 3, &amp;quot;left&amp;quot;, &amp;quot;0&amp;quot;), &amp;quot;.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lastly, we include the above plot construction in a for loop.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for(i in 1:366){

 ggplot(tmx_mat_cat) + 
         geom_raster(aes_string(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;, fill = time_step[i])) +
         geom_sf(data = map,
                 colour = &amp;quot;grey50&amp;quot;, size = 0.2) +
  coord_sf(expand = FALSE) +
  scale_fill_manual(values = col_spec(20), drop = FALSE) +
  guides(fill = guide_colorsteps(barwidth = 30, 
                                 barheight = 0.5,
                                 title.position = &amp;quot;right&amp;quot;,
                                 title.vjust = .1)) +
   theme_void() +
   theme(legend.position = &amp;quot;top&amp;quot;,
      legend.justification = 1,
      plot.caption = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  margin = margin(b = 5, t = 10, unit = &amp;quot;pt&amp;quot;)),                
      plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                size = 16, face = &amp;quot;bold&amp;quot;, 
                                margin = margin(b = 2, t = 5, unit = &amp;quot;pt&amp;quot;)),
     legend.text = element_text(family = &amp;quot;Montserrat&amp;quot;),
     plot.subtitle = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  size = 13, 
                                  margin = margin(b = 10, t = 5, unit = &amp;quot;pt&amp;quot;))) +
   labs(title = &amp;quot;Average maximum temperature during the year in Spain&amp;quot;, 
     subtitle = lab[i], 
     caption = &amp;quot;Reference period 1901-2014. Data: STEAD&amp;quot;,
     fill = &amp;quot;ºC&amp;quot;)
  
  ggsave(files[i], width = 8.28, height = 7.33, type = &amp;quot;cairo&amp;quot;)
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After having created images for each day of the year, we only have to create the gif.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gifski(files, &amp;quot;tmx_spain.gif&amp;quot;, width = 800, height = 700, loop = FALSE, delay = 0.05)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/img/tmx_spain.en.gif&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>River flow directions</title>
      <link>https://dominicroye.github.io/en/2020/river-flow-directions/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/2020/river-flow-directions/</guid>
      <description>


&lt;p&gt;I recently created a visualization of the distribution of river flow directions and also of coastal orientations. Following its publication in social networks (&lt;a href=&#34;%5Btweet%5D(https://twitter.com/dr_xeo/status/1277978724034465798?s=20)&#34;&gt;here&lt;/a&gt;), I was asked to make a post about how I did it. Well, here we go to start with an example of rivers, coastal orientation is somewhat more complex. I did the same for a selection of European rivers here in this &lt;a href=&#34;https://twitter.com/dr_xeo/status/1277243216828473345?s=20&#34;&gt;tweet&lt;/a&gt;. However, originally I started with the orientation of the European coasts.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Have you ever wondered where the European &lt;a href=&#34;https://twitter.com/hashtag/coasts?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#coasts&lt;/a&gt; are oriented? &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ggplot2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ggplot2&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/geography?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#geography&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/dataviz?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#dataviz&lt;/a&gt; &lt;a href=&#34;https://t.co/tpWVxSoHlw&#34;&gt;pic.twitter.com/tpWVxSoHlw&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dominic Royé (@dr_xeo) &lt;a href=&#34;https://twitter.com/dr_xeo/status/1265286552525180929?ref_src=twsrc%5Etfw&#34;&gt;May 26, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages&lt;/h2&gt;
&lt;p&gt;In this post we will use the following packages:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;col width=&#34;89%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Packages&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Collection of packages (visualization, manipulation): ggplot2, dplyr, purrr, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;remotes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Installation from remote repositories&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;RQGIS3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Interface between R and QGIS3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sf&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Simple Feature: import, export and manipulate vector data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ggtext&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Improved text rendering support for ggplot2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sysfonts&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Load fonts in R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;showtext&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Use fonts more easily in R graphs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;circular&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Functions for working with circular data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;geosphere&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Spherical trigonometry for geographic applications&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In the case of the &lt;code&gt;RQGIS3&lt;/code&gt; package, it is necessary to install QGIS in OSGeo4W &lt;a href=&#34;https://www.qgis.org/es/site/forusers/download.html&#34;&gt;here&lt;/a&gt;. I will explain the reason for using QGIS later.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install the packages if necessary
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;remotes&amp;quot;)) install.packages(&amp;quot;remotes&amp;quot;)
if(!require(&amp;quot;RQGIS3&amp;quot;)) remotes::install_github(&amp;quot;jannes-m/RQGIS3&amp;quot;)
if(!require(&amp;quot;sf&amp;quot;)) install.packages(&amp;quot;sf&amp;quot;)
if(!require(&amp;quot;ggtext&amp;quot;)) install.packages(&amp;quot;ggtext&amp;quot;)
if(!require(&amp;quot;circular&amp;quot;)) install.packages(&amp;quot;circular&amp;quot;)
if(!require(&amp;quot;geosphere&amp;quot;)) install.packages(&amp;quot;geosphere&amp;quot;)
if(!require(&amp;quot;sysfonts&amp;quot;)) install.packages(&amp;quot;sysfonts&amp;quot;)
if(!require(&amp;quot;showtext&amp;quot;)) install.packages(&amp;quot;showtext&amp;quot;)

# packages
library(sf)
library(tidyverse)
library(ggtext)
library(circular)
library(geosphere)
library(RQGIS3)
library(showtext)
library(sysfonts)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;initial-considerations&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Initial considerations&lt;/h1&gt;
&lt;p&gt;Angles in vectorial lines are based on the angle between two vertices, and the number of vertices depends on the complexity, and therefore the resolution, of the vector data. Consequently, there can be differences in using different resolutions of a spatial line, either from the coast or from the river as in this example. A straight line is simply constructed with two points of longitude and latitude.&lt;/p&gt;
&lt;p&gt;Related to this is fractality, an apparently irregular structure but that is repeated at different scales, known from coastlines or also from river. The most paradoxical feature is that the length of a coastline depends on the measurement scale, the smaller the measurement increment, the longer is the measured coastline.&lt;/p&gt;
&lt;p&gt;There are two possibilities of obtaining the vertice angles. In the first one we calculate the angle between all consecutive vertices.&lt;/p&gt;
&lt;p&gt;For example, imagine two points, Madrid (-3.71, 40.43) and Barcelona (2.14, 41.4).&lt;/p&gt;
&lt;p&gt;What is the angle of a straight line between both cities?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bearingRhumb(c(-3.71, 40.43), c(2.14, 41.4))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 77.62391&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see that it is 77º, that is, northeast direction. But what if we go from Barcelona to Madrid?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bearingRhumb(c(2.14, 41.4), c(-3.71, 40.43))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 257.6239&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The angle is different because we &lt;em&gt;move&lt;/em&gt; from the northeast to the southwest. We can easily invert the direction to get the opposite angle.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# opposite angle of Barcelona -&amp;gt; Madrid
bearingRhumb(c(2.14, 41.4), c(-3.71, 40.43)) - 180&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 77.62391&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# opposite angle of Madrid -&amp;gt; Barcelona
bearingRhumb(c(-3.71, 40.43), c(2.14, 41.4)) + 180&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 257.6239&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The direction in which we calculate the angles is important. In the case of rivers, it is expected to be the direction of flow from origin to the mouth, however, a problem may be that the vertices, which build the lines, are not geographically ordered in the attribute table. Another problem may be that the vertices start at the mouth which would give the reverse angle as we have seen before.&lt;/p&gt;
&lt;p&gt;However, there is an easier way. We can take advantage of the attributes of projected coordinate systems (Robinson projection, etc.) that include the angle between the vertices. We will use this last approach in this post. Still, we must pay close attention to the results as stated above.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preparation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Preparation&lt;/h1&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;We download the central lines of the largest rivers in the world (&lt;a href=&#34;https://dominicroye.github.io/files/RiverHRCenterlinesCombo.zip&#34;&gt;here&lt;/a&gt;), also accessible in &lt;a href=&#34;https://www.sciencebase.gov/catalog/item/5a145fdde4b09fc93dcfd36c&#34;&gt;Zeenatul Basher et al. 2018&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;import-and-project&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Import and project&lt;/h2&gt;
&lt;p&gt;The first thing we do is to import, project the spatial lines and delete the third dimension &lt;em&gt;Z&lt;/em&gt;, chaining the following functions: &lt;code&gt;st_read()&lt;/code&gt; helps us import any vector format, &lt;code&gt;st_zm()&lt;/code&gt; delete the dimension Z or M of a geometry and &lt;code&gt;st_transform()&lt;/code&gt; projects the vector data to the new projection in &lt;em&gt;proj4&lt;/em&gt; format. We combine the functions with the famous pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) that facilitates the application of a sequence of functions on a data set, more details in this &lt;a href=&#34;https://dominicroye.github.io/en/2020/a-very-short-introduction-to-tidyverse/&#34;&gt;post&lt;/a&gt;. All functions in the &lt;code&gt;sf&lt;/code&gt; package start with &lt;code&gt;st_*&lt;/code&gt; with reference to the spatial character, similar to &lt;em&gt;PostGIS&lt;/em&gt;. In the same style as &lt;em&gt;PostGIS&lt;/em&gt;, verbs are used as function names.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;proj_rob &amp;lt;- &amp;quot;+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs&amp;quot;

river_line &amp;lt;- st_read(&amp;quot;RiverHRCenterlinesCombo.shp&amp;quot;) %&amp;gt;% 
                 st_zm() %&amp;gt;% 
                    st_transform(proj_rob)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Reading layer `RiverHRCenterlinesCombo&amp;#39; from data source `C:\Users\xeo19\Documents\GitHub\blogR_update\content\post\en\2020-07-24-river-flow-directions\RiverHRCenterlinesCombo.shp&amp;#39; using driver `ESRI Shapefile&amp;#39;
## Simple feature collection with 78 features and 6 fields
## geometry type:  MULTILINESTRING
## dimension:      XYZ
## bbox:           xmin: -164.7059 ymin: -36.97094 xmax: 151.5931 ymax: 72.64474
## z_range:        zmin: 0 zmax: 0
## geographic CRS: WGS 84&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;extract-the-angles&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extract the angles&lt;/h2&gt;
&lt;p&gt;In the next step we have to extract the vertice angles. Unfortunately, as far as I know, it is not possible to extract the attributes with some function from the &lt;code&gt;sf&lt;/code&gt; package. Although the function &lt;code&gt;st_coordinates()&lt;/code&gt; returns the coordinates, it does not include other attributes. Therefore, we must use another way, and that is the open software Quantum GIS in which we can find a tool to extract all the vertice attributes. We could import the vector data into QGIS Desktop and export the vertices from there, but it is also possible to access the QGIS tools from R directly.&lt;/p&gt;
&lt;p&gt;For this, we need to have QGIS installed in OSGeo4W. The &lt;code&gt;RQGIS3&lt;/code&gt; package allows us to use very easily all the tools of the software in R. First we use the &lt;code&gt;set_env()&lt;/code&gt; function to define all the necessary QGIS paths and start the API with &lt;code&gt;open_app()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# paths to QGIS
set_env()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Trying to find QGIS in C:/OSGEO4~1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $root
## [1] &amp;quot;C:/OSGeo4W64&amp;quot;
## 
## $qgis_prefix_path
## [1] &amp;quot;C:/OSGeo4W64/apps/qgis&amp;quot;
## 
## $python_plugins
## [1] &amp;quot;C:/OSGeo4W64/apps/qgis/python/plugins&amp;quot;
## 
## $platform
## [1] &amp;quot;Windows&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# start of QGIS Python
open_app()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;find_algorithms()&lt;/code&gt; function helps us to search for different QGIS tools. In addition the &lt;code&gt;get_usage()&lt;/code&gt; function specifies the way of usage with all the required parameters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# search tools
find_algorithms(search_term = &amp;quot;vertices&amp;quot;, name_only = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;native:extractspecificvertices&amp;quot;         
## [2] &amp;quot;native:extractvertices&amp;quot;                 
## [3] &amp;quot;native:filterverticesbym&amp;quot;               
## [4] &amp;quot;native:filterverticesbyz&amp;quot;               
## [5] &amp;quot;native:removeduplicatevertices&amp;quot;         
## [6] &amp;quot;saga:convertpolygonlineverticestopoints&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# usage of tool
get_usage(alg = &amp;quot;native:extractvertices&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Extract vertices (native:extractvertices)
## 
## This algorithm takes a line or polygon layer and generates a point layer with points representing the vertices in the input lines or polygons. The attributes associated to each point are the same ones associated to the line or polygon that the point belongs to.
## 
## Additional fields are added to the point indicating the vertex index (beginning at 0)
## the vertex’s part and its index within the part (as well as its ring for polygons)
## distance along original geometry and bisector angle of vertex for original geometry.
## 
## 
## ----------------
## Input parameters
## ----------------
## 
## INPUT: Input layer
## 
##  Parameter type: QgsProcessingParameterFeatureSource
## 
##  Accepted data types:
##      - str: layer ID
##      - str: layer name
##      - str: layer source
##      - QgsProcessingFeatureSourceDefinition
##      - QgsProperty
##      - QgsVectorLayer
## 
## OUTPUT: Vertices
## 
##  Parameter type: QgsProcessingParameterFeatureSink
## 
##  Accepted data types:
##      - str: destination vector file
## e.g. d:/test.shp
##      - str: memory: to store result in temporary memory layer
##      - str: using vector provider ID prefix and destination URI
## e.g. postgres:… to store result in PostGIS table
##      - QgsProcessingOutputLayerDefinition
##      - QgsProperty
## 
## ----------------
## Outputs
## ----------------
## 
## OUTPUT:  &amp;lt;QgsProcessingOutputVectorLayer&amp;gt;
##  Vertices&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In our case the tool to extract the vertices is simple and only has one input and one output. The function &lt;code&gt;run_qgis()&lt;/code&gt; executes a QGIS tool indicating the algorithm and its arguments. The advantage of using the algorithm directly from R is that we can pass objects of class &lt;code&gt;sf&lt;/code&gt; (or &lt;code&gt;sp&lt;/code&gt;) and &lt;code&gt;raster&lt;/code&gt; that we have imported or created in R. As output we create a &lt;code&gt;geojson&lt;/code&gt;, it could also be of another vector format, and we save it in a temporary folder. At the same time we indicate to import the result directly into R (&lt;code&gt;load_output = TRUE&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;river_vertices &amp;lt;- run_qgis(alg = &amp;quot;native:extractvertices&amp;quot;,
               INPUT = river_line,
               OUTPUT = file.path(tempdir(), &amp;quot;rivers_world_vertices.geojson&amp;quot;),
               load_output = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $OUTPUT
## [1] &amp;quot;C:/Users/xeo19/AppData/Local/Temp/RtmpYb53tP/rivers_world_vertices.geojson&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  
Currently on Windows there seem to be problems with the &lt;em&gt;proj&lt;/em&gt; library. In principle, if the function ends up creating the &lt;code&gt;river_vertices&lt;/code&gt; object, you should not worry. Otherwise, I recommend looking at the discussion in the issue opened at &lt;a href=&#34;https://github.com/r-spatial/RQGIS3/issues/20&#34;&gt;gitbub&lt;/a&gt;.

&lt;/div&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;selection&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Selection&lt;/h2&gt;
&lt;p&gt;Before continuing with the distribution estimation of the angles, we filter some rivers of interest. The functions of the &lt;code&gt;tidyverse&lt;/code&gt; collection are compatible with the &lt;code&gt;sf&lt;/code&gt; package. In the last post I made an introduction to &lt;code&gt;tidyverse&lt;/code&gt; &lt;a href=&#34;https://dominicroye.github.io/en/2020/a-very-short-introduction-to-tidyverse/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;river_vertices &amp;lt;-  filter(river_vertices, 
                          NAME %in% c(&amp;quot;Mississippi&amp;quot;, &amp;quot;Colorado&amp;quot;, 
                                      &amp;quot;Amazon&amp;quot;, &amp;quot;Nile&amp;quot;, &amp;quot;Orange&amp;quot;, 
                                      &amp;quot;Ganges&amp;quot;, &amp;quot;Yangtze&amp;quot;, &amp;quot;Danube&amp;quot;,
                                      &amp;quot;Mackenzie&amp;quot;, &amp;quot;Lena&amp;quot;, &amp;quot;Murray&amp;quot;, 
                                      &amp;quot;Niger&amp;quot;)
                          ) 

river_vertices &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Simple feature collection with 94702 features and 11 fields
## geometry type:  POINT
## dimension:      XY
## bbox:           xmin: -10377520 ymin: -3953778 xmax: 13124340 ymax: 7507359
## geographic CRS: WGS 84&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_is_longlat(x): bounding box has potentially an invalid value range
## for longlat data

## Warning in st_is_longlat(x): bounding box has potentially an invalid value range
## for longlat data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 94,702 x 12
##    NAME  SYSTEM name_alt scalerank rivernum Length_km vertex_index vertex_part
##  * &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;        &amp;lt;int&amp;gt;       &amp;lt;int&amp;gt;
##  1 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            0           0
##  2 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            1           0
##  3 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            2           0
##  4 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            3           0
##  5 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            4           0
##  6 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            5           0
##  7 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            6           0
##  8 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            7           0
##  9 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            8           0
## 10 Nile  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;             1        4     3344.            9           0
## # ... with 94,692 more rows, and 4 more variables: vertex_part_index &amp;lt;int&amp;gt;,
## #   distance &amp;lt;dbl&amp;gt;, angle &amp;lt;dbl&amp;gt;, geometry &amp;lt;POINT [°]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;estimate-the-distribution&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Estimate the distribution&lt;/h1&gt;
&lt;p&gt;To visualize the distribution we can use either a histogram or a density graph. But in the case of estimating the probability density function, we find a mathematical problem when applying it to circular data. For circular data we should not use the &lt;code&gt;density()&lt;/code&gt; standard function of R since in our data a direction of 360º is the same at 0º, which would cause errors in this range of values. It is a general problem for different statistical metrics. More statistical details are explained in the &lt;code&gt;circular&lt;/code&gt; package. This package allows you to define the characteristics of circular data (unit, data type, rotation, etc.) as an object class in R.&lt;/p&gt;
&lt;p&gt;So what we do is to build a function that estimates the density and returns a table with the angles (x) and the density estimates (y). Since rivers have different lengths, and we want to see differences regardless of that, we normalize the estimates using the maximum value. Unlike the &lt;code&gt;density()&lt;/code&gt; function, in which the smoothing bandwidth &lt;code&gt;bw&lt;/code&gt; is optimized, here it is required to indicate it manually. It is similar to defining the bar width in a histogram. There is an optimization function for the bandwidth, &lt;code&gt;bw.nrd.circular()&lt;/code&gt; that could be used here.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dens_circ &amp;lt;- function(x){
  
  dens &amp;lt;- density.circular(circular(x$angle, units = &amp;quot;degrees&amp;quot;),
                                     bw = 70, kernel = &amp;quot;vonmises&amp;quot;,
                                     control.circular = list(units = &amp;quot;degrees&amp;quot;))
  
  df &amp;lt;- data.frame(x = dens$x, y = dens$y/max(dens$y))
  
  return(df)
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we estimate the density of each river in our selection. We use the &lt;code&gt;split()&lt;/code&gt; function of R Base to get a table of each river in a list object. Then we apply our density estimation function to the list with the function &lt;code&gt;map_df()&lt;/code&gt; from the &lt;code&gt;purrr&lt;/code&gt; package. The suffix &lt;code&gt;_df&lt;/code&gt; allows us to get a joined table, instead of a list with the results of each river. However, it is necessary to indicate the name of the column with the argument &lt;code&gt;.id&lt;/code&gt;, which will contain the name of each river. Otherwise we would not know how to differentiate the results. Also here I recommend reading more details in the last post about &lt;code&gt;tidyverse&lt;/code&gt; &lt;a href=&#34;https://dominicroye.github.io/en/2020/a-very-short-introduction-to-tidyverse/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dens_river &amp;lt;- split(river_vertices, river_vertices$NAME) %&amp;gt;% 
                  map_df(dens_circ, .id = &amp;quot;river&amp;quot;)

# results
head(dens_river)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    river        x         y
## 1 Amazon 0.000000 0.2399907
## 2 Amazon 0.704501 0.2492548
## 3 Amazon 1.409002 0.2585758
## 4 Amazon 2.113503 0.2679779
## 5 Amazon 2.818004 0.2774859
## 6 Amazon 3.522505 0.2871232&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualization&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Visualization&lt;/h1&gt;
&lt;p&gt;Now we only have to make the graph through the famous &lt;code&gt;ggplot&lt;/code&gt; package. First we add a new font &lt;em&gt;Montserrat&lt;/em&gt; for it use in this plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# font download
font_add_google(&amp;quot;Montserrat&amp;quot;, &amp;quot;Montserrat&amp;quot;)

# use of showtext
showtext_opts(dpi = 200)
showtext_auto() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the next step we create two objects with the title and the plot caption. In the title we are using an html code to color part of the text instead of a legend. You can use html very easily with the &lt;code&gt;ggtext&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# title with html
title &amp;lt;- &amp;quot;Relative distribution of river &amp;lt;span style=&amp;#39;color:#011FFD;&amp;#39;&amp;gt;&amp;lt;strong&amp;gt;flow direction&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt; in the world&amp;quot;


caption &amp;lt;- &amp;quot;Based on data from Zeenatul Basher, 20180215&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The background grid that creates &lt;code&gt;ggplot&lt;/code&gt; by default for polar coordinates did not convince me, so we create a table with x axis background lines.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grid_x &amp;lt;- tibble(x = seq(0, 360 - 22.5, by = 22.5), 
                 y = rep(0, 16), 
                 xend = seq(0, 360 - 22.5, by = 22.5), 
                 yend = rep(Inf, 16))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we define all the styles of the graph. The most important thing in this step is the &lt;code&gt;element_textbox()&lt;/code&gt; function of the &lt;code&gt;ggtext&lt;/code&gt; package to be able to interpret our html code incorporated into the title.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_polar &amp;lt;- theme_minimal() +
               theme(axis.title.y = element_blank(),
                     axis.text.y = element_blank(),
                     legend.title = element_blank(),
                     plot.title = element_textbox(family = &amp;quot;Montserrat&amp;quot;, 
                                                   hjust = 0.5, 
                                                   colour = &amp;quot;white&amp;quot;, 
                                                   size = 15),
                     plot.caption = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                                 colour = &amp;quot;white&amp;quot;),
                     axis.text.x = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                                 colour = &amp;quot;white&amp;quot;),
                     strip.text = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                               colour = &amp;quot;white&amp;quot;, 
                                               face = &amp;quot;bold&amp;quot;),
                     panel.background = element_rect(fill = &amp;quot;black&amp;quot;),
                     plot.background = element_rect(fill = &amp;quot;black&amp;quot;),
                     panel.grid = element_blank()
                    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally we build the graph: 1) We use the &lt;code&gt;geom_hline()&lt;/code&gt; function with different y intersection points to create the background grid. The &lt;code&gt;geom_segment()&lt;/code&gt; function creates the x grid. 2) We create the density area using the &lt;code&gt;geom_area()&lt;/code&gt; function. 3) In &lt;code&gt;scale_x_continous()&lt;/code&gt; we define a negative lower limit so that it does not collapse at a small point. The labels of the eight main directions are indicated in the &lt;code&gt;scale_y_continous()&lt;/code&gt; function, and 4) Finally, we change to a polar coordinate system and set the variable to create facets.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_hline(yintercept = c(0, .2, .6, .8, 1), colour = &amp;quot;white&amp;quot;) +
  geom_segment(data = grid_x , 
               aes(x = x, y = y, xend = xend, yend = yend), 
               linetype = &amp;quot;dashed&amp;quot;, col = &amp;quot;white&amp;quot;) +
  geom_area(data = dens_river, 
            aes(x = x, y = y, ymin = 0, ymax = y), 
            alpha = .7, 
            colour = NA, 
            show.legend = FALSE,
            fill = &amp;quot;#011FFD&amp;quot;) + 
  scale_y_continuous(limits = c(-.2, 1), expand = c(0, 0)) +
  scale_x_continuous(limits = c(0, 360), 
                     breaks = seq(0, 360 - 22.5, by = 22.5),
                     minor_breaks = NULL,
                     labels = c(&amp;quot;N&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;NE&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;E&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;SE&amp;quot;, &amp;quot;&amp;quot;,
                                &amp;quot;S&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;SW&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;W&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;NW&amp;quot;, &amp;quot;&amp;quot;)) +
  coord_polar() + 
  facet_wrap(river ~ ., ncol = 4) +
  labs(title = title, caption = caption, x = &amp;quot;&amp;quot;) +
  theme_polar&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: ymin, ymax&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-07-24-river-flow-directions/index.en_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A very short introduction to Tidyverse</title>
      <link>https://dominicroye.github.io/en/2020/a-very-short-introduction-to-tidyverse/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/2020/a-very-short-introduction-to-tidyverse/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tidyverse&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Tidyverse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#style-guide&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Style guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pipe&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Pipe %&amp;gt;%&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tidyverse-packages&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Tidyverse packages&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#read-and-write-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; Read and write data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#character-manipulations&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; Character manipulations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#management-of-dates-and-times&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.3&lt;/span&gt; Management of dates and times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#table-and-vector-manipulation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4&lt;/span&gt; Table and vector manipulation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#select-and-rename&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.1&lt;/span&gt; Select and rename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filter-and-sort&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.2&lt;/span&gt; Filter and sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#group-and-summarize&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.3&lt;/span&gt; Group and summarize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#join-tables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.4&lt;/span&gt; Join tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#long-and-wide-tables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.5&lt;/span&gt; Long and wide tables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualize-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5&lt;/span&gt; Visualize data&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#line-and-scatter-plot&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5.1&lt;/span&gt; Line and scatter plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#boxplot&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5.2&lt;/span&gt; Boxplot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#heatmap&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5.3&lt;/span&gt; Heatmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#apply-functions-on-vectors-or-lists&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.6&lt;/span&gt; Apply functions on vectors or lists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;tidyverse&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Tidyverse&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;tidyverse&lt;/code&gt; universe of packages, a collection of packages specially focused on data science, marked a milestone in R programming. In this post I am going to summarize very briefly the most essential to start in this world. The tidyverse grammar follows a common structure in all functions. The most essential thing is that the first argument is the object and then come the rest of the arguments. In addition, a set of verbs is provided to facilitate the use of the functions. The &lt;code&gt;tidyverse&lt;/code&gt; philosophy and grammar of functions are also reflected in other packages that make its use compatible with the collection. For example, the &lt;code&gt;sf&lt;/code&gt; package (&lt;a href=&#34;https://r-spatial.github.io/sf/articles/sf1.html&#34;&gt;simple feature&lt;/a&gt;) is a standardized way to encode spatial vector data and allows the use of multiple functions that we can find in the &lt;code&gt;dplyr&lt;/code&gt; package.&lt;/p&gt;
&lt;p&gt;The core of the &lt;code&gt;tidyverse&lt;/code&gt; collection is made up of the following packages:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ggplot2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Grammar for creating graphics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;purrr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;R functional programming&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tibble&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Modern and effective table system&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dplyr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Grammar for data manipulation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Set of functions to create tidy data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;stringr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Function set to work with characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;readr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;An easy and fast way to import data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;forcats&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tools to easily work with factors&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In addition to the mentioned packages, &lt;code&gt;lubridate&lt;/code&gt; is also used very frequently to work with dates and times, and also &lt;code&gt;readxl&lt;/code&gt; which allows us to import files in Excel format. To know all the available packages we can use the function &lt;code&gt;tidyverse_packages()&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;broom&amp;quot;      &amp;quot;cli&amp;quot;        &amp;quot;crayon&amp;quot;     &amp;quot;dbplyr&amp;quot;     &amp;quot;dplyr&amp;quot;     
##  [6] &amp;quot;forcats&amp;quot;    &amp;quot;ggplot2&amp;quot;    &amp;quot;haven&amp;quot;      &amp;quot;hms&amp;quot;        &amp;quot;httr&amp;quot;      
## [11] &amp;quot;jsonlite&amp;quot;   &amp;quot;lubridate&amp;quot;  &amp;quot;magrittr&amp;quot;   &amp;quot;modelr&amp;quot;     &amp;quot;pillar&amp;quot;    
## [16] &amp;quot;purrr&amp;quot;      &amp;quot;readr&amp;quot;      &amp;quot;readxl&amp;quot;     &amp;quot;reprex&amp;quot;     &amp;quot;rlang&amp;quot;     
## [21] &amp;quot;rstudioapi&amp;quot; &amp;quot;rvest&amp;quot;      &amp;quot;stringr&amp;quot;    &amp;quot;tibble&amp;quot;     &amp;quot;tidyr&amp;quot;     
## [26] &amp;quot;xml2&amp;quot;       &amp;quot;tidyverse&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is very easy to get conflicts between functions, that is, that the same function name exists in several packages. To avoid this, we can write the name of the package in front of the function we want to use, separated by the colon symbol written twice (&lt;code&gt;package_name::function_name&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Before I get started with the packages, I hope it will be a really short introduction, some comments on the style when programming in R.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;style-guide&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Style guide&lt;/h1&gt;
&lt;p&gt;In R there is no universal style guide, that is, in the R syntax it is not necessary to follow specific rules for our scripts. But it is recommended to work in a homogeneous, uniform, legible and clear way when writing scripts. The &lt;code&gt;tidyverse&lt;/code&gt; collection has its own guide (&lt;a href=&#34;https://style.tidyverse.org/&#34; class=&#34;uri&#34;&gt;https://style.tidyverse.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The most important recommendations are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid using more than 80 characters per line to allow reading the complete code.&lt;/li&gt;
&lt;li&gt;Always use a space after a comma, never before.&lt;/li&gt;
&lt;li&gt;The operators (==, +, -, &amp;lt;-,%&amp;gt;%, etc.) must have a space before and after.&lt;/li&gt;
&lt;li&gt;There is no space between the name of a function and the first parenthesis, nor between the last argument and the final parenthesis of a function.&lt;/li&gt;
&lt;li&gt;Avoid reusing names of functions and common variables (&lt;code&gt;c &amp;lt;- 5&lt;/code&gt; vs. &lt;code&gt;c()&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Sort the script separating the parts with the comment form &lt;code&gt;# Import data -----&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Avoid accent marks or special symbols in names, files, routes, etc.&lt;/li&gt;
&lt;li&gt;Object names must follow a constant structure: &lt;code&gt;day_one&lt;/code&gt;, &lt;code&gt;day_1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is advisable to use a correct indentation for multiple arguments of a function or functions chained by the &lt;code&gt;pipe&lt;/code&gt; operator (&lt;code&gt;%&amp;gt;%&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pipe&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Pipe %&amp;gt;%&lt;/h1&gt;
&lt;p&gt;To facilitate working in data management, manipulation and visualization, the &lt;code&gt;magrittr&lt;/code&gt; package introduces the famous &lt;em&gt;pipe&lt;/em&gt; operator in the form &lt;code&gt;%&amp;gt;%&lt;/code&gt; with the aim of combining various functions without the need to assign the result to a new object. The &lt;em&gt;pipe&lt;/em&gt; operator passes the output of a function applied to the first argument of the next function. This way of combining functions allows you to chain several steps simultaneously, to perform sequential tasks. In the very simple example below, we pass the vector &lt;code&gt;1:5&lt;/code&gt; to the &lt;code&gt;mean()&lt;/code&gt; function to calculate the average. You should know that there are a couple of other pipe operators in the same package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1:5 %&amp;gt;% mean()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tidyverse-packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Tidyverse packages&lt;/h1&gt;
&lt;div id=&#34;read-and-write-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; Read and write data&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;readr&lt;/code&gt; package makes it easy to read or write multiple file formats using functions that start with &lt;code&gt;read_*&lt;/code&gt; or &lt;code&gt;write_*&lt;/code&gt;.
In comparison to R Base, &lt;code&gt;readr&lt;/code&gt; functions are faster; they handle problematic column names, and dates are automatically converted. The imported tables are of class &lt;code&gt;tibble&lt;/code&gt; (&lt;em&gt;tbl_df&lt;/em&gt;), a modern version of &lt;code&gt;data.frame&lt;/code&gt; from the &lt;code&gt;tibble&lt;/code&gt; package. In the same sense, you can use the &lt;code&gt;read_excel()&lt;/code&gt; function of the &lt;code&gt;readxl&lt;/code&gt; package to import data from Excel sheets (more details also in this &lt;a href=&#34;https://dominicroye.github.io/en/2019/import-excel-sheets-with-r/&#34;&gt;blog post&lt;/a&gt;). In the following example, we import the mobility data registered by Google (&lt;a href=&#34;https://www.google.com/covid19/mobility/&#34;&gt;link&lt;/a&gt;) during the last months of the COVID-19 pandemic (&lt;a href=&#34;https://dominicroye.github.io/files/Global_Mobility_Report.csv&#34;&gt;download&lt;/a&gt;).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;read_csv() o read_csv2()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;coma or semicolon (CSV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;read_delim()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;general separator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;read_table()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;whitespace-separated&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load package
library(tidyverse)

google_mobility &amp;lt;- read_csv(&amp;quot;Global_Mobility_Report.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   country_region_code = col_character(),
##   country_region = col_character(),
##   sub_region_1 = col_character(),
##   sub_region_2 = col_logical(),
##   iso_3166_2_code = col_character(),
##   census_fips_code = col_logical(),
##   date = col_date(format = &amp;quot;&amp;quot;),
##   retail_and_recreation_percent_change_from_baseline = col_double(),
##   grocery_and_pharmacy_percent_change_from_baseline = col_double(),
##   parks_percent_change_from_baseline = col_double(),
##   transit_stations_percent_change_from_baseline = col_double(),
##   workplaces_percent_change_from_baseline = col_double(),
##   residential_percent_change_from_baseline = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: 597554 parsing failures.
##    row              col           expected         actual                         file
## 200119 sub_region_2     1/0/T/F/TRUE/FALSE Autauga County &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200119 census_fips_code 1/0/T/F/TRUE/FALSE 01001          &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200120 sub_region_2     1/0/T/F/TRUE/FALSE Autauga County &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200120 census_fips_code 1/0/T/F/TRUE/FALSE 01001          &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200121 sub_region_2     1/0/T/F/TRUE/FALSE Autauga County &amp;#39;Global_Mobility_Report.csv&amp;#39;
## ...... ................ .................. .............. ............................
## See problems(...) for more details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;google_mobility&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 516,697 x 13
##    country_region_~ country_region sub_region_1 sub_region_2 iso_3166_2_code
##    &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;        &amp;lt;lgl&amp;gt;        &amp;lt;chr&amp;gt;          
##  1 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  2 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  3 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  4 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  5 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  6 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  7 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  8 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
##  9 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
## 10 AE               United Arab E~ &amp;lt;NA&amp;gt;         NA           &amp;lt;NA&amp;gt;           
## # ... with 516,687 more rows, and 8 more variables: census_fips_code &amp;lt;lgl&amp;gt;,
## #   date &amp;lt;date&amp;gt;, retail_and_recreation_percent_change_from_baseline &amp;lt;dbl&amp;gt;,
## #   grocery_and_pharmacy_percent_change_from_baseline &amp;lt;dbl&amp;gt;,
## #   parks_percent_change_from_baseline &amp;lt;dbl&amp;gt;,
## #   transit_stations_percent_change_from_baseline &amp;lt;dbl&amp;gt;,
## #   workplaces_percent_change_from_baseline &amp;lt;dbl&amp;gt;,
## #   residential_percent_change_from_baseline &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Important is to take a look at the argument names, since they change in the &lt;code&gt;readr&lt;/code&gt; functions. For example, the well-known &lt;code&gt;header = TRUE&lt;/code&gt; argument of &lt;code&gt;read.csv()&lt;/code&gt; is in this case &lt;code&gt;col_names = TRUE&lt;/code&gt;. More details can be found in the &lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/data-import.pdf&#34;&gt;Cheat-Sheet&lt;/a&gt; of &lt;code&gt;readr&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;character-manipulations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; Character manipulations&lt;/h2&gt;
&lt;p&gt;For working with strings we use the &lt;code&gt;stringr&lt;/code&gt; package, whose functions always start with &lt;code&gt;str_*&lt;/code&gt; followed by a verb and the first argument.&lt;/p&gt;
&lt;p&gt;Some of these functions are as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;str_replace()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;replace patterns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;str_c()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;combine characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;str_detect()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;detect patterns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;str_extract()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;extract patterns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;str_sub()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;extract by position&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;str_length()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;length of string&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Regular expressions are often used for character patterns. For example, the regular expression &lt;code&gt;[aeiou]&lt;/code&gt; matches any single character that is a vowel. The use of square brackets &lt;code&gt;[]&lt;/code&gt; corresponds to character classes. For example, &lt;code&gt;[abc]&lt;/code&gt; corresponds to each letter regardless of its position. &lt;code&gt;[a-z]&lt;/code&gt;, &lt;code&gt;[A-Z]&lt;/code&gt; or &lt;code&gt;[0-9]&lt;/code&gt; each between a and z or 0 and 9. And finally, &lt;code&gt;[:punct:]&lt;/code&gt; punctuation, etc. With curly braces “{}” we can indicate the number of the previous element, &lt;code&gt;{2}&lt;/code&gt; would be twice, {1,2} between one and two, etc. Also with &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;^&lt;/code&gt; we can indicate if the pattern starts at the beginning or ends at the end. More details and patterns can be found in the &lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/strings.pdf&#34;&gt;Cheat-Sheet&lt;/a&gt; of &lt;code&gt;stringr&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# replace &amp;#39;er&amp;#39; at the end with empty space

str_replace(month.name, &amp;quot;er$&amp;quot;, &amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;January&amp;quot;  &amp;quot;February&amp;quot; &amp;quot;March&amp;quot;    &amp;quot;April&amp;quot;    &amp;quot;May&amp;quot;      &amp;quot;June&amp;quot;    
##  [7] &amp;quot;July&amp;quot;     &amp;quot;August&amp;quot;   &amp;quot;Septemb&amp;quot;  &amp;quot;Octob&amp;quot;    &amp;quot;Novemb&amp;quot;   &amp;quot;Decemb&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str_replace(month.name, &amp;quot;^Ma&amp;quot;, &amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;January&amp;quot;   &amp;quot;February&amp;quot;  &amp;quot;rch&amp;quot;       &amp;quot;April&amp;quot;     &amp;quot;y&amp;quot;         &amp;quot;June&amp;quot;     
##  [7] &amp;quot;July&amp;quot;      &amp;quot;August&amp;quot;    &amp;quot;September&amp;quot; &amp;quot;October&amp;quot;   &amp;quot;November&amp;quot;  &amp;quot;December&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# combine characters

a &amp;lt;- str_c(month.name, 1:12, sep = &amp;quot;_&amp;quot;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;January_1&amp;quot;   &amp;quot;February_2&amp;quot;  &amp;quot;March_3&amp;quot;     &amp;quot;April_4&amp;quot;     &amp;quot;May_5&amp;quot;      
##  [6] &amp;quot;June_6&amp;quot;      &amp;quot;July_7&amp;quot;      &amp;quot;August_8&amp;quot;    &amp;quot;September_9&amp;quot; &amp;quot;October_10&amp;quot; 
## [11] &amp;quot;November_11&amp;quot; &amp;quot;December_12&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# collapse combination

str_c(month.name, collapse = &amp;quot;, &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;January, February, March, April, May, June, July, August, September, October, November, December&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# detect patterns

str_detect(a, &amp;quot;_[1-5]{1}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# extract patterns

str_extract(a, &amp;quot;_[1-9]{1,2}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;_1&amp;quot;  &amp;quot;_2&amp;quot;  &amp;quot;_3&amp;quot;  &amp;quot;_4&amp;quot;  &amp;quot;_5&amp;quot;  &amp;quot;_6&amp;quot;  &amp;quot;_7&amp;quot;  &amp;quot;_8&amp;quot;  &amp;quot;_9&amp;quot;  &amp;quot;_1&amp;quot;  &amp;quot;_11&amp;quot; &amp;quot;_12&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# extract the characters between position 1 and 2

str_sub(month.name, 1, 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Ja&amp;quot; &amp;quot;Fe&amp;quot; &amp;quot;Ma&amp;quot; &amp;quot;Ap&amp;quot; &amp;quot;Ma&amp;quot; &amp;quot;Ju&amp;quot; &amp;quot;Ju&amp;quot; &amp;quot;Au&amp;quot; &amp;quot;Se&amp;quot; &amp;quot;Oc&amp;quot; &amp;quot;No&amp;quot; &amp;quot;De&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# string length of each month

str_length(month.name)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 7 8 5 5 3 4 4 6 9 7 8 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the &amp;#39;.&amp;#39; represents the object passed by the pipe operator %&amp;gt;%
str_length(month.name) %&amp;gt;% 
   str_c(month.name, ., sep = &amp;quot;.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;January.7&amp;quot;   &amp;quot;February.8&amp;quot;  &amp;quot;March.5&amp;quot;     &amp;quot;April.5&amp;quot;     &amp;quot;May.3&amp;quot;      
##  [6] &amp;quot;June.4&amp;quot;      &amp;quot;July.4&amp;quot;      &amp;quot;August.6&amp;quot;    &amp;quot;September.9&amp;quot; &amp;quot;October.7&amp;quot;  
## [11] &amp;quot;November.8&amp;quot;  &amp;quot;December.8&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A very useful function is &lt;code&gt;str_glue()&lt;/code&gt; to interpolate characters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;name &amp;lt;- c(&amp;quot;Juan&amp;quot;, &amp;quot;Michael&amp;quot;)
age &amp;lt;- c(50, 80) 
date_today &amp;lt;- Sys.Date()

str_glue(
  &amp;quot;My name is {name}, &amp;quot;,
  &amp;quot;I&amp;#39;am {age}, &amp;quot;,
  &amp;quot;and my birth year is {format(date_today-age*365, &amp;#39;%Y&amp;#39;)}.&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## My name is Juan, I&amp;#39;am 50, and my birth year is 1970.
## My name is Michael, I&amp;#39;am 80, and my birth year is 1940.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;management-of-dates-and-times&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.3&lt;/span&gt; Management of dates and times&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;lubridate&lt;/code&gt; package is very powerful in handling dates and times. It allows us to create R recognized objects with functions (like &lt;code&gt;ymd()&lt;/code&gt; or &lt;code&gt;ymd_hms()&lt;/code&gt;) and we can even make calculations.&lt;/p&gt;
&lt;p&gt;We only must know the following abbreviations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ymd&lt;/code&gt;: represents &lt;code&gt;y:year&lt;/code&gt;, &lt;code&gt;m: month&lt;/code&gt;, &lt;code&gt;d:day&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hms&lt;/code&gt;: represents &lt;code&gt;h:hour&lt;/code&gt;, &lt;code&gt;m:minutes&lt;/code&gt;, &lt;code&gt;s:seconds&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load package
library(lubridate)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;lubridate&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     date, intersect, setdiff, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# date vector
dat &amp;lt;- c(&amp;quot;1999/12/31&amp;quot;, &amp;quot;2000/01/07&amp;quot;, &amp;quot;2005/05/20&amp;quot;,&amp;quot;2010/03/25&amp;quot;)

# date-time vector
dat_time &amp;lt;- c(&amp;quot;1988-08-01 05:00&amp;quot;, &amp;quot;2000-02-01 22:00&amp;quot;)

# convert to date class
dat &amp;lt;- ymd(dat) 
dat&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1999-12-31&amp;quot; &amp;quot;2000-01-07&amp;quot; &amp;quot;2005-05-20&amp;quot; &amp;quot;2010-03-25&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# other date formats
dmy(&amp;quot;05-02-2000&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2000-02-05&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ymd(&amp;quot;20000506&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2000-05-06&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# convert to POSIXct
dat_time &amp;lt;- ymd_hm(dat_time)
dat_time&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1988-08-01 05:00:00 UTC&amp;quot; &amp;quot;2000-02-01 22:00:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# different date formats
dat_mix &amp;lt;- c(&amp;quot;1999/12/05&amp;quot;, &amp;quot;05-09-2008&amp;quot;, &amp;quot;2000/08/09&amp;quot;, &amp;quot;25-10-2019&amp;quot;)

# mixted formats with known convention found in ?strptime
parse_date_time(dat_mix, order = c(&amp;quot;%Y/%m/%d&amp;quot;, &amp;quot;%d-%m-%Y&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1999-12-05 UTC&amp;quot; &amp;quot;2008-09-05 UTC&amp;quot; &amp;quot;2000-08-09 UTC&amp;quot; &amp;quot;2019-10-25 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More useful functions:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# extract the year
year(dat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1999 2000 2005 2010&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the month
month(dat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 12  1  5  3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;month(dat, label = TRUE) # as label&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] dic ene may mar
## 12 Levels: ene &amp;lt; feb &amp;lt; mar &amp;lt; abr &amp;lt; may &amp;lt; jun &amp;lt; jul &amp;lt; ago &amp;lt; sep &amp;lt; ... &amp;lt; dic&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the day of the week
wday(dat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6 6 6 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wday(dat, label = TRUE) # as label&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] vi\\. vi\\. vi\\. ju\\.
## Levels: do\\. &amp;lt; lu\\. &amp;lt; ma\\. &amp;lt; mi\\. &amp;lt; ju\\. &amp;lt; vi\\. &amp;lt; sá\\.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the hour
hour(dat_time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  5 22&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# add 10 days
dat + days(10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2000-01-10&amp;quot; &amp;quot;2000-01-17&amp;quot; &amp;quot;2005-05-30&amp;quot; &amp;quot;2010-04-04&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# add 1 month
dat + months(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2000-01-31&amp;quot; &amp;quot;2000-02-07&amp;quot; &amp;quot;2005-06-20&amp;quot; &amp;quot;2010-04-25&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, the &lt;code&gt;make_date()&lt;/code&gt; function is very useful to create dates from different date parts, such as the year, month, etc.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create date from its elements, here with year and month
make_date(2000, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2000-05-01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create date with time
make_datetime(2005, 5, 23, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2005-05-23 05:00:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More details can be found in the &lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/lubridate.pdf&#34;&gt;Cheat-Sheet&lt;/a&gt; of &lt;code&gt;lubridate&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;table-and-vector-manipulation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4&lt;/span&gt; Table and vector manipulation&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;dplyr&lt;/code&gt; and &lt;code&gt;tidyr&lt;/code&gt; packages provide us with a data manipulation grammar, a set of useful verbs to solve common problems. The most important functions are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mutate()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;add new variables or modify existing ones&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;select()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;select variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;filter()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;filter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;summarise()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;summarize/reduce&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;arrange()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sort&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;group_by()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;rename()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rename columns&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In case you haven’t done it before, we import the mobility data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;google_mobility &amp;lt;- read_csv(&amp;quot;Global_Mobility_Report.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   country_region_code = col_character(),
##   country_region = col_character(),
##   sub_region_1 = col_character(),
##   sub_region_2 = col_logical(),
##   iso_3166_2_code = col_character(),
##   census_fips_code = col_logical(),
##   date = col_date(format = &amp;quot;&amp;quot;),
##   retail_and_recreation_percent_change_from_baseline = col_double(),
##   grocery_and_pharmacy_percent_change_from_baseline = col_double(),
##   parks_percent_change_from_baseline = col_double(),
##   transit_stations_percent_change_from_baseline = col_double(),
##   workplaces_percent_change_from_baseline = col_double(),
##   residential_percent_change_from_baseline = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: 597554 parsing failures.
##    row              col           expected         actual                         file
## 200119 sub_region_2     1/0/T/F/TRUE/FALSE Autauga County &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200119 census_fips_code 1/0/T/F/TRUE/FALSE 01001          &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200120 sub_region_2     1/0/T/F/TRUE/FALSE Autauga County &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200120 census_fips_code 1/0/T/F/TRUE/FALSE 01001          &amp;#39;Global_Mobility_Report.csv&amp;#39;
## 200121 sub_region_2     1/0/T/F/TRUE/FALSE Autauga County &amp;#39;Global_Mobility_Report.csv&amp;#39;
## ...... ................ .................. .............. ............................
## See problems(...) for more details.&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;select-and-rename&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.1&lt;/span&gt; Select and rename&lt;/h3&gt;
&lt;p&gt;We can select or remove columns with the &lt;code&gt;select()&lt;/code&gt; function, using the name or index of the column. To delete columns we make use of the negative sign. The &lt;code&gt;rename&lt;/code&gt; function helps in renaming columns with either the same name or their index.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;residential_mobility &amp;lt;- select(google_mobility, 
                               country_region_code:sub_region_1, 
                               date, 
                               residential_percent_change_from_baseline) %&amp;gt;% 
                        rename(resi = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;filter-and-sort&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.2&lt;/span&gt; Filter and sort&lt;/h3&gt;
&lt;p&gt;To filter data, we use &lt;code&gt;filter()&lt;/code&gt; with logical operators (&lt;code&gt;|&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, etc) or functions that return a logical value (&lt;code&gt;str_detect()&lt;/code&gt;, &lt;code&gt;is.na()&lt;/code&gt; , etc.). The &lt;code&gt;arrange()&lt;/code&gt; function sorts from least to greatest for one or multiple variables (with the negative sign &lt;code&gt;-&lt;/code&gt; the order is reversed from greatest to least).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(residential_mobility, 
       country_region_code == &amp;quot;US&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 304,648 x 5
##    country_region_code country_region sub_region_1 date        resi
##    &amp;lt;chr&amp;gt;               &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;        &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 US                  United States  &amp;lt;NA&amp;gt;         2020-02-15    -1
##  2 US                  United States  &amp;lt;NA&amp;gt;         2020-02-16    -1
##  3 US                  United States  &amp;lt;NA&amp;gt;         2020-02-17     5
##  4 US                  United States  &amp;lt;NA&amp;gt;         2020-02-18     1
##  5 US                  United States  &amp;lt;NA&amp;gt;         2020-02-19     0
##  6 US                  United States  &amp;lt;NA&amp;gt;         2020-02-20     1
##  7 US                  United States  &amp;lt;NA&amp;gt;         2020-02-21     0
##  8 US                  United States  &amp;lt;NA&amp;gt;         2020-02-22    -1
##  9 US                  United States  &amp;lt;NA&amp;gt;         2020-02-23    -1
## 10 US                  United States  &amp;lt;NA&amp;gt;         2020-02-24     0
## # ... with 304,638 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(residential_mobility, 
       country_region_code == &amp;quot;US&amp;quot;, 
       sub_region_1 == &amp;quot;New York&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7,068 x 5
##    country_region_code country_region sub_region_1 date        resi
##    &amp;lt;chr&amp;gt;               &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;        &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 US                  United States  New York     2020-02-15     0
##  2 US                  United States  New York     2020-02-16    -1
##  3 US                  United States  New York     2020-02-17     9
##  4 US                  United States  New York     2020-02-18     3
##  5 US                  United States  New York     2020-02-19     2
##  6 US                  United States  New York     2020-02-20     2
##  7 US                  United States  New York     2020-02-21     3
##  8 US                  United States  New York     2020-02-22    -1
##  9 US                  United States  New York     2020-02-23    -1
## 10 US                  United States  New York     2020-02-24     0
## # ... with 7,058 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(residential_mobility, 
       resi &amp;gt; 50) %&amp;gt;% 
          arrange(-resi)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 5
##    country_region_co~ country_region sub_region_1               date        resi
##    &amp;lt;chr&amp;gt;              &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;                      &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 KW                 Kuwait         Al Farwaniyah Governorate  2020-05-14    56
##  2 KW                 Kuwait         Al Farwaniyah Governorate  2020-05-21    55
##  3 SG                 Singapore      &amp;lt;NA&amp;gt;                       2020-05-01    55
##  4 KW                 Kuwait         Al Farwaniyah Governorate  2020-05-28    54
##  5 PE                 Peru           Metropolitan Municipality~ 2020-04-10    54
##  6 EC                 Ecuador        Pichincha                  2020-03-27    53
##  7 KW                 Kuwait         Al Farwaniyah Governorate  2020-05-11    53
##  8 KW                 Kuwait         Al Farwaniyah Governorate  2020-05-13    53
##  9 KW                 Kuwait         Al Farwaniyah Governorate  2020-05-20    53
## 10 SG                 Singapore      &amp;lt;NA&amp;gt;                       2020-04-10    53
## # ... with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;group-and-summarize&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.3&lt;/span&gt; Group and summarize&lt;/h3&gt;
&lt;p&gt;Where do we find greater variability between regions in each country on April 1, 2020?&lt;/p&gt;
&lt;p&gt;To answer this question, we first filter the data and then we group by the country column. When we use the &lt;code&gt;summarize()&lt;/code&gt; function after grouping, it allows us to summarize by these groups. Moreover, combining &lt;code&gt;group_by()&lt;/code&gt; with the &lt;code&gt;mutate()&lt;/code&gt; function modifies columns in each group separately. In &lt;code&gt;summarize()&lt;/code&gt; we calculate the maximum, minimum value and the difference between both extremes creating new columns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resi_variability &amp;lt;- residential_mobility %&amp;gt;% 
                        filter(date == ymd(&amp;quot;2020-04-01&amp;quot;),
                               !is.na(sub_region_1)) %&amp;gt;% 
                          group_by(country_region) %&amp;gt;% 
                           summarise(mx = max(resi, na.rm = TRUE), 
                                    min = min(resi, na.rm = TRUE),
                                    range = abs(mx)-abs(min))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` ungrouping output (override with `.groups` argument)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrange(resi_variability, -range)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 94 x 4
##    country_region    mx   min range
##    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 Nigeria           43     6    37
##  2 United States     35     6    29
##  3 India             36    15    21
##  4 Malaysia          45    26    19
##  5 Philippines       40    21    19
##  6 Vietnam           28     9    19
##  7 Colombia          41    24    17
##  8 Ecuador           44    27    17
##  9 Argentina         35    19    16
## 10 Chile             30    14    16
## # ... with 84 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;join-tables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.4&lt;/span&gt; Join tables&lt;/h3&gt;
&lt;p&gt;How can we filter the data to get a subset of Europe?&lt;/p&gt;
&lt;p&gt;To do this, we import a spatial dataset with the country code and a column of regions. Detailed explanations about the &lt;code&gt;sf&lt;/code&gt; (&lt;em&gt;simple feature&lt;/em&gt;) package, I’ll leave for another post.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rnaturalearth) # package of spatial vectorial data

# world limits
wld &amp;lt;- ne_countries(returnclass = &amp;quot;sf&amp;quot;)

# filter the countries with iso code and select the two columns of interest
wld &amp;lt;- filter(wld, !is.na(iso_a2)) %&amp;gt;% select(iso_a2, subregion)

# plot
plot(wld)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-06-06-a-very-short-introduction-to-tidyverse/index.en_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;dplyr&lt;/code&gt; functions allow us to join tables: &lt;code&gt;*_join ()&lt;/code&gt;. Depending on which table (left or right) you want to join, the functions change: &lt;code&gt;left_join()&lt;/code&gt;, &lt;code&gt;right_join()&lt;/code&gt; or even &lt;code&gt;full_join()&lt;/code&gt;. The &lt;code&gt;by&lt;/code&gt; argument is not necessary as long as both tables have a column in common. However, in this case the variable names are different, so we use the following way: &lt;code&gt;c(&#34;country_region_code&#34;=&#34;iso_a2&#34;)&lt;/code&gt;. The &lt;code&gt;forcats&lt;/code&gt; package of &lt;code&gt;tidyverse&lt;/code&gt; has many useful functions for handling categorical variables (&lt;code&gt;factors&lt;/code&gt;), variables that have a fixed and known set of possible values. All &lt;code&gt;forcats&lt;/code&gt; functions have the prefix &lt;code&gt;fct_*&lt;/code&gt;. For example, in this case we use &lt;code&gt;fct_reorder()&lt;/code&gt; to reorder the country labels in order of the maximum based on the residential mobility records. Finally, we create a new column &lt;code&gt;&#34;resi_real&#34;&lt;/code&gt; to change the reference value, the average or baseline, from 0 to 100.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;subset_europe &amp;lt;- filter(residential_mobility, 
                        is.na(sub_region_1),
                        !is.na(resi)) %&amp;gt;%
                 left_join(wld, by = c(&amp;quot;country_region_code&amp;quot;=&amp;quot;iso_a2&amp;quot;)) %&amp;gt;% 
                 filter(subregion %in% c(&amp;quot;Northern Europe&amp;quot;,
                                         &amp;quot;Southern Europe&amp;quot;,
                                          &amp;quot;Western Europe&amp;quot;,
                                          &amp;quot;Eastern Europe&amp;quot;)) %&amp;gt;%
                 mutate(resi_real = resi + 100,
                        region = fct_reorder(country_region, 
                                             resi, 
                                            .fun = &amp;quot;max&amp;quot;, 
                                            .desc = FALSE)) %&amp;gt;% 
                select(-geometry, -sub_region_1)

str(subset_europe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tibble [3,988 x 7] (S3: tbl_df/tbl/data.frame)
##  $ country_region_code: chr [1:3988] &amp;quot;AT&amp;quot; &amp;quot;AT&amp;quot; &amp;quot;AT&amp;quot; &amp;quot;AT&amp;quot; ...
##  $ country_region     : chr [1:3988] &amp;quot;Austria&amp;quot; &amp;quot;Austria&amp;quot; &amp;quot;Austria&amp;quot; &amp;quot;Austria&amp;quot; ...
##  $ date               : Date[1:3988], format: &amp;quot;2020-02-15&amp;quot; &amp;quot;2020-02-16&amp;quot; ...
##  $ resi               : num [1:3988] -2 -2 0 0 1 0 1 -2 0 -1 ...
##  $ subregion          : chr [1:3988] &amp;quot;Western Europe&amp;quot; &amp;quot;Western Europe&amp;quot; &amp;quot;Western Europe&amp;quot; &amp;quot;Western Europe&amp;quot; ...
##  $ resi_real          : num [1:3988] 98 98 100 100 101 100 101 98 100 99 ...
##  $ region             : Factor w/ 35 levels &amp;quot;Belarus&amp;quot;,&amp;quot;Ukraine&amp;quot;,..: 18 18 18 18 18 18 18 18 18 18 ...
##  - attr(*, &amp;quot;problems&amp;quot;)= tibble [597,554 x 5] (S3: tbl_df/tbl/data.frame)
##   ..$ row     : int [1:597554] 200119 200119 200120 200120 200121 200121 200122 200122 200123 200123 ...
##   ..$ col     : chr [1:597554] &amp;quot;sub_region_2&amp;quot; &amp;quot;census_fips_code&amp;quot; &amp;quot;sub_region_2&amp;quot; &amp;quot;census_fips_code&amp;quot; ...
##   ..$ expected: chr [1:597554] &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot; &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot; &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot; &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot; ...
##   ..$ actual  : chr [1:597554] &amp;quot;Autauga County&amp;quot; &amp;quot;01001&amp;quot; &amp;quot;Autauga County&amp;quot; &amp;quot;01001&amp;quot; ...
##   ..$ file    : chr [1:597554] &amp;quot;&amp;#39;Global_Mobility_Report.csv&amp;#39;&amp;quot; &amp;quot;&amp;#39;Global_Mobility_Report.csv&amp;#39;&amp;quot; &amp;quot;&amp;#39;Global_Mobility_Report.csv&amp;#39;&amp;quot; &amp;quot;&amp;#39;Global_Mobility_Report.csv&amp;#39;&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;long-and-wide-tables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.5&lt;/span&gt; Long and wide tables&lt;/h3&gt;
&lt;p&gt;Before we go to create graphics with &lt;code&gt;ggplot2&lt;/code&gt;, it is very common to modify the table between two main formats, long and wide. A table is tidy when 1) each variable is a column 2) each observation/case is a row and 3) each type of observational unit forms a table.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# subset
mobility_selection &amp;lt;- select(subset_europe, country_region_code, date:resi)
mobility_selection&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3,988 x 3
##    country_region_code date        resi
##    &amp;lt;chr&amp;gt;               &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 AT                  2020-02-15    -2
##  2 AT                  2020-02-16    -2
##  3 AT                  2020-02-17     0
##  4 AT                  2020-02-18     0
##  5 AT                  2020-02-19     1
##  6 AT                  2020-02-20     0
##  7 AT                  2020-02-21     1
##  8 AT                  2020-02-22    -2
##  9 AT                  2020-02-23     0
## 10 AT                  2020-02-24    -1
## # ... with 3,978 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# wide table
mobi_wide &amp;lt;- pivot_wider(mobility_selection, 
                         names_from = country_region_code,
                         values_from = resi)
mobi_wide&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 114 x 36
##    date          AT    BA    BE    BG    BY    CH    CZ    DE    DK    EE    ES
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 2020-02-15    -2    -1    -1     0    -1    -1    -2    -1     0     0    -2
##  2 2020-02-16    -2    -1     1    -3     0    -1    -1     0     1     0    -2
##  3 2020-02-17     0    -1     0    -2     0     1     0     0     1     1    -1
##  4 2020-02-18     0    -1     0    -2     0     1     0     1     1     1     0
##  5 2020-02-19     1    -1     0    -1    -1     1     0     1     1     0    -1
##  6 2020-02-20     0    -1     0     0    -1     0     0     1     1     0    -1
##  7 2020-02-21     1    -2     0    -1    -1     1     0     2     1     1    -2
##  8 2020-02-22    -2    -1     0     0    -2    -2    -3     0     1     0    -2
##  9 2020-02-23     0    -1     0    -3    -1    -1     0     0     0    -2    -3
## 10 2020-02-24    -1    -1     4    -1     0     0     0     4     0    16     0
## # ... with 104 more rows, and 24 more variables: FI &amp;lt;dbl&amp;gt;, FR &amp;lt;dbl&amp;gt;, GB &amp;lt;dbl&amp;gt;,
## #   GR &amp;lt;dbl&amp;gt;, HR &amp;lt;dbl&amp;gt;, HU &amp;lt;dbl&amp;gt;, IE &amp;lt;dbl&amp;gt;, IT &amp;lt;dbl&amp;gt;, LT &amp;lt;dbl&amp;gt;, LU &amp;lt;dbl&amp;gt;,
## #   LV &amp;lt;dbl&amp;gt;, MD &amp;lt;dbl&amp;gt;, MK &amp;lt;dbl&amp;gt;, NL &amp;lt;dbl&amp;gt;, NO &amp;lt;dbl&amp;gt;, PL &amp;lt;dbl&amp;gt;, PT &amp;lt;dbl&amp;gt;,
## #   RO &amp;lt;dbl&amp;gt;, RS &amp;lt;dbl&amp;gt;, RU &amp;lt;dbl&amp;gt;, SE &amp;lt;dbl&amp;gt;, SI &amp;lt;dbl&amp;gt;, SK &amp;lt;dbl&amp;gt;, UA &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# back to long table
pivot_longer(mobi_wide,
             2:36,
             names_to = &amp;quot;country_code&amp;quot;,
             values_to = &amp;quot;resi&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3,990 x 3
##    date       country_code  resi
##    &amp;lt;date&amp;gt;     &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;
##  1 2020-02-15 AT              -2
##  2 2020-02-15 BA              -1
##  3 2020-02-15 BE              -1
##  4 2020-02-15 BG               0
##  5 2020-02-15 BY              -1
##  6 2020-02-15 CH              -1
##  7 2020-02-15 CZ              -2
##  8 2020-02-15 DE              -1
##  9 2020-02-15 DK               0
## 10 2020-02-15 EE               0
## # ... with 3,980 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another group of functions you should take a look at are: &lt;code&gt;separate()&lt;/code&gt;, &lt;code&gt;case_when()&lt;/code&gt;, &lt;code&gt;complete()&lt;/code&gt;. More details can be found in the &lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/data-transformation.pdf&#34;&gt;Cheat-Sheet&lt;/a&gt; of &lt;code&gt;dplyr&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5&lt;/span&gt; Visualize data&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt; is a modern system for data visualization with a huge variety of options. Unlike the R Base graphic system, in &lt;code&gt;ggplot2&lt;/code&gt; a different grammar is used. The grammar of graphics (gg) consists of the sum of several independent layers or objects that are combined using &lt;code&gt;+&lt;/code&gt; to construct the final graph. &lt;code&gt;ggplot&lt;/code&gt; differentiates between data, what is displayed and how it is displayed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;data&lt;/em&gt;: our dataset (&lt;code&gt;data.frame&lt;/code&gt; or &lt;code&gt;tibble&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;aesthetics&lt;/em&gt;: with the &lt;code&gt;aes()&lt;/code&gt; function we indicate the variables that correspond to the x, y, z, … axes, or when it is intended to apply graphic parameters (color, size, shape) according to a variable. It is possible to include &lt;code&gt;aes()&lt;/code&gt; in &lt;code&gt;ggplot()&lt;/code&gt; or in the corresponding function to a geometry &lt;code&gt;geom_ *&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;geometries&lt;/em&gt;: are &lt;code&gt;geom_ *&lt;/code&gt; objects that indicate the geometry to be used, (eg: &lt;code&gt;geom_point()&lt;/code&gt;, &lt;code&gt;geom_line()&lt;/code&gt;, &lt;code&gt;geom_boxplot()&lt;/code&gt;, etc.).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;scales&lt;/em&gt;: are objects of type &lt;code&gt;scales_ *&lt;/code&gt; (eg, &lt;code&gt;scale_x_continous()&lt;/code&gt;, &lt;code&gt;scale_colour_manual()&lt;/code&gt;) to manipulate axes, define colors, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;statistics&lt;/em&gt;: are &lt;code&gt;stat_ *&lt;/code&gt; objects (eg, &lt;code&gt;stat_density()&lt;/code&gt;) that allow to apply statistical transformations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details can be found in the &lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/data-visualization-2.1.pdf&#34;&gt;Cheat-Sheet&lt;/a&gt; of &lt;code&gt;ggplot2&lt;/code&gt;. &lt;code&gt;ggplot&lt;/code&gt; is constantly supplemented by extensions for geometries or other graphical options (see &lt;a href=&#34;https://exts.ggplot2.tidyverse.org/ggiraph.html&#34; class=&#34;uri&#34;&gt;https://exts.ggplot2.tidyverse.org/ggiraph.html&lt;/a&gt;), for graphical ideas have a look a the R Graph Gallery (&lt;a href=&#34;https://www.r-graph-gallery.com/&#34; class=&#34;uri&#34;&gt;https://www.r-graph-gallery.com/&lt;/a&gt;).&lt;/p&gt;
&lt;div id=&#34;line-and-scatter-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5.1&lt;/span&gt; Line and scatter plot&lt;/h3&gt;
&lt;p&gt;We create a subset of our mobility data for residences and parks, filtering the records for Italian regions. In addition, we divide the mobility values in percentage by 100 to obtain the fraction, since &lt;code&gt;ggplot2&lt;/code&gt; allows us to indicate the unit of percentage in the label argument (see last plot in this section).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create subset
it &amp;lt;- filter(google_mobility, 
             country_region == &amp;quot;Italy&amp;quot;, 
             is.na(sub_region_1)) %&amp;gt;% 
      mutate(resi = residential_percent_change_from_baseline/100,   
             parks = parks_percent_change_from_baseline/100)


# line plot
ggplot(it, 
       aes(date, resi)) + 
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-06-06-a-very-short-introduction-to-tidyverse/index.en_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# scatter plot
ggplot(it, 
       aes(parks, resi)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-06-06-a-very-short-introduction-to-tidyverse/index.en_files/figure-html/unnamed-chunk-20-2.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To modify the axes, we use the different &lt;code&gt;scale_*&lt;/code&gt; functions that we must adapt to the scales of measurement (date, discrete, continuous, etc.). The &lt;code&gt;labs()&lt;/code&gt; function helps us define the axis, legend and plot titles. Finally, we add the style of the graph with &lt;code&gt;theme_light()&lt;/code&gt; (others are &lt;code&gt;theme_bw()&lt;/code&gt;, &lt;code&gt;theme_minimal()&lt;/code&gt;, etc.). We could also make changes to all graphic elements through &lt;code&gt;theme()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# time serie plot
ggplot(it, 
       aes(date, resi)) + 
  geom_line(colour = &amp;quot;#560A86&amp;quot;, size = 0.8) +
  scale_x_date(date_breaks = &amp;quot;10 days&amp;quot;, 
               date_labels = &amp;quot;%d %b&amp;quot;) +
  scale_y_continuous(breaks = seq(-0.1, 1, 0.1), 
                     labels = scales::percent) +
  labs(x = &amp;quot;&amp;quot;, 
       y = &amp;quot;Residential mobility&amp;quot;,
       title = &amp;quot;Mobility during COVID-19&amp;quot;) +
  theme_light()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-06-06-a-very-short-introduction-to-tidyverse/index.en_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# scatter plot
ggplot(it, 
       aes(parks, resi)) + 
  geom_point(alpha = .4, size = 2) +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  scale_x_continuous(breaks = seq(-1, 1.4, 0.2), 
                     labels = scales::percent) +
  scale_y_continuous(breaks = seq(-1, 1, 0.1), 
                     labels = scales::percent) +
  labs(x = &amp;quot;Park mobility&amp;quot;, 
       y = &amp;quot;Residential mobility&amp;quot;,
       title = &amp;quot;Mobility during COVID-19&amp;quot;) +
  theme_light()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-06-06-a-very-short-introduction-to-tidyverse/index.en_files/figure-html/unnamed-chunk-21-2.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;boxplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5.2&lt;/span&gt; Boxplot&lt;/h3&gt;
&lt;p&gt;We can visualize different aspects of the mobility with other geometries. Here we will create boxplots for each European country representing the variability of mobility between and within countries during the COVID-19 pandemic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# subset
subset_europe_reg &amp;lt;- filter(residential_mobility, 
                           !is.na(sub_region_1),
                           !is.na(resi)) %&amp;gt;%
                     left_join(wld, by = c(&amp;quot;country_region_code&amp;quot;=&amp;quot;iso_a2&amp;quot;)) %&amp;gt;% 
                     filter(subregion %in% c(&amp;quot;Northern Europe&amp;quot;,
                                         &amp;quot;Southern Europe&amp;quot;,
                                          &amp;quot;Western Europe&amp;quot;,
                                          &amp;quot;Eastern Europe&amp;quot;)) %&amp;gt;% 
                     mutate(resi = resi/100, 
                            country_region = fct_reorder(country_region, resi))

# boxplot
ggplot(subset_europe_reg, 
       aes(country_region, resi, fill = subregion)) + 
  geom_boxplot() +
  scale_y_continuous(breaks = seq(-0.1, 1, 0.1), labels = scales::percent) +
  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) +
  coord_flip() +
   labs(x = &amp;quot;&amp;quot;, 
       y = &amp;quot;Residential mobility&amp;quot;,
       title = &amp;quot;Mobility during COVID-19&amp;quot;, 
       fill = &amp;quot;&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-06-06-a-very-short-introduction-to-tidyverse/index.en_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;heatmap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5.3&lt;/span&gt; Heatmap&lt;/h3&gt;
&lt;p&gt;To visualize the mobility trend of all European countries it is recommended to use a heatmap instead of a bundle of lines. Before building the graph, we will create a vector of Sundays for the x-axis labels in the observation period.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# sequence of dates
df &amp;lt;- data.frame(d = seq(ymd(&amp;quot;2020-02-15&amp;quot;), ymd(&amp;quot;2020-06-07&amp;quot;), &amp;quot;day&amp;quot;))

# filter on Sundays 
sundays &amp;lt;- df %&amp;gt;% 
            mutate(wd = wday(d, week_start = 1)) %&amp;gt;% 
             filter(wd == 7) %&amp;gt;% 
              pull(d)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To difference between European regions, we will use a color fill for the boxplots. We can set the color type with &lt;code&gt;scale_fill_*&lt;/code&gt;, in this case, from the viridis scheme. In addition, the &lt;code&gt;guides()&lt;/code&gt; function can modify the color bar of the legend. Finally, here we see the use of &lt;code&gt;theme()&lt;/code&gt; with additional changes to &lt;code&gt;theme_minimal()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# headmap
ggplot(subset_europe, 
       aes(date, region, fill = resi_real)) +
  geom_tile() +
  scale_x_date(breaks = sundays,
               date_labels = &amp;quot;%d %b&amp;quot;) +
  scale_fill_viridis_c(option = &amp;quot;A&amp;quot;, 
                       breaks = c(91, 146),
                       labels = c(&amp;quot;Less&amp;quot;, &amp;quot;More&amp;quot;), 
                       direction = -1) +
  theme_minimal() +
  theme(legend.position = &amp;quot;top&amp;quot;, 
        title = element_text(size = 14),
        panel.grid.major.x = element_line(colour = &amp;quot;white&amp;quot;, linetype = &amp;quot;dashed&amp;quot;),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_blank(),
        panel.ontop = TRUE,
        plot.margin = margin(r = 1, unit = &amp;quot;cm&amp;quot;)) +
  labs(y = &amp;quot;&amp;quot;, 
       x = &amp;quot;&amp;quot;, 
       fill = &amp;quot;&amp;quot;, 
       title = &amp;quot;Mobility trends for places of residence&amp;quot;,
       caption = &amp;quot;Data: google.com/covid19/mobility/&amp;quot;) +
  guides(fill = guide_colorbar(barwidth = 10, 
                               barheight = .5,
                               label.position = &amp;quot;top&amp;quot;, 
                               ticks = FALSE)) +
  coord_cartesian(expand = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/post/en/2020-06-06-a-very-short-introduction-to-tidyverse/index.en_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;3675&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;apply-functions-on-vectors-or-lists&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.6&lt;/span&gt; Apply functions on vectors or lists&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;purrr&lt;/code&gt; package contains a set of advanced functional programming functions for working with functions and vectors. The known &lt;code&gt;lapply()&lt;/code&gt; family of R Base corresponds to the &lt;code&gt;map()&lt;/code&gt; functions in this package. One of the biggest advantages is being able to reduce the use of loops (&lt;code&gt;for&lt;/code&gt;, etc.).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# list of two vectors
vec_list &amp;lt;- list(x = 1:10, y = 50:70)

# calculate the average for each one
map(vec_list, mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $x
## [1] 5.5
## 
## $y
## [1] 60&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# change the output type map_* (dbl, chr, lgl, etc.)
map_dbl(vec_list, mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x    y 
##  5.5 60.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, a more complex example. We calculate the correlation coefficient between residential and park mobility in all European countries. To get a tidy summary of a model or test we use the &lt;code&gt;tidy()&lt;/code&gt; function of the &lt;code&gt;broom&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(broom) # tidy outputs

# custom function
cor_test &amp;lt;- function(x, formula) { 
  
df &amp;lt;- cor.test(as.formula(formula), data = x) %&amp;gt;% tidy()

return(df)
  
}

# prepare the data
europe_reg &amp;lt;- filter(google_mobility, 
                           !is.na(sub_region_1),
                           !is.na(residential_percent_change_from_baseline)) %&amp;gt;%
                     left_join(wld, by = c(&amp;quot;country_region_code&amp;quot;=&amp;quot;iso_a2&amp;quot;)) %&amp;gt;% 
                     filter(subregion %in% c(&amp;quot;Northern Europe&amp;quot;,
                                         &amp;quot;Southern Europe&amp;quot;,
                                          &amp;quot;Western Europe&amp;quot;,
                                          &amp;quot;Eastern Europe&amp;quot;))

# apply the function to each country creating a list
cor_mobility &amp;lt;- europe_reg %&amp;gt;%
                 split(.$country_region_code) %&amp;gt;% 
                   map(cor_test, formula = &amp;quot;~ residential_percent_change_from_baseline + parks_percent_change_from_baseline&amp;quot;)  

cor_mobility[1:5]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $AT
## # A tibble: 1 x 8
##   estimate statistic  p.value parameter conf.low conf.high method    alternative
##      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;      
## 1   -0.360     -12.3 2.68e-32      1009   -0.413    -0.305 Pearson&amp;#39;~ two.sided  
## 
## $BE
## # A tibble: 1 x 8
##   estimate statistic  p.value parameter conf.low conf.high method    alternative
##      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;      
## 1   -0.312     -6.06  3.67e-9       340   -0.405    -0.213 Pearson&amp;#39;~ two.sided  
## 
## $BG
## # A tibble: 1 x 8
##   estimate statistic   p.value parameter conf.low conf.high method   alternative
##      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      
## 1   -0.677     -37.8 1.47e-227      1694   -0.702    -0.650 Pearson~ two.sided  
## 
## $CH
## # A tibble: 1 x 8
##   estimate statistic p.value parameter conf.low conf.high method     alternative
##      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;     &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;      
## 1  -0.0786     -2.91 0.00370      1360   -0.131   -0.0256 Pearson&amp;#39;s~ two.sided  
## 
## $CZ
## # A tibble: 1 x 8
##   estimate statistic  p.value parameter conf.low conf.high method    alternative
##      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;      
## 1  -0.0837     -3.35 0.000824      1593   -0.132   -0.0347 Pearson&amp;#39;~ two.sided&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As we’ve seen before, there are subfunctions of &lt;code&gt;map_*&lt;/code&gt; to get an object of another class instead of a list, here for a bind &lt;code&gt;data.frame&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor_mobility &amp;lt;- europe_reg %&amp;gt;%
                  split(.$country_region_code) %&amp;gt;% 
                     map_df(cor_test, 
                            formula = &amp;quot;~ residential_percent_change_from_baseline + parks_percent_change_from_baseline&amp;quot;, 
                            .id = &amp;quot;country_code&amp;quot;)

arrange(cor_mobility, estimate)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 27 x 9
##    country_code estimate statistic   p.value parameter conf.low conf.high method
##    &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; 
##  1 IT             -0.831    -71.0  0.             2250   -0.844    -0.818 Pears~
##  2 ES             -0.825    -65.4  0.             2005   -0.839    -0.811 Pears~
##  3 PT             -0.729    -46.9  2.12e-321      1938   -0.749    -0.707 Pears~
##  4 FR             -0.698    -37.4  3.29e-216      1474   -0.723    -0.671 Pears~
##  5 GR             -0.692    -27.0  1.03e-114       796   -0.726    -0.654 Pears~
##  6 BG             -0.677    -37.8  1.47e-227      1694   -0.702    -0.650 Pears~
##  7 RO             -0.640    -56.0  0.             4517   -0.657    -0.623 Pears~
##  8 SI             -0.627    -11.4  1.98e- 23       200   -0.704    -0.535 Pears~
##  9 HR             -0.579    -21.9  9.32e- 87       954   -0.620    -0.536 Pears~
## 10 LV             -0.544     -6.87 3.84e- 10       112   -0.662    -0.401 Pears~
## # ... with 17 more rows, and 1 more variable: alternative &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Other practical examples here in this &lt;a href=&#34;https://dominicroye.github.io/en/2019/import-excel-sheets-with-r/&#34;&gt;post&lt;/a&gt; or this &lt;a href=&#34;https://dominicroye.github.io/en/2019/tidy-correlation-tests-in-r/&#34;&gt;other&lt;/a&gt;. More details can be found in the &lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/purrr.pdf&#34;&gt;Cheat-Sheet&lt;/a&gt; of &lt;code&gt;purrr&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Predictive value of three thermal confort indices in low temperatures on cardiovascular morbidity in the Iberian Peninsula</title>
      <link>https://dominicroye.github.io/en/publication/ingresos_cardio_2020/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dominicroye.github.io/en/publication/ingresos_cardio_2020/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
