<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clima | Dr. Dominic Royé</title>
    <link>https://dominicroye.github.io/es/tag/clima/</link>
      <atom:link href="https://dominicroye.github.io/es/tag/clima/index.xml" rel="self" type="application/rss+xml" />
    <description>clima</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>es-ES</language><copyright>© 2018-2022 Dominic Royé. All rights reserved</copyright><lastBuildDate>Sat, 04 Sep 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dominicroye.github.io/media/logo_hu6637600e1c36fe7812a10a6623aaebda_116520_300x300_fit_lanczos_3.png</url>
      <title>clima</title>
      <link>https://dominicroye.github.io/es/tag/clima/</link>
    </image>
    
    <item>
      <title>Círculos climáticos</title>
      <link>https://dominicroye.github.io/es/2021/circulos-climaticos/</link>
      <pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/2021/circulos-climaticos/</guid>
      <description>
&lt;script src=&#34;https://dominicroye.github.io/es/2021/circulos-climaticos/index.es_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;El clima de un lugar se suele presentar a través de climogramas que combinan la precipitación y temperatura mensual en un único gráfico. No obstante, también es interesante visualizar el clima a nivel diario mostrando la amplitud térmica y la temperatura media diaria. Para ello, se calculan las medias de cada día del año de las mínimas, máximas y medias diarias.&lt;/p&gt;
&lt;p&gt;El ciclo anual del clima presenta una buena oportunidad para usar un gráfico radial, polar o circular lo que nos permite visualizar de forma clara los patrones estacionales.&lt;/p&gt;
&lt;div id=&#34;paquetes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Paquetes&lt;/h1&gt;
&lt;p&gt;Usaremos los siguientes paquetes:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;9%&#34; /&gt;
&lt;col width=&#34;90%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Paquete&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conjunto de paquetes (visualización y manipulación de datos): ggplot2, dplyr, purrr,etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;fs&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Proporciona una interfaz uniforme y multiplataforma para las operaciones del sistema de archivos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;lubridate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fácil manipulación de fechas y tiempos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;janitor&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Funciones sencillas para examinar y limpiar datos&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# instalamos los paquetes si hace falta

if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;fs&amp;quot;)) install.packages(&amp;quot;fs&amp;quot;)
if(!require(&amp;quot;lubridate&amp;quot;)) install.packages(&amp;quot;lubridate&amp;quot;)

# paquetes

library(tidyverse)
library(lubridate)
library(fs)
library(janitor)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;preparación&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Preparación&lt;/h1&gt;
&lt;div id=&#34;datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Datos&lt;/h2&gt;
&lt;p&gt;Descargamos los datos de temperatura de una selección de ciudades estadounidenses &lt;a href=&#34;https://dominicroye.github.io/files/weather_stats_usa.zip&#34;&gt;descarga&lt;/a&gt;. Podéis descargar otras ciudades del mundo a través de los datasets WMO o GHCN en &lt;a href=&#34;https://gis.ncdc.noaa.gov/maps/ncei/cdo/daily&#34;&gt;NCDC/NOAA&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;importar&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Importar&lt;/h2&gt;
&lt;p&gt;Para importar las series temporales de temperatura de cada ciudad, que encontramos en varios archivos, aplicamos la función &lt;code&gt;read_csv()&lt;/code&gt; usando &lt;code&gt;map_df()&lt;/code&gt;. La función &lt;code&gt;dir_ls()&lt;/code&gt; del paquete &lt;code&gt;fs&lt;/code&gt; nos devuelve el listado de archivos con la extensión &lt;em&gt;csv&lt;/em&gt;. El suffijo de &lt;code&gt;map()&lt;/code&gt; indica que queremos unir todas las tablas importadas en una única. Para aquellos con menos experiencia con &lt;code&gt;tidyverse&lt;/code&gt;, recomiendo una breve introducción en este blog &lt;a href=&#34;https://dominicroye.github.io/es/2020/una-muy-breve-introducci%C3%B3n-a-tidyverse/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Después obtenemos los nombres de las estaciones meteorologicas y definimos un nuevo vector con los nuevos nombres.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# importamos los datos
meteo &amp;lt;- dir_ls(regexp = &amp;quot;.csv$&amp;quot;) %&amp;gt;% 
          map_df(read_csv)

# nombres de las estaciones
stats_names &amp;lt;- unique(meteo$NAME)
stats_names&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;CHICAGO OHARE INTERNATIONAL AIRPORT, IL US&amp;quot;             
## [2] &amp;quot;LAGUARDIA AIRPORT, NY US&amp;quot;                               
## [3] &amp;quot;MIAMI INTERNATIONAL AIRPORT, FL US&amp;quot;                     
## [4] &amp;quot;HOUSTON INTERCONTINENTAL AIRPORT, TX US&amp;quot;                
## [5] &amp;quot;ATLANTA HARTSFIELD JACKSON INTERNATIONAL AIRPORT, GA US&amp;quot;
## [6] &amp;quot;SAN FRANCISCO INTERNATIONAL AIRPORT, CA US&amp;quot;             
## [7] &amp;quot;SEATTLE TACOMA AIRPORT, WA US&amp;quot;                          
## [8] &amp;quot;DENVER INTERNATIONAL AIRPORT, CO US&amp;quot;                    
## [9] &amp;quot;MCCARRAN INTERNATIONAL AIRPORT, NV US&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# nuevos nombres de las ciudades
cities &amp;lt;- c(&amp;quot;CHICAGO&amp;quot;, &amp;quot;NEW YORK&amp;quot;, &amp;quot;MIAMI&amp;quot;, 
            &amp;quot;HOUSTON&amp;quot;, &amp;quot;ATLANTA&amp;quot;, &amp;quot;SAN FRANCISCO&amp;quot;, 
            &amp;quot;SEATTLE&amp;quot;, &amp;quot;DENVER&amp;quot;, &amp;quot;LAS VEGAS&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;modificar&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Modificar&lt;/h2&gt;
&lt;p&gt;En el primer paso modificaremos los datos originales, 1) seleccionando únicamente las columnas de interés, 2) filtrando al período 1991-2020, 3) definiendo los nuevos nombres de las estaciones, 4) calculando la temperatura media allí donde esté ausente, 5) limpiando los nombres de las columnas, y 6) creando una nueva variable con los días del año. La función &lt;code&gt;clean_names()&lt;/code&gt; de &lt;code&gt;janitor&lt;/code&gt; es muy útil para obtener nombres de columnas limpios.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meteo &amp;lt;- select(meteo, NAME, DATE, TAVG:TMIN) %&amp;gt;%  
           filter(DATE &amp;gt;= &amp;quot;1991-01-01&amp;quot;, DATE &amp;lt;= &amp;quot;2020-12-31&amp;quot;) %&amp;gt;% 
            mutate(NAME = factor(NAME, stats_names, cities),
                   TAVG = ifelse(is.na(TAVG), (TMAX+TMIN)/2, TAVG),
                   yd = yday(DATE)) %&amp;gt;% 
            clean_names()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En el siguiente paso calculamos el promedio de las máximas, mínimas y media diarias para cada día del año. Después únicamente falta por convertir los días del año en una fecha dummy. Aquí usamos el año 2000 dado que es bisiesto y tenemos en total 366 días.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# estimamos los promedios diarios
meteo_yday &amp;lt;- group_by(meteo, name, yd) %&amp;gt;% 
                  summarise(ta = mean(tavg, na.rm = TRUE),
                            tmx = mean(tmax, na.rm = TRUE),
                            tmin = mean(tmin, na.rm = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &amp;#39;name&amp;#39;. You can override using the
## `.groups` argument.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meteo_yday&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3,294 x 5
## # Groups:   name [9]
##    name       yd    ta    tmx  tmin
##    &amp;lt;fct&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 CHICAGO     1 -3.77  0.537 -7.86
##  2 CHICAGO     2 -2.64  1.03  -6.68
##  3 CHICAGO     3 -2.88  0.78  -6.93
##  4 CHICAGO     4 -2.86  0.753 -7.10
##  5 CHICAGO     5 -4.13 -0.137 -8.33
##  6 CHICAGO     6 -4.50 -1.15  -8.05
##  7 CHICAGO     7 -4.70 -0.493 -8.57
##  8 CHICAGO     8 -3.97  0.147 -8.02
##  9 CHICAGO     9 -3.47  0.547 -7.49
## 10 CHICAGO    10 -3.41  1.09  -7.64
## # ... with 3,284 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# convertimos los días del año en una fecha dummy
meteo_yday &amp;lt;- mutate(meteo_yday, yd = as_date(yd, origin = &amp;quot;1999-12-31&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;cear-los-círculos-climáticos&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Cear los círculos climáticos&lt;/h1&gt;
&lt;div id=&#34;predefiniciones&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Predefiniciones&lt;/h2&gt;
&lt;p&gt;Definimos un vector divergente de varios colores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;col_temp &amp;lt;- c(&amp;quot;#cbebf6&amp;quot;,&amp;quot;#a7bfd9&amp;quot;,&amp;quot;#8c99bc&amp;quot;,&amp;quot;#974ea8&amp;quot;,&amp;quot;#830f74&amp;quot;,
              &amp;quot;#0b144f&amp;quot;,&amp;quot;#0e2680&amp;quot;,&amp;quot;#223b97&amp;quot;,&amp;quot;#1c499a&amp;quot;,&amp;quot;#2859a5&amp;quot;,
              &amp;quot;#1b6aa3&amp;quot;,&amp;quot;#1d9bc4&amp;quot;,&amp;quot;#1ca4bc&amp;quot;,&amp;quot;#64c6c7&amp;quot;,&amp;quot;#86cabb&amp;quot;,
              &amp;quot;#91e0a7&amp;quot;,&amp;quot;#c7eebf&amp;quot;,&amp;quot;#ebf8da&amp;quot;,&amp;quot;#f6fdd1&amp;quot;,&amp;quot;#fdeca7&amp;quot;,
              &amp;quot;#f8da77&amp;quot;,&amp;quot;#fcb34d&amp;quot;,&amp;quot;#fc8c44&amp;quot;,&amp;quot;#f85127&amp;quot;,&amp;quot;#f52f26&amp;quot;,
              &amp;quot;#d10b26&amp;quot;,&amp;quot;#9c042a&amp;quot;,&amp;quot;#760324&amp;quot;,&amp;quot;#18000c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Creamos una tabla con las líneas de la rejilla en sentido eje x.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grid_x &amp;lt;- tibble(x = seq(ymd(&amp;quot;2000-01-01&amp;quot;), ymd(&amp;quot;2000-12-31&amp;quot;), &amp;quot;month&amp;quot;), 
                 y = rep(-10, 12), 
                 xend = seq(ymd(&amp;quot;2000-01-01&amp;quot;), ymd(&amp;quot;2000-12-31&amp;quot;), &amp;quot;month&amp;quot;), 
                 yend = rep(41, 12))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Definimos todos los elementos de estilo del gráfico en nuestro propio tema &lt;code&gt;theme_cc()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_cc &amp;lt;- function(){ 
  
 theme_minimal(base_family = &amp;quot;Montserrat&amp;quot;) %+replace%
  theme(plot.title = element_text(hjust = 0.5, colour = &amp;quot;white&amp;quot;, size = 30, margin = margin(b = 20)),
        plot.caption = element_text(colour = &amp;quot;white&amp;quot;, size = 9, hjust = .5, vjust = -30),
        plot.background = element_rect(fill = &amp;quot;black&amp;quot;),
        plot.margin = margin(1, 1, 2, 1, unit = &amp;quot;cm&amp;quot;),
  
        axis.text.x = element_text(face = &amp;quot;italic&amp;quot;, colour = &amp;quot;white&amp;quot;),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        
        legend.title = element_text(colour = &amp;quot;white&amp;quot;),
        legend.position = &amp;quot;bottom&amp;quot;,
        legend.justification = 0.5,
        legend.text = element_text(colour = &amp;quot;white&amp;quot;),
       
        
        strip.text = element_text(colour = &amp;quot;white&amp;quot;, face = &amp;quot;bold&amp;quot;, size = 14),
        
        panel.spacing.y = unit(1, &amp;quot;lines&amp;quot;),
        panel.background = element_rect(fill = &amp;quot;black&amp;quot;),
        panel.grid = element_blank()
      ) 
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;gráfico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gráfico&lt;/h2&gt;
&lt;p&gt;Empezamos por crear un gráfico únicamente para la ciudad de Nueva York. Usaremos &lt;code&gt;geom_linerange()&lt;/code&gt; definiendo el rango con las máximas y mínimas. Además, dibujaremos las líneas de rango en función de la temperatura media. Podemos ajustar &lt;em&gt;alpha&lt;/em&gt; y &lt;em&gt;size&lt;/em&gt; para obtener un aspecto más bonito.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# filtramos Nueva York
ny_city &amp;lt;- filter(meteo_yday, name == &amp;quot;NEW YORK&amp;quot;) 

# gráfico
ggplot(ny_city) + 
  geom_linerange(aes(yd, 
                     ymax = tmx, 
                     ymin = tmin, 
                     colour = ta),
                 size=0.5, 
                 alpha = .7) + 
  scale_y_continuous(breaks = seq(-30, 50, 10), 
                     limits = c(-11, 42), 
                     expand = expansion()) +
  scale_colour_gradientn(colours = col_temp, 
                         limits = c(-12, 35), 
                         breaks = seq(-12, 34, 5)) + 
  scale_x_date(date_breaks = &amp;quot;month&amp;quot;,
               date_labels = &amp;quot;%b&amp;quot;) +
  labs(title = &amp;quot;CLIMATE CIRCLES&amp;quot;, 
       colour = &amp;quot;Daily average temperature&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2021/circulos-climaticos/index.es_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Para conseguir el gráfico polar únicamente haría falta añadir la función &lt;code&gt;coord_polar()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# gráfico polar
ggplot(ny_city) + 
  geom_linerange(aes(yd, 
                     ymax = tmx, 
                     ymin = tmin, 
                     colour = ta),
                 size=0.5, 
                 alpha = .7) + 
  scale_y_continuous(breaks = seq(-30, 50, 10), 
                     limits = c(-11, 42), 
                     expand = expansion()) +
  scale_colour_gradientn(colours = col_temp, 
                         limits = c(-12, 35), 
                         breaks = seq(-12, 34, 5)) + 
  scale_x_date(date_breaks = &amp;quot;month&amp;quot;,
               date_labels = &amp;quot;%b&amp;quot;) +
  coord_polar() +
  labs(title = &amp;quot;CLIMATE CIRCLES&amp;quot;, 
       colour = &amp;quot;Daily average temperature&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2021/circulos-climaticos/index.es_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Cambiamos la lengua del sistema operativo para obtener los nombres de meses en inglés. Para volver a la lengua de origen podemos usar simplemente la función &lt;code&gt;Sys.setlocale(&#34;LC_TIME&#34;, old_lc)&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;old_lc &amp;lt;- Sys.getlocale(&amp;quot;LC_TIME&amp;quot;)

Sys.setlocale(&amp;quot;LC_TIME&amp;quot;, &amp;quot;English&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;English_United States.1252&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En el gráfico final añadimos la rejilla definiendo las líneas en el eje y con &lt;code&gt;geom_hline()&lt;/code&gt;, y aquellas del eje x con &lt;code&gt;geom_segement()&lt;/code&gt;. Lo más importante aquí es la función &lt;code&gt;facet_wrap()&lt;/code&gt;, la que permite la creación de múltiples facetas de gráficos. Se usa el formato de fórmula para especificar de que forma se crean las facetas: &lt;code&gt;fila ~ columna&lt;/code&gt;. En caso de que no dispongamos de una segunda variable, se indica en la fórmula un punto &lt;code&gt;.&lt;/code&gt;. Además, hacemos cambios de aspecto en la barra de color con &lt;code&gt;guides()&lt;/code&gt; y &lt;code&gt;guide_colourbar()&lt;/code&gt;, e incluimos los estilos &lt;code&gt;theme_cc()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(meteo_yday) + 
  geom_hline(yintercept = c(-10, 0, 10, 20, 30, 40), 
             colour = &amp;quot;white&amp;quot;, 
             size = .4) +
  geom_segment(data = grid_x , 
               aes(x = x, 
                   y = y, 
                   xend = xend, 
                   yend = yend), 
               linetype = &amp;quot;dashed&amp;quot;, 
               colour = &amp;quot;white&amp;quot;, 
               size = .2) +
  geom_linerange(aes(yd, 
                     ymax = tmx, 
                     ymin = tmin, 
                     colour = ta),
                 size=0.5, 
                 alpha = .7) + 
  scale_y_continuous(breaks = seq(-30, 50, 10), 
                     limits = c(-11, 42), 
                     expand = expansion())+
  scale_colour_gradientn(colours = col_temp, 
                         limits = c(-12, 35), 
                         breaks = seq(-12, 34, 5)) + 
  scale_x_date(date_breaks = &amp;quot;month&amp;quot;, 
               date_labels = &amp;quot;%b&amp;quot;) +
  guides(colour = guide_colourbar(barwidth = 15,
                                  barheight = 0.5, 
                                  title.position = &amp;quot;top&amp;quot;)
         ) +
  facet_wrap(~name, nrow = 3) +
  coord_polar() + 
  labs(title = &amp;quot;CLIMATE CIRCLES&amp;quot;, 
       colour = &amp;quot;Daily average temperature&amp;quot;) +
  theme_cc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2021/circulos-climaticos/index.es_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;3540&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Geographical Variations of the Minimum Mortality Temperature at a Global Scale</title>
      <link>https://dominicroye.github.io/es/publication/2021-minimum-mortality-temperature-environmental-epidemiology/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/publication/2021-minimum-mortality-temperature-environmental-epidemiology/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Un heatmap como calendario</title>
      <link>https://dominicroye.github.io/es/2020/un-heatmap-como-calendario/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/2020/un-heatmap-como-calendario/</guid>
      <description>
&lt;script src=&#34;https://dominicroye.github.io/es/2020/un-heatmap-como-calendario/index.es_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Recientemente buscaba una representación visual para mostrar los cambios diarios de la temperatura, precipitación y el viento en una aplicación &lt;a href=&#34;https://xeo81.shinyapps.io/MeteoExtremosGalicia/&#34;&gt;xeo81.shinyapps.io/MeteoExtremosGalicia&lt;/a&gt;, lo que me llevó a usar un heatmap en forma de calendario. La aplicación &lt;a href=&#34;https://shiny.rstudio.com/&#34;&gt;shiny&lt;/a&gt; se actualiza cada cuatro horas con nuevos datos mostrando calendarios de cada estación meteorológica. El heatmap como calendario permite visualizar cualquier variable con una referencia temporal diaria.&lt;/p&gt;
&lt;div id=&#34;paquetes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Paquetes&lt;/h2&gt;
&lt;p&gt;En este post usaremos los siguientes paquetes:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;col width=&#34;89%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Paquete&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conjunto de paquetes (visualización y manipulación de datos): ggplot2, dplyr, purrr,etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;lubridate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fácil manipulación de fechas y tiempos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ragg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Salidas gráficas para R basados en la librería AGG&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# instalamos los paquetes si hace falta
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;ragg&amp;quot;)) install.packages(&amp;quot;ragg&amp;quot;)
if(!require(&amp;quot;lubridate&amp;quot;)) install.packages(&amp;quot;lubridate&amp;quot;)

# paquetes
library(tidyverse)
library(lubridate)
library(ragg)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para aquellos con menos experiencia con &lt;code&gt;tidyverse&lt;/code&gt;, recomiendo una breve introducción en este blog &lt;a href=&#34;https://dominicroye.github.io/es/2020/una-muy-breve-introducci%C3%B3n-a-tidyverse/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Datos&lt;/h2&gt;
&lt;p&gt;En este ejemplo usaremos la precipitación diaria de Santiago de Compostela de este año 2020 (hasta el 20 de diciembre) &lt;a href=&#34;https://dominicroye.github.io/files/precipitation_santiago.csv&#34;&gt;descarga&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# importamos los datos
dat_pr &amp;lt;- read_csv(&amp;quot;precipitation_santiago.csv&amp;quot;)
dat_pr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 355 x 2
##    date          pr
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 2020-01-01   0  
##  2 2020-01-02   0  
##  3 2020-01-03   5.4
##  4 2020-01-04   0  
##  5 2020-01-05   0  
##  6 2020-01-06   0  
##  7 2020-01-07   0  
##  8 2020-01-08   1  
##  9 2020-01-09   3.8
## 10 2020-01-10   0  
## # ... with 345 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;preparación&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparación&lt;/h2&gt;
&lt;p&gt;En el primer paso debemos 1) complementar la serie temporal desde el 21 al 31 de diciembre con &lt;code&gt;NA&lt;/code&gt;, 2) añadir el día de la semana, el mes, el número de la semana y el día. En función de si queremos que cada semana comience por Domingo o Lunes debemos indicarlo en la función &lt;code&gt;wday()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_pr &amp;lt;- dat_pr %&amp;gt;% 
          complete(date = seq(ymd(&amp;quot;2020-01-01&amp;quot;), 
                              ymd(&amp;quot;2020-12-31&amp;quot;), 
                              &amp;quot;day&amp;quot;)) %&amp;gt;%
          mutate(weekday = wday(date, label = T, week_start = 1), 
                 month = month(date, label = T, abbr = F),
                 week = isoweek(date),
                 day = day(date))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En el siguiente paso corregimos las etiquetas de los días de la semana, es un bug dentro del paquete &lt;code&gt;lubridate&lt;/code&gt;. Además debemos hacer un cambio en la semana del año, lo que se debe a que en ciertos años pueden quedar, por ejemplo, unos días al final de año como primera semana del siguiente año. También creamos dos nuevas columnas. Por una parte, categorizamos la precipitación en 14 clases y por otra definimos un color de texto blanco para tonos más oscuros.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_pr &amp;lt;- mutate(dat_pr, 
                 weekday = factor(weekday, 
                                  levels(weekday),
                                  str_sub(levels(weekday), 1, 2)),
                 week = case_when(month == &amp;quot;diciembre&amp;quot; &amp;amp; week == 1 ~ 53,
                                  month == &amp;quot;enero&amp;quot; &amp;amp; week %in% 52:53 ~ 0,
                                  TRUE ~ week),
                 pcat = cut(pr, c(-1, 0, .5, 1:5, 7, 9, 15, 20, 25, 30, 300)),
                 text_col = ifelse(pcat %in% c(&amp;quot;(15,20]&amp;quot;, &amp;quot;(20,25]&amp;quot;, &amp;quot;(25,30]&amp;quot;, &amp;quot;(30,300]&amp;quot;), 
                                   &amp;quot;white&amp;quot;, &amp;quot;black&amp;quot;)) 
      
dat_pr  &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 366 x 8
##    date          pr weekday month  week   day pcat    text_col
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt;   &amp;lt;ord&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;   &amp;lt;chr&amp;gt;   
##  1 2020-01-01   0   mi      enero     1     1 (-1,0]  black   
##  2 2020-01-02   0   ju      enero     1     2 (-1,0]  black   
##  3 2020-01-03   5.4 vi      enero     1     3 (5,7]   black   
##  4 2020-01-04   0   sá      enero     1     4 (-1,0]  black   
##  5 2020-01-05   0   do      enero     1     5 (-1,0]  black   
##  6 2020-01-06   0   lu      enero     2     6 (-1,0]  black   
##  7 2020-01-07   0   ma      enero     2     7 (-1,0]  black   
##  8 2020-01-08   1   mi      enero     2     8 (0.5,1] black   
##  9 2020-01-09   3.8 ju      enero     2     9 (3,4]   black   
## 10 2020-01-10   0   vi      enero     2    10 (-1,0]  black   
## # ... with 356 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualización&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualización&lt;/h2&gt;
&lt;p&gt;Primero creamos una rampa de color a partir de colores Brewer.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# rampa de color
pubu &amp;lt;- RColorBrewer::brewer.pal(9, &amp;quot;PuBu&amp;quot;)
col_p &amp;lt;- colorRampPalette(pubu)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Antes de construir el gráfico definimos un estilo personalizado como función. Para ello, especificamos todos los elementos y sus modificaciones con ayuda de la función &lt;code&gt;theme()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_calendar &amp;lt;- function(){

 theme(aspect.ratio = 1/2,
       
       axis.title = element_blank(),
       axis.ticks = element_blank(),
       axis.text.y = element_blank(),
       axis.text = element_text(family = &amp;quot;Montserrat&amp;quot;),
       
       panel.grid = element_blank(),
       panel.background = element_blank(),
       
       strip.background = element_blank(),
       strip.text = element_text(family = &amp;quot;Montserrat&amp;quot;, face = &amp;quot;bold&amp;quot;, size = 15),
       
       legend.position = &amp;quot;top&amp;quot;,
       legend.text = element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = .5),
       legend.title = element_text(family = &amp;quot;Montserrat&amp;quot;, size = 9, hjust = 1),
       
       plot.caption =  element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = 1, size = 8),
       panel.border = element_rect(colour = &amp;quot;grey&amp;quot;, fill=NA, size=1),
       plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = .5, size = 26, 
                                 face = &amp;quot;bold&amp;quot;, 
                                 margin = margin(0,0,0.5,0, unit = &amp;quot;cm&amp;quot;)),
       plot.subtitle = element_text(family = &amp;quot;Montserrat&amp;quot;, hjust = .5, size = 16)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finalmente, creamos el gráfico usando &lt;code&gt;geom_tile()&lt;/code&gt; y especificamos como eje X el día de la semana y como eje Y el número de la semana. Como podéis observar en la variable de la semana (&lt;code&gt;-week&lt;/code&gt;) cambio el signo con el objetivo de que el primer día de cada mes este en la primera fila. Con &lt;code&gt;geom_text()&lt;/code&gt; añadimos el número de cada día con su color según lo que definimos anteriormente. En &lt;code&gt;guides&lt;/code&gt; hacemos los ajustes de la barra de color y en &lt;code&gt;scale_fill/colour_manual()&lt;/code&gt; definimos los colores correspondientes. Un importante paso lo encontramos en &lt;code&gt;facet_wrap()&lt;/code&gt; donde especificamos las facetas de cada mes. Las facetas deben tener escalas libres y lo óptimo sería una distribución de 4x3 facetas. Es posible modificar la posición del número de día a otra posición usando los argumentos &lt;code&gt;nudge_*&lt;/code&gt; en &lt;code&gt;geom_text()&lt;/code&gt; (por ej. esquina abajo derecha: nudge_x = .35, nudge_y = -.25).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;    ggplot(dat_pr, 
           aes(weekday, -week, fill = pcat)) +
      geom_tile(colour = &amp;quot;white&amp;quot;, size = .4)  + 
      geom_text(aes(label = day, colour = text_col), size = 2.5) +
      guides(fill = guide_colorsteps(barwidth = 25, 
                                     barheight = .4,
                                    title.position = &amp;quot;top&amp;quot;)) +
       scale_fill_manual(values = c(&amp;quot;white&amp;quot;, col_p(13)),
                         na.value = &amp;quot;grey90&amp;quot;, drop = FALSE) +
       scale_colour_manual(values = c(&amp;quot;black&amp;quot;, &amp;quot;white&amp;quot;), guide = FALSE) + 
       facet_wrap(~ month, nrow = 4, ncol = 3, scales = &amp;quot;free&amp;quot;) +
       labs(title = &amp;quot;¿Cómo está siendo el 2020 en Santiago?&amp;quot;, 
             subtitle = &amp;quot;Precipitación&amp;quot;,
             caption = &amp;quot;Datos: Meteogalicia&amp;quot;,
             fill = &amp;quot;mm&amp;quot;) +
       theme_calendar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/un-heatmap-como-calendario/index.es_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Para exportar haremos uso del paquete &lt;a href=&#34;https://github.com/r-lib/ragg&#34;&gt;&lt;code&gt;ragg&lt;/code&gt;&lt;/a&gt;, que proporciona mayor rendimiento y mayor calidad que los dispositivos ráster estándar proporcionados por grDevices.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggsave(&amp;quot;pr_calendar.png&amp;quot;, height = 10, width = 8, device = agg_png())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En otros calendarios he añadido la dirección predominante del viento de cada día como flecha usando &lt;code&gt;geom_arrow()&lt;/code&gt; del paquete &lt;code&gt;metR&lt;/code&gt; (se puede ver en la mencionada aplicación).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Animación climática de la temperatura máxima</title>
      <link>https://dominicroye.github.io/es/2020/animacion-climatica-de-la-temperatura-maxima/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/2020/animacion-climatica-de-la-temperatura-maxima/</guid>
      <description>
&lt;script src=&#34;https://dominicroye.github.io/es/2020/animacion-climatica-de-la-temperatura-maxima/index.es_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;En el campo de la visualización de datos, la animación de datos espaciales en su dimensión temporal lleva a mostrar cambios y patrones fascinantes y muy visuales. A raíz de una de las últimas publicaciones que he realizado en los RRSS me pidieron que hiciera un post acerca de cómo lo creé. Pues bien, aquí vamos para empezar con datos de la España peninsular. Podéis encontrar más animaciones en la sección de &lt;a href=&#34;https://dominicroye.github.io/es/graphs/climate/&#34;&gt;gráficos&lt;/a&gt; de este mismo blog.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I couldn&amp;#39;t resist to make another animation. Smoothed daily maximum temperature throughout the year in Europe. &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ggplot2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ggplot2&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/dataviz?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#dataviz&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/climate?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#climate&lt;/a&gt; &lt;a href=&#34;https://t.co/ZC9L0vh3vR&#34;&gt;pic.twitter.com/ZC9L0vh3vR&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dr. Dominic Royé @dr_xeo@mstdn.social (@dr_xeo) &lt;a href=&#34;https://twitter.com/dr_xeo/status/1259059168817930240?ref_src=twsrc%5Etfw&#34;&gt;May 9, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;div id=&#34;paquetes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Paquetes&lt;/h2&gt;
&lt;p&gt;En este post usaremos los siguientes paquetes:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;13%&#34; /&gt;
&lt;col width=&#34;86%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Paquete&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conjunto de paquetes (visualización y manipulación de datos): ggplot2, dplyr, purrr,etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;rnaturalearth&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Mapas vectoriales del mundo ‘Natural Earth’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;lubridate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fácil manipulación de fechas y tiempos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sf&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Simple Feature: importar, exportar y manipular datos vectoriales&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;raster&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Importar, exportar y manipular raster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ggthemes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Estilos para ggplot2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;gifski&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Crear gifs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;showtext&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Usar fuentes más fácilmente en gráficos R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sysfonts&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cargar fuentes del sistema y fuentes de Google&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# instalamos los paquetes si hace falta
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;rnaturalearth&amp;quot;)) install.packages(&amp;quot;rnaturalearth&amp;quot;)
if(!require(&amp;quot;lubridate&amp;quot;)) install.packages(&amp;quot;lubridate&amp;quot;)
if(!require(&amp;quot;sf&amp;quot;)) install.packages(&amp;quot;sf&amp;quot;)
if(!require(&amp;quot;ggthemes&amp;quot;)) install.packages(&amp;quot;ggthemes&amp;quot;)
if(!require(&amp;quot;gifski&amp;quot;)) install.packages(&amp;quot;gifski&amp;quot;)
if(!require(&amp;quot;raster&amp;quot;)) install.packages(&amp;quot;raster&amp;quot;)
if(!require(&amp;quot;sysfonts&amp;quot;)) install.packages(&amp;quot;sysfonts&amp;quot;)
if(!require(&amp;quot;showtext&amp;quot;)) install.packages(&amp;quot;showtext&amp;quot;)

# paquetes
library(raster)
library(tidyverse)
library(lubridate)
library(ggthemes)
library(sf)
library(rnaturalearth)
library(extrafont)
library(showtext)
library(RColorBrewer)
library(gifski)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para aquellos con menos experiencia con &lt;code&gt;tidyverse&lt;/code&gt;, recomiendo la breve introducción en este blog &lt;a href=&#34;https://dominicroye.github.io/es/2020/una-muy-breve-introducci%C3%B3n-a-tidyverse/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preparación&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Preparación&lt;/h1&gt;
&lt;div id=&#34;datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Datos&lt;/h2&gt;
&lt;p&gt;Descargamos los datos STEAD de la temperatura máxima (&lt;em&gt;tmax_pen.nc&lt;/em&gt;) en formato &lt;em&gt;netCDF&lt;/em&gt; desde el repositario del CSIC &lt;a href=&#34;https://digital.csic.es/handle/10261/177655&#34;&gt;aquí&lt;/a&gt; (el tamaño de los datos es de 2 GB). Se trata de un conjunto de datos con una resolución espacial de 5 km y comprenden las temperaturas máximas diarias desde 1901 a 2014. En la climatología y la meteorología, un formato de uso muy extendido es el de las bases de datos &lt;em&gt;netCDF&lt;/em&gt;, que permiten obtener una estructura multidimensional e intercambiar los datos de forma independiente al sistema operativo empleado. Se trata de un formato espacio-temporal con una cuadrícula regular o irregular. La estructura multidimensional en forma de matriz (&lt;em&gt;array&lt;/em&gt;) permite usar no sólo datos espacio-temporales sino también multivariables. En nuestros datos tendremos un cubo de tres dimensiones: longitud, latitud y tiempo de la temperatura máxima.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://dominicroye.github.io/img/3d_ncdf.es.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Royé 2015. Sémata: Ciencias Sociais e Humanidades 27:11-37&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;importar-los-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Importar los datos&lt;/h2&gt;
&lt;p&gt;El formato &lt;em&gt;netCDF&lt;/em&gt; con extensión &lt;em&gt;.nc&lt;/em&gt; lo podemos importar vía dos paquetes principales: 1) &lt;code&gt;ncdf4&lt;/code&gt; y 2) &lt;code&gt;raster&lt;/code&gt;. Aunque el paquete &lt;code&gt;raster&lt;/code&gt; realmente lo que hace es usar el primer paquete para importar los datos. En este post usaremos el paquete &lt;code&gt;raster&lt;/code&gt; dado que es algo más fácil, con algunas funciones muy útiles y más universales para todo tipo de formato &lt;em&gt;raster&lt;/em&gt;. Las funciones principales de importación son: &lt;code&gt;raster()&lt;/code&gt;, &lt;code&gt;stack()&lt;/code&gt; y &lt;code&gt;brick()&lt;/code&gt;. La primera función sólo permite importar una única capa, en cambio, las últimas dos funciones se emplean para datos multidimensionales. En nuestro caso sólo tenemos una variable, por tanto no sería necesario hacer uso del argumento &lt;code&gt;varname&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# importamos los datos ncdf
tmx &amp;lt;- brick(&amp;quot;tmax_pen.nc&amp;quot;, varname = &amp;quot;tx&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required namespace: ncdf4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tmx # metadatos&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## class      : RasterBrick 
## dimensions : 190, 230, 43700, 41638  (nrow, ncol, ncell, nlayers)
## resolution : 0.0585, 0.045  (x, y)
## extent     : -9.701833, 3.753167, 35.64247, 44.19247  (xmin, xmax, ymin, ymax)
## crs        : +proj=longlat +datum=WGS84 +no_defs 
## source     : tmax_pen.nc 
## names      : X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, ... 
## Time (days since 1901-01-01): 1, 41638 (min, max)
## varname    : tx&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En la estructura del objeto &lt;code&gt;RasterBrick&lt;/code&gt; vemos todos los metadatos necesarios: desde la resolución, las dimensiones o el tipo de proyección, hasta el nombre de la variable. Además nos indica que únicamente apunta a los datos (&lt;em&gt;source&lt;/em&gt;) y no los ha importado a la memoria RAM lo que facilita el trabajo con grandes conjuntos de datos.&lt;/p&gt;
&lt;p&gt;Para acceder a cualquier capa hacemos uso de &lt;code&gt;[[ ]]&lt;/code&gt; con el índice correspondiente. Así podemos plotear fácilmente cualquier día de los 41.638 días de los que disponemos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mapear cualquier día
plot(tmx[[200]], col = rev(heat.colors(7)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/animacion-climatica-de-la-temperatura-maxima/index.es_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;calcular-el-promedio-de-la-temperatura&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Calcular el promedio de la temperatura&lt;/h2&gt;
&lt;p&gt;En este paso el objetivo es calcular el promedio de la temperatura para cada día del año. Por eso, lo primero que hacemos es crear un vector, indicando el día del año para toda la serie temporal. En el paquete &lt;code&gt;raster&lt;/code&gt; disponemos de la función &lt;code&gt;stackApply()&lt;/code&gt; que permite aplicar una función sobre grupos de capas, o mejor dicho, índices. Dado que nuestro conjunto de datos es grande, incluimos esta función en las funciones de paralelización.&lt;/p&gt;
&lt;p&gt;Empezamos con las funciones &lt;code&gt;beginClusterr()&lt;/code&gt; y &lt;code&gt;endCluster()&lt;/code&gt; que inician y finalizan la paralelización. En la primera debemos indicar el número de núcleos que queremos usar. En este caso uso 4 de 7 posibles núcleos, no obstante, se debe cambiar el número según las características de cada CPU, siendo la norma n-1. Entonces, la función &lt;code&gt;clusterR&lt;/code&gt; permite ejecutar funciones en paralelo con múltiples núcleos. El primer argumento corresponde al objeto raster, el segundo a la función empleada, y en forma de lista pasamos los argumentos de la función &lt;code&gt;stackApply()&lt;/code&gt;, los índices que crean los grupos y la función usada para cada uno de los grupos. Si añadimos el argumento &lt;code&gt;progress = &#39;text&#39;&lt;/code&gt; se muestra una barra de progreso del cálculo.&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Para el conjunto de datos de EEUU hice un preprocesamiento, el cálculo del promedio en la nube a través de &lt;a href=&#34;https://earthengine.google.com/&#34;&gt;Google Earth Engine&lt;/a&gt; lo que hace todo el proceso más rápido. En el caso de Australia, el preprocesamiento fue más complejo ya que el conjunto de datos esta en archivos netCDF para cada año.
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# convertimos las fechas entre 1901 y 2014 a días del año
time_days &amp;lt;- yday(seq(as_date(&amp;quot;1901-01-01&amp;quot;), as_date(&amp;quot;2014-12-31&amp;quot;), &amp;quot;day&amp;quot;))

# calculamos el promedio 
beginCluster(4)
tmx_mean &amp;lt;- clusterR(tmx, stackApply, args = list(indices = time_days, fun = mean))
endCluster()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;suavizar-la-variabilidad-de-las-temperaturas&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Suavizar la variabilidad de las temperaturas&lt;/h2&gt;
&lt;p&gt;Antes de pasar a suavizar las series temporales de nuestro &lt;em&gt;RasterBrick&lt;/em&gt;, un ejemplo del por qué lo hacemos. Extraemos un píxel de nuestro conjunto de datos en las coordenadas -1º de longitud y 40º de latitud usando la función &lt;code&gt;extract()&lt;/code&gt;. Dado que la función con el mismo nombre aparece en varios paquetes, debemos cambiar a la forma &lt;code&gt;nombre_paquete::nombre_función&lt;/code&gt;. El resultado es una matriz con una fila correspondiente al píxel y 366 columnas de los días del año. El siguiente paso es la creación de un &lt;em&gt;data.frame&lt;/em&gt; con una fecha &lt;em&gt;dummy&lt;/em&gt; y la temperatura máxima extraída.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# extraemos un píxel
point_ts &amp;lt;- raster::extract(tmx_mean, matrix(c(-1, 40), nrow = 1))
dim(point_ts) # dimensiones &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]   1 366&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# creamos un data.frame
df &amp;lt;- data.frame(date = seq(as_date(&amp;quot;2000-01-01&amp;quot;), as_date(&amp;quot;2000-12-31&amp;quot;), &amp;quot;day&amp;quot;),
                 tmx = point_ts[1,])

# visualizamos la temperatura máxima 
ggplot(df, 
       aes(date, tmx)) + 
     geom_line() + 
  scale_x_date(date_breaks = &amp;quot;month&amp;quot;, date_labels = &amp;quot;%b&amp;quot;) +
  scale_y_continuous(breaks = seq(5, 28, 2)) +
  labs(y = &amp;quot;Temperatura máxima&amp;quot;, x = &amp;quot;&amp;quot;, colour =  &amp;quot;&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/animacion-climatica-de-la-temperatura-maxima/index.es_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;El gráfico muestra claramente la todavía existente variabilidad, lo que haría fluctuar bastante una animación. Por eso, creamos una función de suavizado basado en un ajuste de regresión polinomial local (LOESS), más detalles los encontráis en la ayuda de la función &lt;code&gt;loess()&lt;/code&gt;. El argumento más importante es &lt;code&gt;span&lt;/code&gt; que determina el grado de suavizado de la función, cuanto más pequeño el valor menos suave será la curva. El mejor resultado me ha dado un valor del 0,5.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;daily_smooth &amp;lt;- function(x, span = 0.5){
  
  if(all(is.na(x))){
   
    return(x) 
   
  } else {
    
  df &amp;lt;- data.frame(yd = 1:366, ta = x)
  m &amp;lt;- loess(ta ~ yd, span = span, data = df)
  est &amp;lt;- predict(m, 1:366)

  return(est)
  
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Aplicamos nuestra nueva función de suavizado a la serie temporal extraída y hacemos algunos cambios para poder visualizar la diferencia entre los datos originales y suavizados.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# suavizamos la temperatura
df &amp;lt;- mutate(df, tmx_smoothed = daily_smooth(tmx)) %&amp;gt;% 
          pivot_longer(2:3, names_to = &amp;quot;var&amp;quot;, values_to = &amp;quot;temp&amp;quot;)

# visualizamos la diferencia 
ggplot(df, 
       aes(date, temp, 
           colour = var)) + 
     geom_line() + 
  scale_x_date(date_breaks = &amp;quot;month&amp;quot;, date_labels = &amp;quot;%b&amp;quot;) +
  scale_y_continuous(breaks = seq(5, 28, 2)) +
  scale_colour_manual(values = c(&amp;quot;#f4a582&amp;quot;, &amp;quot;#b2182b&amp;quot;)) +
  labs(y = &amp;quot;Temperatura máxima&amp;quot;, x = &amp;quot;&amp;quot;, colour =  &amp;quot;&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/animacion-climatica-de-la-temperatura-maxima/index.es_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Como vemos en el gráfico la curva suavizada sigue muy bien la curva original. En el siguiente paso empleamos nuestra función sobre el &lt;em&gt;RasterBrick&lt;/em&gt; usando la función &lt;code&gt;calc()&lt;/code&gt;. La función devuelve tantas capas como las que devuelve la función empleada a cada de las series temporales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# suavizar el RasterBrick
tmx_smooth &amp;lt;- calc(tmx_mean, fun = daily_smooth)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualización&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Visualización&lt;/h1&gt;
&lt;div id=&#34;preparación-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparación&lt;/h2&gt;
&lt;p&gt;Para visualizar las temperaturas máximas durante todo el año, primero, convertimos el &lt;em&gt;RasterBrick&lt;/em&gt; a un &lt;em&gt;data.frame&lt;/em&gt;, incluyendo longitud y latitud, pero eliminando todas las series temporales sin valores (&lt;code&gt;NA&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# convertir a data.frame
tmx_mat &amp;lt;- as.data.frame(tmx_smooth, xy = TRUE, na.rm = TRUE)

# renombrar las columnas
tmx_mat &amp;lt;- set_names(tmx_mat, c(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;, str_c(&amp;quot;D&amp;quot;, 1:366)))
str(tmx_mat[, 1:10])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    20676 obs. of  10 variables:
##  $ lon: num  -8.03 -7.98 -7.92 -7.86 -7.8 ...
##  $ lat: num  43.8 43.8 43.8 43.8 43.8 ...
##  $ D1 : num  10.5 10.3 10 10.9 11.5 ...
##  $ D2 : num  10.5 10.3 10.1 10.9 11.5 ...
##  $ D3 : num  10.5 10.3 10.1 10.9 11.5 ...
##  $ D4 : num  10.6 10.4 10.1 10.9 11.5 ...
##  $ D5 : num  10.6 10.4 10.1 11 11.6 ...
##  $ D6 : num  10.6 10.4 10.1 11 11.6 ...
##  $ D7 : num  10.6 10.4 10.2 11 11.6 ...
##  $ D8 : num  10.6 10.4 10.2 11 11.6 ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Segundo, importamos los límites administrativos con la función &lt;code&gt;ne_countries()&lt;/code&gt; del paquete &lt;code&gt;rnaturalearth&lt;/code&gt; limitando la extensión a la región de la Península Ibérica, el sur de Francia y el norte de África.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# importamos los límites globales
map &amp;lt;- ne_countries(scale = 10, returnclass = &amp;quot;sf&amp;quot;) %&amp;gt;% st_cast(&amp;quot;MULTILINESTRING&amp;quot;)

# limitamos la extensión
map &amp;lt;- st_crop(map, xmin = -10, xmax = 5, ymin = 35, ymax = 44) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: attribute variables are assumed to be spatially constant throughout all
## geometries&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mapa de los límites
plot(map)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: plotting the first 9 out of 94 attributes; use max.plot = 94 to plot
## all&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/animacion-climatica-de-la-temperatura-maxima/index.es_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Tercero, creamos un vector con etiquetas del día del año para incluirlas en la animación. Además, definimos los cortes de la temperatura máxima, adaptados a la distribución de nuestros datos, para obtener una categorización con un total de 20 clases.&lt;/p&gt;
&lt;p&gt;Cuarto, aplicamos la función &lt;code&gt;cut()&lt;/code&gt; con los cortes a todas las columnas con las temperaturas de cada día del año.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# etiquetas de los días del año
lab &amp;lt;- as_date(0:365, &amp;quot;2000-01-01&amp;quot;) %&amp;gt;% format(&amp;quot;%d %B&amp;quot;)

# cortes para la temperatura
ct &amp;lt;- c(-5, 0, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 40, 45)

# datos categorizados con los cortes fijados
tmx_mat_cat &amp;lt;- mutate_at(tmx_mat, 3:368, cut, breaks = ct)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quinto, descargamos la fuente Montserrat y definimos los colores correspondientes a las clases creadas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# descarga de la fuente
font_add_google(&amp;quot;Montserrat&amp;quot;, &amp;quot;Montserrat&amp;quot;)

# uso de showtext con DPI 300
showtext_opts(dpi = 300)
showtext_auto()

# definimos una rampa de colores
col_spec &amp;lt;- colorRampPalette(rev(brewer.pal(11, &amp;quot;Spectral&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;mapa-estático&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mapa estático&lt;/h2&gt;
&lt;p&gt;En esta primera visualización hacemos un mapa del 29 de mayo (día 150). No voy a explicar todos los detalles de la construcción con &lt;code&gt;ggplot2&lt;/code&gt;, no obstante, es importante destacar que hago uso de la función &lt;code&gt;aes_string()&lt;/code&gt; en lugar de &lt;code&gt;aes()&lt;/code&gt; para poder usar los nombres de las columnas en formato de carácter. Con la función &lt;code&gt;geom_raster()&lt;/code&gt; añadimos los datos en rejilla de temperatura como primera capa del gráfico y con &lt;code&gt;geom_sf()&lt;/code&gt; los límites de clase &lt;code&gt;sf&lt;/code&gt;. Por último, la función &lt;code&gt;guide_colorsteps()&lt;/code&gt; permite crear una bonita leyenda basada en las clases creadas por la función &lt;code&gt;cut()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(tmx_mat_cat) + 
         geom_raster(aes_string(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;, fill = &amp;quot;D150&amp;quot;)) +
         geom_sf(data = map,
                 colour = &amp;quot;grey50&amp;quot;, size = 0.2) +
  coord_sf(expand = FALSE) +
  scale_fill_manual(values = col_spec(20), drop = FALSE) +
  guides(fill = guide_colorsteps(barwidth = 30, 
                                 barheight = 0.5,
                                 title.position = &amp;quot;right&amp;quot;,
                                 title.vjust = .1)) +
   theme_void() +
   theme(legend.position = &amp;quot;top&amp;quot;,
      legend.justification = 1,
      plot.caption = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  margin = margin(b = 5, t = 10, unit = &amp;quot;pt&amp;quot;)),                
      plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                size = 16, face = &amp;quot;bold&amp;quot;, 
                                margin = margin(b = 2, t = 5, unit = &amp;quot;pt&amp;quot;)),
     legend.text = element_text(family = &amp;quot;Montserrat&amp;quot;),
     plot.subtitle = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  size = 13, 
                                  margin = margin(b = 10, t = 5, unit = &amp;quot;pt&amp;quot;))) +
   labs(title = &amp;quot;Promedio de la temperatura máxima durante el año en España&amp;quot;, 
     subtitle = lab[150], 
     caption = &amp;quot;Período de referencia 1901-2014. Datos: STEAD&amp;quot;,
     fill = &amp;quot;ºC&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/img/fig_1.es.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animación-de-todo-el-año&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Animación de todo el año&lt;/h2&gt;
&lt;p&gt;La animación final consiste en crear un gif a partir de todas las imágenes de los 366 días, en principio, se podría usar el paquete &lt;code&gt;gganimate&lt;/code&gt;, pero en mi experiencia es más lento, dado que requiere un &lt;code&gt;data.frame&lt;/code&gt; en formato largo. En este ejemplo una tabla larga tendría más de siete millones de filas, por eso, lo que hacemos es usar un bucle sobre las columnas y unir todas las imágenes creadas con el paquete &lt;code&gt;gifski&lt;/code&gt; que también usa &lt;code&gt;gganimate&lt;/code&gt; para la reproducción en formato gif.&lt;/p&gt;
&lt;p&gt;Antes del bucle creamos un vector con los pasos temporales o nombres de las columnas y otro vector con el nombre de las imágenes, incluida el nombre de la carpeta. Con el objetivo de obtener una lista de imágenes ordenadas por su número debemos mantener tres cifras rellenando las posiciones a la izquierda con ceros.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;time_step &amp;lt;- str_c(&amp;quot;D&amp;quot;, 1:366)

files &amp;lt;- str_c(&amp;quot;./ta_anima/D&amp;quot;, str_pad(1:366, 3, &amp;quot;left&amp;quot;, &amp;quot;0&amp;quot;), &amp;quot;.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Por último, incluimos la construcción anterior del gráfico en un bucle &lt;em&gt;for&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for(i in 1:366){

 ggplot(tmx_mat_cat) + 
         geom_raster(aes_string(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;, fill = time_step[i])) +
         geom_sf(data = map,
                 colour = &amp;quot;grey50&amp;quot;, size = 0.2) +
  coord_sf(expand = FALSE) +
  scale_fill_manual(values = col_spec(20), drop = FALSE) +
  guides(fill = guide_colorsteps(barwidth = 30, 
                                 barheight = 0.5,
                                 title.position = &amp;quot;right&amp;quot;,
                                 title.vjust = .1)) +
   theme_void() +
   theme(legend.position = &amp;quot;top&amp;quot;,
      legend.justification = 1,
      plot.caption = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  margin = margin(b = 5, t = 10, unit = &amp;quot;pt&amp;quot;)),                
      plot.title = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                size = 16, face = &amp;quot;bold&amp;quot;, 
                                margin = margin(b = 2, t = 5, unit = &amp;quot;pt&amp;quot;)),
     legend.text = element_text(family = &amp;quot;Montserrat&amp;quot;),
     plot.subtitle = element_text(family = &amp;quot;Montserrat&amp;quot;, 
                                  size = 13, 
                                  margin = margin(b = 10, t = 5, unit = &amp;quot;pt&amp;quot;))) +
   labs(title = &amp;quot;Promedio de la temperatura máxima durante el año en España&amp;quot;, 
     subtitle = lab[i], 
     caption = &amp;quot;Período de referencia 1901-2014. Datos: STEAD&amp;quot;,
     fill = &amp;quot;ºC&amp;quot;)
  
  ggsave(files[i], width = 8.28, height = 7.33, type = &amp;quot;cairo&amp;quot;)
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Después de haber creado imágenes para cada día del año, únicamente nos queda por crear el gif.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gifski(files, &amp;quot;tmx_spain.gif&amp;quot;, width = 800, height = 700, loop = FALSE, delay = 0.05)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/img/tmx_spain.es.gif&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Visualizar anomalías climáticas</title>
      <link>https://dominicroye.github.io/es/2020/visualizar-anomalias-climaticas/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/2020/visualizar-anomalias-climaticas/</guid>
      <description>
&lt;script src=&#34;https://dominicroye.github.io/es/2020/visualizar-anomalias-climaticas/index.es_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Cuando visualizamos anomalías de precipitación y temperatura, simplemente usamos series temporales en un gráfico de barras indicando con color rojo y azul valores negativos y positivos. No obstante, para tener una imagen global necesitamos ambas anomalías en un único gráfico. Así podríamos responder directamente a la pregunta de si una estación del año o un mes en concreto fue seco-cálido o húmedo-frío, e incluso comparar estas anomalías en el contexto de años anteriores.&lt;/p&gt;
&lt;div id=&#34;paquetes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Paquetes&lt;/h2&gt;
&lt;p&gt;En este post usaremos los siguientes paquetes:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;col width=&#34;89%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Paquete&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conjunto de paquetes (visualización y manipulación de datos): ggplot2, dplyr, purrr,etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;lubridate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fácil manipulación de fechas y tiempos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ggrepel&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Etiquetas sin superposición con ggplot2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#instalamos los paquetes si hace falta
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;ggrepel&amp;quot;)) install.packages(&amp;quot;ggrepel&amp;quot;)
if(!require(&amp;quot;lubridate&amp;quot;)) install.packages(&amp;quot;lubridate&amp;quot;)

#paquetes
library(tidyverse)
library(lubridate)
library(ggrepel)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;preparar-los-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparar los datos&lt;/h2&gt;
&lt;p&gt;Primero importamos la precipitación y temperatura diaria de la estación meteorológica seleccionada (&lt;a href=&#34;https://dominicroye.github.io/files/meteo_tenerife.csv&#34;&gt;descarga&lt;/a&gt;). Usaremos los datos de Tenerife Sur (España) [1981-2020] accesible a través de &lt;a href=&#34;https://opendata.aemet.es/&#34;&gt;Open Data AEMET&lt;/a&gt;. En R existe un paquete &lt;a href=&#34;https://vegmod.ctfc.cat/software/meteoland/&#34;&gt;&lt;code&gt;meteoland&lt;/code&gt;&lt;/a&gt; que facilita la descarga con funciones específicas para acceder a los datos de AEMET, Meteogalicia y Meteocat.&lt;/p&gt;
&lt;div id=&#34;paso-1-importar-los-datos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Paso 1: importar los datos&lt;/h3&gt;
&lt;p&gt;Importamos los datos en formato &lt;em&gt;csv&lt;/em&gt;, siendo la primera columna la fecha, la segunda la precipitación (pr) y la última la temperatura media diaria (ta).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- read_csv(&amp;quot;meteo_tenerife.csv&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 14303 Columns: 3
## -- Column specification --------------------------------------------------------
## Delimiter: &amp;quot;,&amp;quot;
## dbl  (2): pr, ta
## date (1): date
## 
## i Use `spec()` to retrieve the full column specification for this data.
## i Specify the column types or set `show_col_types = FALSE` to quiet this message.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 14,303 x 3
##    date          pr    ta
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 1981-01-02   0    17.6
##  2 1981-01-03   0    16.8
##  3 1981-01-04   0    17.4
##  4 1981-01-05   0    17.6
##  5 1981-01-06   0    17  
##  6 1981-01-07   0    17.6
##  7 1981-01-08   0    18.6
##  8 1981-01-09   0    19.8
##  9 1981-01-10   0    21.5
## 10 1981-01-11   3.8  17.6
## # ... with 14,293 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;paso-2-preparar-los-datos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Paso 2: preparar los datos&lt;/h3&gt;
&lt;p&gt;En el segundo paso preparamos los datos para calcular las anomalías. Para ello, creamos tres nuevas columnas: el mes, el año y la estación del año. Como nuestro objetivo son las anomalías invernales no podemos usar el año natural, ya que el invierno comprende el mes de diciembre de un año y los meses de enero y febrero del siguiente. La función personalizada &lt;code&gt;meteo_yr()&lt;/code&gt; extrae el año de una fecha indicando el mes inicial. El concepto es similar al año hidrológico en el que se empieza en octubre.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meteo_yr &amp;lt;- function(dates, start_month = NULL) {
  # convertir a POSIXlt
  dates.posix &amp;lt;- as.POSIXlt(dates)
  # la compensación
  offset &amp;lt;- ifelse(dates.posix$mon &amp;gt;= start_month - 1, 1, 0)
  # nuevo año
  adj.year = dates.posix$year + 1900 + offset
  return(adj.year)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usaremos las funciones de la colección de paquetes &lt;code&gt;tidyverse&lt;/code&gt; (&lt;a href=&#34;https://www.tidyverse.org/&#34; class=&#34;uri&#34;&gt;https://www.tidyverse.org/&lt;/a&gt;). La función &lt;code&gt;mutate()&lt;/code&gt; ayuda a añadir nuevas columnas o a cambiar otras existentes. Para definir las estaciones del año, empleamos la función &lt;code&gt;case_when()&lt;/code&gt; del paquete &lt;code&gt;dplyr&lt;/code&gt; lo que tiene muchas ventajas en comparación con una cadena de &lt;code&gt;ifelse()&lt;/code&gt;. En la función &lt;code&gt;case_when()&lt;/code&gt; usamos fórmulas en dos tiempos, por un lado la condición y por otro la acción cuando se cumpla esa condición. En R una fórmula de dos tiempos o dos lados se consistuye con el operador &lt;code&gt;~&lt;/code&gt;. El operador binario &lt;code&gt;%in%&lt;/code&gt; nos permite filtrar varios valores en un conjunto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- mutate(data, 
               winter_yr = meteo_yr(date, 12),
               month = month(date), 
               season = case_when(month %in% c(12,1:2) ~ &amp;quot;Winter&amp;quot;,
                                  month %in% 3:5 ~ &amp;quot;Spring&amp;quot;,
                                  month %in% 6:8 ~ &amp;quot;Summer&amp;quot;,
                                  month %in% 9:11 ~ &amp;quot;Autum&amp;quot;))

data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 14,303 x 6
##    date          pr    ta winter_yr month season
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; 
##  1 1981-01-02   0    17.6      1981     1 Winter
##  2 1981-01-03   0    16.8      1981     1 Winter
##  3 1981-01-04   0    17.4      1981     1 Winter
##  4 1981-01-05   0    17.6      1981     1 Winter
##  5 1981-01-06   0    17        1981     1 Winter
##  6 1981-01-07   0    17.6      1981     1 Winter
##  7 1981-01-08   0    18.6      1981     1 Winter
##  8 1981-01-09   0    19.8      1981     1 Winter
##  9 1981-01-10   0    21.5      1981     1 Winter
## 10 1981-01-11   3.8  17.6      1981     1 Winter
## # ... with 14,293 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;paso-3-estimar-las-anomalías-invernales&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Paso 3: estimar las anomalías invernales&lt;/h3&gt;
&lt;p&gt;En el siguiente paso creamos un subset del invierno. Después agrupamos por el año meteorológico y calculamos la suma y el promedio para la precipitación y la temperatura, respectivamente. Para facilitar el trabajo el paquete &lt;code&gt;magrittr&lt;/code&gt; introduce el operador llamado &lt;em&gt;pipe&lt;/em&gt; en la forma &lt;code&gt;%&amp;gt;%&lt;/code&gt; con el objetivo de combinar varias funciones sin la necesidad de asignar el resultado a un nuevo objeto. El operador &lt;em&gt;pipe&lt;/em&gt; pasa la salida de una función aplicada al primer argumento de la siguiente función. Esta forma de combinar funciones permite encadenar varios pasos de forma simultánea. Se debe entender y pronunciar el &lt;code&gt;%&amp;gt;%&lt;/code&gt; como &lt;em&gt;“luego”&lt;/em&gt; (&lt;em&gt;then&lt;/em&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_inv &amp;lt;- filter(data, 
                   season == &amp;quot;Winter&amp;quot;) %&amp;gt;% 
              group_by(winter_yr) %&amp;gt;%
                  summarise(pr = sum(pr, na.rm = TRUE),
                            ta = mean(ta, na.rm = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sólo nos quedan por calcular las anomalías de precipitación y temperatura. Las columnas &lt;code&gt;pr_mean&lt;/code&gt; y &lt;code&gt;ta_mean&lt;/code&gt; contendrán el promedio climatico, la referencia de las anomalías respecto al periodo normal 1981-2010. Por eso debemos filtrar los valores al periodo antes de 2010, lo que haremos de la forma habitual de filtrado de vectores en R. Una vez que tenemos las referencias estimamos las anomalías &lt;code&gt;pr_anom&lt;/code&gt; y &lt;code&gt;ta_anom&lt;/code&gt;. Para facilitar la interpretación, en el caso de la precipitación lo expresamos en porcentaje, pero poniendo el promedio en 0% en lugar del 100%.&lt;/p&gt;
&lt;p&gt;Además, añadimmos tres columnas con información necesaria en la creación del gráfico. 1) &lt;code&gt;labyr&lt;/code&gt; contiene el año de cada anomalía siempre y cuando haya sido mayor/menor del -+10% o -+0,5ºC, respectivamente (lo hago para que no haya demasiadas etiquetas), 2) &lt;code&gt;symb_point&lt;/code&gt; una variable dummy para poder crear un simbolo diferencial entre los casos de (1), y 3) &lt;code&gt;lab_font&lt;/code&gt; destacaremos en negrita el año 2020.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_inv &amp;lt;-  mutate(data_inv, pr_mean = mean(pr[winter_yr &amp;lt;= 2010]), 
                              ta_mean = mean(ta[winter_yr &amp;lt;= 2010]),
                              pr_anom = (pr*100/pr_mean)-100, 
                              ta_anom = ta-ta_mean,
                              
                              labyr = case_when(pr_anom &amp;lt; -10 &amp;amp; ta_anom &amp;lt; -.5 ~ winter_yr,
                                                pr_anom &amp;lt; -10 &amp;amp; ta_anom &amp;gt; .5 ~ winter_yr,
                                                pr_anom &amp;gt; 10 &amp;amp; ta_anom &amp;lt; -.5 ~ winter_yr,
                                                pr_anom &amp;gt; 10 &amp;amp; ta_anom &amp;gt; .5 ~ winter_yr),
                              symb_point = ifelse(!is.na(labyr), &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;),
                              lab_font = ifelse(labyr == 2020, &amp;quot;bold&amp;quot;, &amp;quot;plain&amp;quot;)
                    )&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;crear-el-gráfico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Crear el gráfico&lt;/h2&gt;
&lt;p&gt;El gráfico lo construiremos añadiendo capa por capa los diferentes elementos: 1) el fondo con las diferentes cuadrículas (Seco-Cálido, Seco-Frío, etc.) 2) los puntos y etiquetas, y 3) los últimos ajustes de estilo.&lt;/p&gt;
&lt;div id=&#34;parte-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 1&lt;/h3&gt;
&lt;p&gt;La idea es que tengamos los puntos con anomalías seco-cálido en el cuadrante I (arriba-derecha) y los de húmedo-frío en el cuadrante III (abajo-izquierda). Por eso, debemos invertir el signo en las anomalías de precipitación. Después creamos un &lt;code&gt;data.frame&lt;/code&gt; con las posiciones de las etiquetas de los cuatro cuadrantes. Para las posiciones en &lt;em&gt;x&lt;/em&gt; y &lt;em&gt;y&lt;/em&gt; se usan &lt;code&gt;Inf&lt;/code&gt; y &lt;code&gt;-Inf&lt;/code&gt; lo que equivale al punto máximo dentro del &lt;em&gt;panel&lt;/em&gt;. No obstante, es necesario ajustar la posición hacia los puntos extremos dentro del marco gráfico con los argumentos conocidos de &lt;code&gt;ggplot2&lt;/code&gt;: &lt;em&gt;hjust&lt;/em&gt; y &lt;em&gt;vjust&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_inv_p &amp;lt;- mutate(data_inv, pr_anom = pr_anom * -1)

bglab &amp;lt;- data.frame(x = c(-Inf, Inf, -Inf, Inf), 
                    y = c(Inf, Inf, -Inf, -Inf),
                    hjust = c(1, 1, 0, 0), 
                    vjust = c(1, 0, 1, 0),
                    lab = c(&amp;quot;Húmedo-Cálido&amp;quot;, &amp;quot;Seco-Cálido&amp;quot;,
                              &amp;quot;Húmedo-Frío&amp;quot;, &amp;quot;Seco-Frío&amp;quot;))

  
bglab&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      x    y hjust vjust           lab
## 1 -Inf  Inf     1     1 Húmedo-Cálido
## 2  Inf  Inf     1     0   Seco-Cálido
## 3 -Inf -Inf     0     1   Húmedo-Frío
## 4  Inf -Inf     0     0     Seco-Frío&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;parte-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 2&lt;/h3&gt;
&lt;p&gt;En la segunda podemos empezar a construir el gráfico añadiendo todos los elementos gráficos. En esta parte creamos el fondo con los diferentes colores de cada cuadrante. La función &lt;code&gt;annotate()&lt;/code&gt; permite añadir capas de geometría sin el uso de variables dentro de un &lt;code&gt;data.frame&lt;/code&gt;. Con la función &lt;code&gt;geom_hline()&lt;/code&gt; y &lt;code&gt;geom_vline()&lt;/code&gt; marcamos los cuadrantes en horizontal y vertical usando una linea discontinua. Por último, dibujamos las etiquetas de cada cuadrante, empleando la función &lt;code&gt;geom_text()&lt;/code&gt;. Cuando usamos diferentes fuentes de &lt;code&gt;data.frames&lt;/code&gt;, uno diferente al principal usado en &lt;code&gt;ggplot()&lt;/code&gt;, debemos indicarlo con el argumento &lt;code&gt;data&lt;/code&gt; en la función de geomtría correspondiente.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;g1 &amp;lt;- ggplot(data_inv_p, 
             aes(pr_anom, ta_anom)) +
         annotate(&amp;quot;rect&amp;quot;, xmin = -Inf, xmax = 0, ymin = 0, ymax = Inf, fill = &amp;quot;#fc9272&amp;quot;, alpha = .6) + #humedo-calido
         annotate(&amp;quot;rect&amp;quot;, xmin = 0, xmax = Inf, ymin = 0, ymax = Inf, fill = &amp;quot;#cb181d&amp;quot;, alpha = .6) + #seco-calido
         annotate(&amp;quot;rect&amp;quot;, xmin = -Inf, xmax = 0, ymin = -Inf, ymax = 0, fill = &amp;quot;#2171b5&amp;quot;, alpha = .6) + #humedo-frio
         annotate(&amp;quot;rect&amp;quot;, xmin = 0, xmax = Inf, ymin = -Inf, ymax = 0, fill = &amp;quot;#c6dbef&amp;quot;, alpha = .6) + #seco-frio
       geom_hline(yintercept = 0,
                  linetype = &amp;quot;dashed&amp;quot;) +
       geom_vline(xintercept = 0,
                  linetype = &amp;quot;dashed&amp;quot;) +
       geom_text(data = bglab, 
                     aes(x, y, label = lab, hjust = hjust, vjust = vjust),
                     fontface = &amp;quot;italic&amp;quot;, size = 5, 
                     angle = 90, colour = &amp;quot;white&amp;quot;)

g1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/visualizar-anomalias-climaticas/index.es_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;3507&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parte-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 3&lt;/h3&gt;
&lt;p&gt;En la tercera parte simplemente añadimos los puntos de las anomalías y las etiquetas de los años. La función &lt;code&gt;geom_text_repel()&lt;/code&gt; es similar a la que conocemos por defecto en &lt;code&gt;ggplot2&lt;/code&gt;, &lt;code&gt;geom_text()&lt;/code&gt;, pero evita el sobrlapso entre sí.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;g2 &amp;lt;- g1 + geom_point(aes(fill = symb_point, colour = symb_point),
                      size = 2.8, shape = 21, show.legend = FALSE) +
           geom_text_repel(aes(label = labyr, fontface = lab_font),
                           max.iter = 5000, 
                           size = 3.5) 
g2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 25 rows containing missing values (geom_text_repel).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/visualizar-anomalias-climaticas/index.es_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;3507&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parte-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 4&lt;/h3&gt;
&lt;p&gt;En la última parte ajustamos, además del estilo general, los ejes, el tipo de color y el (sub)título. Recuerda que cambiamos el signo en las anomalías de precipitación. Por eso, debemos usar los argumentos &lt;code&gt;breaks&lt;/code&gt; y &lt;code&gt;labels&lt;/code&gt; en la función &lt;code&gt;scale_x_continouous()&lt;/code&gt; para revertir el signo en las etiquetas correspondientes a los cortes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;g3 &amp;lt;- g2 + scale_x_continuous(&amp;quot;Anomalía de precipitación en %&amp;quot;,
                              breaks = seq(-100, 250, 10) * -1,
                              labels = seq(-100, 250, 10),
                              limits = c(min(data_inv_p$pr_anom), 100)) +
           scale_y_continuous(&amp;quot;Anomalía de temperatura media en ºC&amp;quot;,
                              breaks = seq(-2, 2, 0.5)) +
           scale_fill_manual(values = c(&amp;quot;black&amp;quot;, &amp;quot;white&amp;quot;)) +
           scale_colour_manual(values = rev(c(&amp;quot;black&amp;quot;, &amp;quot;white&amp;quot;))) +
           labs(title = &amp;quot;Anomalías invernales en Tenerife Sur&amp;quot;, 
                caption = &amp;quot;Datos: AEMET\nPeriodo normal 1981-2010&amp;quot;) +
           theme_bw()

g3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 25 rows containing missing values (geom_text_repel).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2020/visualizar-anomalias-climaticas/index.es_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;3507&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Visualizar anomalías de precipitación mensual</title>
      <link>https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/</link>
      <pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/</guid>
      <description>
&lt;script src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Normalmente cuando visualizamos anomalías de precipitación mensual, simplemente usamos un gráfico de barras indicando con color rojo y azul valores negativos y positivos. No obstante, no nos explica el contexto general de estas mismas anomalías. Por ejemplo, ¿cuál fue la anomalía más alta o más baja en cada mes? En principio, podríamos usar un &lt;em&gt;boxplot&lt;/em&gt; para visualizar la distribución de las anomalías, pero en este caso concreto no encajarían bien estéticamente, por lo que debemos buscar una alternativa. Aquí os presento una forma gráfica muy útil.&lt;/p&gt;
&lt;div id=&#34;paquetes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Paquetes&lt;/h2&gt;
&lt;p&gt;En este post usaremos los siguientes paquetes:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;col width=&#34;89%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Paquete&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tidyverse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conjunto de paquetes (visualización y manipulación de datos): ggplot2, dplyr, purrr,etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;readr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Importar datos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ggthemes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Estilos para ggplot2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;lubridate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fácil manipulación de fechas y tiempos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;cowplot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fácil creación de múltiples gráficos con ggplot2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#instalamos los paquetes si hace falta
if(!require(&amp;quot;tidyverse&amp;quot;)) install.packages(&amp;quot;tidyverse&amp;quot;)
if(!require(&amp;quot;ggthemes&amp;quot;)) install.packages(&amp;quot;broom&amp;quot;)
if(!require(&amp;quot;cowplot&amp;quot;)) install.packages(&amp;quot;cowplot&amp;quot;)
if(!require(&amp;quot;lubridate&amp;quot;)) install.packages(&amp;quot;lubridate&amp;quot;)

#paquetes
library(tidyverse) #contiene readr
library(ggthemes)
library(cowplot)
library(lubridate)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;preparar-los-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparar los datos&lt;/h2&gt;
&lt;p&gt;Primero importamos la precipitación diaria de la estación meteorológica seleccionada (&lt;a href=&#34;https://dominicroye.github.io/files/RR_STAID001394.txt&#34;&gt;descarga&lt;/a&gt;). Usaremos datos de Santiago de Compostela (España) accesible a través de &lt;a href=&#34;https://eca.knmi.nl&#34;&gt;ECA&amp;amp;D&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;paso-1-importar-los-datos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Paso 1: importar los datos&lt;/h3&gt;
&lt;p&gt;No sólo importamos los datos en formato &lt;em&gt;csv&lt;/em&gt;, sino también hacemos los primeros cambios. Saltamos las primeras 21 filas que contienen información sobre la estación meteorológica. Además, convertimos la fecha a clase &lt;code&gt;date&lt;/code&gt; y reemplazamos valores ausentes (-9999) por &lt;code&gt;NA&lt;/code&gt;. La precipitación está en 0.1 mm, por tanto, debemos dividir los valores por 10. Después seleccionamos las columnas &lt;em&gt;DATE&lt;/em&gt; y &lt;em&gt;RR&lt;/em&gt;, y las renombramos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- read_csv(&amp;quot;RR_STAID001394.txt&amp;quot;, skip = 21) %&amp;gt;%
             mutate(DATE = ymd(DATE), RR = ifelse(RR == -9999, NA, RR/10)) %&amp;gt;%
               select(DATE:RR) %&amp;gt;% 
             rename(date = DATE, pr = RR)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 27606 Columns: 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Column specification --------------------------------------------------------
## Delimiter: &amp;quot;,&amp;quot;
## dbl (5): STAID, SOUID, DATE, RR, Q_RR&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## i Use `spec()` to retrieve the full column specification for this data.
## i Specify the column types or set `show_col_types = FALSE` to quiet this message.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 27,606 x 2
##    date          pr
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 1943-11-01   0.6
##  2 1943-11-02   0  
##  3 1943-11-03   0  
##  4 1943-11-04   0  
##  5 1943-11-05   0  
##  6 1943-11-06   0  
##  7 1943-11-07   0  
##  8 1943-11-08   0  
##  9 1943-11-09   0  
## 10 1943-11-10   0  
## # ... with 27,596 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;paso-2-crear-valores-menusales&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Paso 2: crear valores menusales&lt;/h3&gt;
&lt;p&gt;En el segundo paso calculamos las cantidades mensuales de precipitación. Para ello, a) limitamos el período a los años posteriores a 1950, b) añadimos como variable el mes con etiqueta y el año.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- mutate(data, mo = month(date, label = TRUE), yr = year(date)) %&amp;gt;%
            filter(date &amp;gt;= &amp;quot;1950-01-01&amp;quot;) %&amp;gt;%
                group_by(yr, mo) %&amp;gt;% 
                   summarise(prs = sum(pr, na.rm = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &amp;#39;yr&amp;#39;. You can override using the `.groups` argument.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 833 x 3
## # Groups:   yr [70]
##       yr mo      prs
##    &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt; &amp;lt;dbl&amp;gt;
##  1  1950 ene    55.6
##  2  1950 feb   349. 
##  3  1950 mar    85.8
##  4  1950 abr    33.4
##  5  1950 may   272. 
##  6  1950 jun   111. 
##  7  1950 jul    35.4
##  8  1950 ago    76.4
##  9  1950 sep    85  
## 10  1950 oct    53  
## # ... with 823 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;paso-3-estimar-las-anomalías&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Paso 3: estimar las anomalías&lt;/h3&gt;
&lt;p&gt;Ahora debemos estimar los valores normales de cada mes y unir esta tabla a nuestros datos principales para posteriormente poder calcular la anomalía mensual. Expresamos la anomalía en porcentaje y restamos 100 para fijar el promedio en 0. Además, creamos una variable que nos indica si la anomalía es negativa o positiva, y otra con la fecha.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pr_ref &amp;lt;- filter(data, yr &amp;gt; 1981, yr &amp;lt;= 2010) %&amp;gt;%
                   group_by(mo) %&amp;gt;%
                      summarise(pr_ref = mean(prs))

data &amp;lt;- left_join(data, pr_ref, by = &amp;quot;mo&amp;quot;)

data &amp;lt;- mutate(data, 
               anom = (prs*100/pr_ref)-100, 
               date = str_c(yr, as.numeric(mo), 1, sep = &amp;quot;-&amp;quot;) %&amp;gt;% ymd(),
               sign= ifelse(anom &amp;gt; 0, &amp;quot;pos&amp;quot;, &amp;quot;neg&amp;quot;) %&amp;gt;% factor(c(&amp;quot;pos&amp;quot;, &amp;quot;neg&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ya podemos hacer un primer ensayo de un gráfico de anomalías (la versión clásica), para ello filtramos el año 2018. En este caso usamos la geometría de barras, recuerda que por defecto la función &lt;code&gt;geom_bar()&lt;/code&gt; aplica el conteo a la variable. No obstante, en este caso conocemos &lt;code&gt;y&lt;/code&gt;, por tanto indicamos con el argumento &lt;code&gt;stat = &#34;identity&#34;&lt;/code&gt; que debe usar el valor dado en &lt;code&gt;aes()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(data, yr == 2018) %&amp;gt;%
   ggplot(aes(date, anom, fill = sign)) + 
       geom_bar(stat = &amp;quot;identity&amp;quot;, show.legend = FALSE) + 
    scale_x_date(date_breaks = &amp;quot;month&amp;quot;, date_labels = &amp;quot;%b&amp;quot;) +
    scale_y_continuous(breaks = seq(-100, 100, 20)) +
    scale_fill_manual(values = c(&amp;quot;#99000d&amp;quot;, &amp;quot;#034e7b&amp;quot;)) +
         labs(y = &amp;quot;Anomalía de precipitación (%)&amp;quot;, x = &amp;quot;&amp;quot;) +
          theme_hc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;paso-4-calcular-las-medidas-estadísticas&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Paso 4: calcular las medidas estadísticas&lt;/h3&gt;
&lt;p&gt;En este último paso estimamos el valor máximo, mínimo, el cuantil 25%/75% y el rango intercuartil por mes de toda la serie temporal.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_norm &amp;lt;-     group_by(data, mo) %&amp;gt;%
                     summarise(mx = max(anom),
                               min = min(anom),
                               q25 = quantile(anom, .25),
                               q75 = quantile(anom, .75),
                               iqr = q75-q25)

data_norm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 12 x 6
##    mo       mx    min   q25   q75   iqr
##    &amp;lt;ord&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 ene    193.  -89.6 -43.6 56.3   99.9
##  2 feb    320.  -96.5 -51.2 77.7  129. 
##  3 mar    381. -100   -40.6 88.2  129. 
##  4 abr    198.  -93.6 -51.2 17.1   68.3
##  5 may    141.  -90.1 -45.2 17.0   62.2
##  6 jun    419.  -99.3 -58.2 50.0  108. 
##  7 jul    311.  -98.2 -77.3 27.1  104. 
##  8 ago    264. -100   -68.2 39.8  108. 
##  9 sep    241.  -99.2 -64.9 48.6  113. 
## 10 oct    220.  -99.0 -54.5  4.69  59.2
## 11 nov    137.  -98.8 -44.0 39.7   83.7
## 12 dic    245.  -91.8 -49.8 36.0   85.8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;crear-el-gráfico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Crear el gráfico&lt;/h2&gt;
&lt;p&gt;Para crear el gráfico de anomalías con leyenda es necesario separar el gráfico principal de las leyendas.&lt;/p&gt;
&lt;div id=&#34;parte-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 1&lt;/h3&gt;
&lt;p&gt;En esta primera parte vamos añadiendo capa por capa los diferentes elementos: 1) el rango de anomalías máximo-mínimo 2) el rango intercuartil 3) las anomalías del año 2018.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#rango de anomalías máximo-mínimo 
g1.1 &amp;lt;- ggplot(data_norm)+
           geom_crossbar(aes(x = mo, y = 0, ymin = min, ymax = mx),
                        fatten = 0, fill = &amp;quot;grey90&amp;quot;, colour = &amp;quot;NA&amp;quot;)

g1.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#añadinos el rango intercuartil
g1.2 &amp;lt;- g1.1 + geom_crossbar(aes(x = mo, y = 0, ymin = q25, ymax = q75),
                              fatten = 0, fill = &amp;quot;grey70&amp;quot;)

g1.2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#añadimos las anomalías del año 2018

g1.3 &amp;lt;- g1.2 + geom_crossbar(data = filter(data, yr == 2018),
                aes(x = mo, y = 0, ymin = 0, ymax = anom, fill = sign),
                fatten = 0, width = 0.7, alpha = .7, colour = &amp;quot;NA&amp;quot;,
                show.legend = FALSE)
g1.3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-8-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Finalmente añadimos unos últimos ajustes de estilo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;g1 &amp;lt;- g1.3 + geom_hline(yintercept = 0)+
               scale_fill_manual(values=c(&amp;quot;#99000d&amp;quot;,&amp;quot;#034e7b&amp;quot;))+
               scale_y_continuous(&amp;quot;Anomalía de precipitación (%)&amp;quot;,
                                   breaks = seq(-100, 500, 25),
                                   expand = c(0, 5))+
            labs(x = &amp;quot;&amp;quot;,
                 title = &amp;quot;Anomalía de precipitación en Santiago de Compostela 2018&amp;quot;,
                 caption=&amp;quot;Dominic Royé (@dr_xeo) | Datos: eca.knmi.nl&amp;quot;)+
            theme_hc()
g1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parte-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 2&lt;/h3&gt;
&lt;p&gt;Todavía nos falta una leyenda. Primero la creamos para los valores normales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#datos de la leyenda
legend &amp;lt;- filter(data_norm, mo == &amp;quot;ene&amp;quot;)

legend_lab &amp;lt;- gather(legend, stat, y, mx:q75) %&amp;gt;%
                 mutate(stat = factor(stat, stat, c(&amp;quot;máximo&amp;quot;,
                                                   &amp;quot;mínimo&amp;quot;,
                                                   &amp;quot;Cuantil 25%&amp;quot;,
                                                   &amp;quot;Cuantil 75%&amp;quot;)) %&amp;gt;%
                                            as.character())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: attributes are not identical across measure variables;
## they will be dropped&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#gráfico de la leyenda
g2 &amp;lt;- legend %&amp;gt;% ggplot()+
                  geom_crossbar(aes(x = mo, y = 0, ymin = min, ymax = mx),
                                fatten = 0, fill = &amp;quot;grey90&amp;quot;, colour = &amp;quot;NA&amp;quot;, width = 0.2) +
                  geom_crossbar(aes(x = mo, y = 0, ymin = q25, ymax = q75),
                                fatten = 0, fill = &amp;quot;grey70&amp;quot;, width = 0.2) +
                  geom_text(data = legend_lab, 
                            aes(x = mo, y = y+c(12,-8,-10,12), label = stat), 
                            fontface = &amp;quot;bold&amp;quot;, size = 2) +
                   annotate(&amp;quot;text&amp;quot;, x = 1.18, y = 40, 
                            label = &amp;quot;Período 1950-2018&amp;quot;, angle = 90, size = 3) +
              theme_void() + 
                theme(plot.margin = unit(c(0, 0, 0, 0), &amp;quot;cm&amp;quot;))

g2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Segundo, creamos otra leyenda para las anomalías actuales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;legend2 &amp;lt;- filter(data, yr == 1950, mo %in% c(&amp;quot;ene&amp;quot;,&amp;quot;feb&amp;quot;)) %&amp;gt;% 
              ungroup() %&amp;gt;% 
            select(mo, anom, sign)

legend2[2,1] &amp;lt;- &amp;quot;ene&amp;quot;

legend_lab2 &amp;lt;- data.frame(mo = rep(&amp;quot;ene&amp;quot;, 3), 
                          anom= c(110, 3, -70), 
                          label = c(&amp;quot;Anomalía positiva&amp;quot;, &amp;quot;Promedio&amp;quot;, &amp;quot;Anomalía negativa&amp;quot;))

g3 &amp;lt;-  ggplot() + 
         geom_bar(data = legend2,
                aes(x = mo, y = anom, fill = sign),
                   alpha = .6, colour = &amp;quot;NA&amp;quot;, stat = &amp;quot;identity&amp;quot;, show.legend = FALSE, width = 0.2) +
         geom_segment(aes(x = .85, y = 0, xend = 1.15, yend = 0), linetype = &amp;quot;dashed&amp;quot;) +
         geom_text(data = legend_lab2, aes(x = mo, y = anom+c(10,5,-13), label = label), fontface = &amp;quot;bold&amp;quot;, size = 2) +
         annotate(&amp;quot;text&amp;quot;, x = 1.25, y = 20, 
                  label =&amp;quot;Referencia 1971-2010&amp;quot;, angle = 90, size = 3) +
         scale_fill_manual(values = c(&amp;quot;#99000d&amp;quot;, &amp;quot;#034e7b&amp;quot;)) +
        theme_void() +
         theme(plot.margin = unit(c(0, 0, 0, 0), &amp;quot;cm&amp;quot;))

g3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parte-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 3&lt;/h3&gt;
&lt;p&gt;Para finalizar sólo debemos unir el gráfico y las leyendas con ayuda del paquete &lt;code&gt;cowplot&lt;/code&gt;. La función princial de &lt;code&gt;cowplot&lt;/code&gt; es &lt;code&gt;plot_grid()&lt;/code&gt; que ayuda en combinar diferentes gráficos. No obstante, en este caso se hace necesario usar unas funciones más flexibles para crear formatos menos habituales. La función &lt;code&gt;ggdraw()&lt;/code&gt; configura la capa básica del gráfico, y las funciones que están destinadas a operar en esta capa comienzan con &lt;code&gt;draw_*&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- ggdraw() +
       draw_plot(g1, x = 0, y = .3, width = 1, height = 0.6) +
       draw_plot(g2, x = 0, y = .15, width = .2, height = .15) +
       draw_plot(g3, x = 0.08, y = .15, width = .2, height = .15)

p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;3729&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;save_plot(&amp;quot;pr_anomalia2016_scq.png&amp;quot;, p, dpi = 300, base_width = 12.43, base_height = 8.42)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;múltiples-facetas&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Múltiples facetas&lt;/h2&gt;
&lt;p&gt;En este apartado haremos el mismo gráfico como en el anterior, pero para varios años.&lt;/p&gt;
&lt;div id=&#34;parte-1-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Parte 1&lt;/h3&gt;
&lt;p&gt;Únicamente debemos filtrar por un conjunto de años, en este caso de 2016 a 2018, usando el operador &lt;code&gt;%in%&lt;/code&gt;, además añadimos la función &lt;code&gt;facet_grid()&lt;/code&gt; a &lt;code&gt;ggplot&lt;/code&gt;, lo que nos permite plotear los gráficos según una variable. La formula usada para la función de facetas es similar al uso en modelos: &lt;code&gt;variable_por_fila ~ variable_por_columna&lt;/code&gt;. Cuando no tenemos una variable en columna debemos usar el &lt;code&gt;.&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#rango de anomalias maximo-minimo 
g1.1 &amp;lt;- ggplot(data_norm)+
           geom_crossbar(aes(x = mo, y = 0, ymin = min, ymax = mx),
                        fatten = 0, fill = &amp;quot;grey90&amp;quot;, colour = &amp;quot;NA&amp;quot;)

g1.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#añadinos el rango intercuartil
g1.2 &amp;lt;- g1.1 + geom_crossbar(aes(x = mo, y = 0, ymin = q25, ymax = q75),
                              fatten = 0, fill = &amp;quot;grey70&amp;quot;)

g1.2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-13-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#añadimos las anomalías del año 2016-2018

g1.3 &amp;lt;- g1.2 + geom_crossbar(data = filter(data, yr %in% 2016:2018),
                aes(x = mo, y = 0, ymin = 0, ymax = anom, fill = sign),
                fatten = 0, width = 0.7, alpha = .7, colour = &amp;quot;NA&amp;quot;,
                show.legend = FALSE) +
               facet_grid(yr ~ .)
g1.3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-13-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Finalmente, añadimos unos últimos ajustes de estilo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;g1 &amp;lt;- g1.3 + geom_hline(yintercept = 0)+
               scale_fill_manual(values=c(&amp;quot;#99000d&amp;quot;,&amp;quot;#034e7b&amp;quot;))+
               scale_y_continuous(&amp;quot;Anomalía de precipitación (%)&amp;quot;,
                                   breaks = seq(-100, 500, 50),
                                   expand = c(0, 5))+
            labs(x = &amp;quot;&amp;quot;,
                 title = &amp;quot;Anomalía de precipitación en Santiago de Compostela&amp;quot;,
                 caption=&amp;quot;Dominic Royé (@dr_xeo) | Datos: eca.knmi.nl&amp;quot;)+
            theme_hc()
g1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;3729&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Usamos la misma leyenda universal creada para el gráfico anterior.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;parte-2-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Parte 2&lt;/h2&gt;
&lt;p&gt;Para finalizar, sólo unimos el gráfico y las leyendas con ayuda del paquete &lt;code&gt;cowplot&lt;/code&gt;. Lo único que debemos ajustar aquí son los argumentos en la función &lt;code&gt;draw_plot()&lt;/code&gt; para colocar correctamente las diferentes partes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- ggdraw() +
       draw_plot(g1, x = 0, y = .18, width = 1, height = 0.8) +
       draw_plot(g2, x = 0, y = .08, width = .2, height = .15) +
       draw_plot(g3, x = 0.08, y = .08, width = .2, height = .15)

p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dominicroye.github.io/es/2019/visualizar-anomalias-de-precipitacion-mensual/index.es_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;3729&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;save_plot(&amp;quot;pr_anomalia20162018_scq.png&amp;quot;, p, dpi = 300, base_width = 12.43, base_height = 8.42)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Os tempos e o clima de Galicia</title>
      <link>https://dominicroye.github.io/es/publication/2019-book-os-tempos-galicia-xerais/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/publication/2019-book-os-tempos-galicia-xerais/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Spatio-temporal variations of cloud fraction based on circulation types in the Iberian Peninsula</title>
      <link>https://dominicroye.github.io/es/publication/2018-cloudiness-peninsula-ij-climatology/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/publication/2018-cloudiness-peninsula-ij-climatology/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Clima y tiempo</title>
      <link>https://dominicroye.github.io/es/project/climate/</link>
      <pubDate>Thu, 27 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/project/climate/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;











&lt;div class=&#34;gallery&#34;&gt;

  
  
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/001_snow_prob.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/001_snow_prob_hu86e7fba3c7543bd88d84d900955bdb5a_745930_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;001_snow_prob.jpg&#34; width=&#34;194&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/002_CC_Barcelona_SSP585.gif&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/002_CC_Barcelona_SSP585_hu03e49e09f29afd5bae1f79bed50aa7cd_1650726_0x190_resize_lanczos.gif&#34; loading=&#34;lazy&#34; alt=&#34;002_CC_Barcelona_SSP585.gif&#34; width=&#34;161&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/003_climate_circles_eu.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/003_climate_circles_eu_hu55695133366a4ef27ec0474577288291_2755892_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;003_climate_circles_eu.png&#34; width=&#34;143&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/004_climate_circles_US.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/004_climate_circles_US_hu11943e13b6168c38aa1ebb734bccae2a_2600316_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;004_climate_circles_US.png&#34; width=&#34;146&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/005_sequias_optimistas2.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/005_sequias_optimistas2_hu75392e4b8e8575bbcb6ae4453fd14b3f_3473856_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;005_sequias_optimistas2.png&#34; width=&#34;285&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/006_sequias2.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/006_sequias2_hu51173d0307a4ecaef911c816a12da031_1322674_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;006_sequias2.png&#34; width=&#34;233&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/acces_mapa_esp.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/acces_mapa_esp_hu972bfcfbc66db74c6800d5cd0e8cb38b_242466_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;acces_mapa_esp.png&#34; width=&#34;192&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/anomalia_verano_maps.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/anomalia_verano_maps_hu32d3d85a75f6b2360377d210a25c927b_878681_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;anomalia_verano_maps.jpg&#34; width=&#34;190&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_barcelona.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_barcelona_hu0bd99db1e6f1e55a921acff7bffe48e6_299060_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;anomalias_barcelona.png&#34; width=&#34;309&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_Madrid.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_Madrid_hu63b6c369e4ef81ddbf9c3485e1a2164d_307708_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;anomalias_Madrid.png&#34; width=&#34;281&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_Madrid_invierno.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_Madrid_invierno_hu35b7ca0ab0cfa37f0ac0ff3f2d995e0e_453889_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;anomalias_Madrid_invierno.png&#34; width=&#34;269&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_ourense.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_ourense_hudea56c07e02ee67777e30bcdd78d6b5f_373132_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;anomalias_ourense.png&#34; width=&#34;269&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_Santiago.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/anomalias_Santiago_hu0bd99db1e6f1e55a921acff7bffe48e6_293696_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;anomalias_Santiago.png&#34; width=&#34;309&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/Barcelona_invierno.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/Barcelona_invierno_hu37e32c3c0e70b9be0c482f652b1f85b1_139483_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;Barcelona_invierno.png&#34; width=&#34;289&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/borrasca_2017.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/borrasca_2017_hu6feb6f43a07377f2a81776c10e43c4ac_1572317_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;borrasca_2017.png&#34; width=&#34;331&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/CI_prism.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/CI_prism_hu5b729d5f4c9569aaf22affb73448b5e0_317761_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;CI_prism.jpg&#34; width=&#34;269&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/clima_circulos.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/clima_circulos_hu34e84c2b4260520656d09f1db7743b35_1365819_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;clima_circulos.png&#34; width=&#34;281&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/climate_chile.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/climate_chile_hu22f4db6d50cb69f9ef5ec606ab6f2fd4_362725_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;climate_chile.png&#34; width=&#34;217&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/distribution_graph_bcn.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/distribution_graph_bcn_hua42de54457247d81fb6781e3eeb4cf3a_71108_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;distribution_graph_bcn.png&#34; width=&#34;250&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/distribution_temp.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/distribution_temp_hu3599f236f174ab18522d331bb2e3183e_79401_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;distribution_temp.png&#34; width=&#34;247&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/d%C3%ADas_calorosos.gif&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/d%C3%ADas_calorosos_hue72a26de609e2e0fe7e972c7d5d09549_428847_0x190_resize_lanczos.gif&#34; loading=&#34;lazy&#34; alt=&#34;días_calorosos.gif&#34; width=&#34;212&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/ehfdays2022_v2.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/ehfdays2022_v2_hu513cbbb5e96d5a312e5da290ec01671d_1044414_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;ehfdays2022_v2.png&#34; width=&#34;199&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/embasles.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/embasles_hu266e8b0c79850efefbc22001a593eaf8_154158_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;embasles.png&#34; width=&#34;412&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/embasles_timeserie.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/embasles_timeserie_hu76059c320013a535e95efb0d406b20f8_257502_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;embasles_timeserie.png&#34; width=&#34;309&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/europe_max_year_time.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/europe_max_year_time_hu9cbb776dbf7cfc8f6ad7970aa4c371ae_1490065_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;europe_max_year_time.png&#34; width=&#34;206&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/europe_tropical.gif&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/europe_tropical_hu96758340c03b74d6dc9e3bebc16ca78f_422563_0x190_resize_lanczos.gif&#34; loading=&#34;lazy&#34; alt=&#34;europe_tropical.gif&#34; width=&#34;254&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/extreme_heat_spain_spain.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/extreme_heat_spain_spain_hufe268d34aff6e0ee040eab8eab0e83ad_1269751_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;extreme_heat_spain_spain.png&#34; width=&#34;204&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/extreme_temperature_espa%C3%B1a.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/extreme_temperature_espa%C3%B1a_hu0a3ba271f4043aaa0493818aacfacdf3_408549_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;extreme_temperature_españa.jpg&#34; width=&#34;194&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/first_summer.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/first_summer_hubc1b5198bd7e665fd6b42e7d6b4a1df3_109874_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;first_summer.png&#34; width=&#34;256&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/gradosdia.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/gradosdia_hu32a3e47e0b0bf2d55a63dba5844d5308_189167_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;gradosdia.png&#34; width=&#34;239&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_mx_min_SCQ.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_mx_min_SCQ_hu8989fe5a64f604de631bc5fc6d13799a_509232_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;horas_mx_min_SCQ.png&#34; width=&#34;173&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_mx_min_VIGO.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_mx_min_VIGO_huf95d53c928eeb8a73862bd329b76c19f_504862_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;horas_mx_min_VIGO.png&#34; width=&#34;172&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_2017.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_2017_hu41fc0110ca3ba0ba34f503bce65cecdb_254006_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;horas_sol_anomalias_2017.png&#34; width=&#34;190&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_2021.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_2021_huf57db5249fb964ec2d852cac793a34c4_1637949_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;horas_sol_anomalias_2021.png&#34; width=&#34;345&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_fr.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_fr_hu43cf02e47f2da1e8ec4ad95821a9334a_2658446_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;horas_sol_anomalias_fr.jpg&#34; width=&#34;196&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_ger.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_ger_hu2b071b050c113fd4b1f3924197e152b2_970455_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;horas_sol_anomalias_ger.jpg&#34; width=&#34;271&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_mensual_2021.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_anomalias_mensual_2021_hu058c2f427321800065dd2bd97d3bc529_1168522_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;horas_sol_anomalias_mensual_2021.png&#34; width=&#34;248&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_feb_ranking.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horas_sol_feb_ranking_huc399596e083b58c3db45369755756b72_1123312_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;horas_sol_feb_ranking.jpg&#34; width=&#34;230&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/horasdesol2017.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/horasdesol2017_hu60831b41b7f2cf2bc0b217c84e9546c4_63097_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;horasdesol2017.png&#34; width=&#34;161&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/leslie_stream.gif&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/leslie_stream_hu399641d68d7d25b2aacaeca99066e0c9_3013906_0x190_resize_lanczos.gif&#34; loading=&#34;lazy&#34; alt=&#34;leslie_stream.gif&#34; width=&#34;224&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/nieve_peninsula.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/nieve_peninsula_hu2480a96dfd633ed996de29890352af1d_278979_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;nieve_peninsula.jpg&#34; width=&#34;248&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/nubosidad_abril2020.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/nubosidad_abril2020_hue776a334b902d7828bf5c7a8aa11ccb3_193676_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;nubosidad_abril2020.jpg&#34; width=&#34;328&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/oleaje_galicia.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/oleaje_galicia_hud51b6f85087bd7b092aeda29691c6eaa_425605_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;oleaje_galicia.jpg&#34; width=&#34;183&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/periodos_humedos.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/periodos_humedos_huc8dd876172758c362556d8267a682a8a_1602145_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;periodos_humedos.jpg&#34; width=&#34;229&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/pluvi_regimes_usa.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/pluvi_regimes_usa_hu087a37dedfa32bbdf68e8e3675cb64bc_76222_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;pluvi_regimes_usa.png&#34; width=&#34;361&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/pr_anomalia2017_scq.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/pr_anomalia2017_scq_hu27ff1b2e2c3b95d43f5596930aedcebc_80099_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;pr_anomalia2017_scq.png&#34; width=&#34;369&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/pr_anomalia2018.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/pr_anomalia2018_hua56fb437efd0f1f930fc3cc036ac0985_78927_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;pr_anomalia2018.png&#34; width=&#34;368&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/rachas_estaciones.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/rachas_estaciones_hu5acbc6e1c1fc3331d84eebb27c63579c_489686_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;rachas_estaciones.png&#34; width=&#34;197&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/rachas_secas.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/rachas_secas_hu8791db0f547495f67a795820c682449f_131804_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;rachas_secas.png&#34; width=&#34;196&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/riverdischarge.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/riverdischarge_hufd3eb109801e08c774a056e740756eb3_3766446_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;riverdischarge.png&#34; width=&#34;228&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/riverdischarge_2022.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/riverdischarge_2022_hucd89db59af2367db8e3672569ec1fa66_151772_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;riverdischarge_2022.png&#34; width=&#34;190&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/Santander_invierno.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/Santander_invierno_huc592bbdd939345a408a12073e89544fe_137364_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;Santander_invierno.png&#34; width=&#34;289&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_invierno.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_invierno_hue3d57a207ec93234bc5560129c5a71c2_140090_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;Santiago_invierno.png&#34; width=&#34;289&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_precip_diaria_2019.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_precip_diaria_2019_hua83da6cf222b97da01d147090d7d44b3_360092_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;Santiago_precip_diaria_2019.png&#34; width=&#34;152&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_tmax_2019.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_tmax_2019_hua83da6cf222b97da01d147090d7d44b3_404911_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;Santiago_tmax_2019.png&#34; width=&#34;152&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_viento_2019.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/Santiago_viento_2019_hua83da6cf222b97da01d147090d7d44b3_566812_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;Santiago_viento_2019.png&#34; width=&#34;152&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/sequia.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/sequia_hu0c6650d595303ea8a58ca4d45123e2f0_3756184_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;sequia.png&#34; width=&#34;223&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/sequia_anual_canarias.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/sequia_anual_canarias_hu1ab0853dae6e9dfb97e4b7299102fcdb_466309_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;sequia_anual_canarias.jpg&#34; width=&#34;366&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/sequia_decada.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/sequia_decada_huc8dd876172758c362556d8267a682a8a_1788565_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;sequia_decada.png&#34; width=&#34;220&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/sequ%C3%ADa_canarias.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/sequ%C3%ADa_canarias_huc8dd876172758c362556d8267a682a8a_556569_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;sequía_canarias.jpg&#34; width=&#34;196&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/ss_anomaly2017_scq.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/ss_anomaly2017_scq_hu1da600b47f0181010d65dd8d7fdd14a4_265908_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;ss_anomaly2017_scq.png&#34; width=&#34;303&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/sst_anom_med2%20.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/sst_anom_med2%20_hue581938679983103c0f5ebcc95a717ee_2811627_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;sst_anom_med2 .png&#34; width=&#34;385&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/trayectios_ciclones.png&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/trayectios_ciclones_hu909087ce66bfde2a0e0ca88d495eaa71_721165_0x190_resize_lanczos_3.png&#34; loading=&#34;lazy&#34; alt=&#34;trayectios_ciclones.png&#34; width=&#34;654&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  
    
    
    
    
    
    &lt;a data-fancybox=&#34;gallery-climate&#34; href=&#34;https://dominicroye.github.io/media/albums/climate/warming_stripes_madrid.jpg&#34; &gt;
      &lt;img src=&#34;https://dominicroye.github.io/media/albums/climate/warming_stripes_madrid_hu4cfa8317745d86f474be304fcc1e100b_155776_0x190_resize_q75_lanczos.jpg&#34; loading=&#34;lazy&#34; alt=&#34;warming_stripes_madrid.jpg&#34; width=&#34;561&#34; height=&#34;190&#34;&gt;
    &lt;/a&gt;
  

&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Animaciones</title>
      <link>https://dominicroye.github.io/es/project/animations/</link>
      <pubDate>Sun, 27 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://dominicroye.github.io/es/project/animations/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/731330231&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily maximum temperature throughout the year in Europe. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/714706091&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily maximum temperature throughout the year in China. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/714706631&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily maximum temperature throughout the year in the Indian subcontinent. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/714706684&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily precipitation throughout the year in Brazil. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/714707894&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily maximum temperature throughout the year in Brazil. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/547991537&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

The average temperature of 24 hours in August 2020 for Europe. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/547988062&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

The average temperature of 24 hours in January 2020. Data: &lt;a href=&#34;https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ERA5-Land&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/463433737&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily rainfall throughout the year in Australia. Data: &lt;a href=&#34;https://www.longpaddock.qld.gov.au/silo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SILO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/456174777&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily maximum temperature throughout the year in Australia. Data: &lt;a href=&#34;https://www.longpaddock.qld.gov.au/silo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SILO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/423985141&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

How do the spatial patterns of daily precipitation change throughout the year in Europe? Data: &lt;a href=&#34;https://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;E-OBS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/423994388&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily maximum temperature throughout the year in the contiguous USA. Data: &lt;a href=&#34;http://www.prism.oregonstate.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PRISM&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/423985180&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily maximum temperature throughout the year in Europe. Data: &lt;a href=&#34;https://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;E-OBS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/423985224&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

How do the spatial patterns of daily precipitation change throughout the year in mainland Spain and the Balearic Islands? Data: &lt;a href=&#34;https://digital.csic.es/handle/10261/141218&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SPREAD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/423985381&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Smoothed daily sea surface temperature throughout the year for the Northeast Atlantic, the Mediterranean, North and Black Sea. Data: &lt;a href=&#34;https://data.nodc.noaa.gov/cgi-bin/iso?id=gov.noaa.ncdc:C00680&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NOAA/NODC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/423986810&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Probability of a summer day (maximum temperature greater than 25ºC/77ºF) through the year in Europe. Data: &lt;a href=&#34;https://surfobs.climate.copernicus.eu/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;E-OBS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/423984146&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Probability of a summer day (maximum temperature greater than 25ºC/77ºF) through the year in the Contiguous United States. Data: &lt;a href=&#34;http://www.prism.oregonstate.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PRISM&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/361834516&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Probability of a summer day (maximum temperature greater than 25ºC) through the year in Australia. Data: &lt;a href=&#34;https://www.longpaddock.qld.gov.au/silo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SILO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/310077447&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Probability of a frost day (minimum temperature less than 0ºC) through the year in Europe. Data: &lt;a href=&#34;http://c3surf.knmi.nl/dataaccess/access_eobs.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;E-OBS 18e&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/310070253&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Probability of a frost day (minimum temperature less than 0ºC/32ºF) through the year in the Contiguous United States. Data: &lt;a href=&#34;https://developers.google.com/earth-engine/datasets/catalog/OREGONSTATE_PRISM_AN81m&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PRISM&lt;/a&gt;. Platform: &lt;a href=&#34;https://earthengine.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Earth Engine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/drxeo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
